---
title: "2024 BSAI FHS Bridging Analyses"
author: "Maia Kapur maia.kapur@noaa.gov"
format: html
editor: source
toc: true
toc-depth: 2
---

```{r, include = FALSE, warning = FALSE, message = FALSE}
library(r4ss)
library(here)
library(dplyr)
library(ggplot2)
theme_set(afscassess::theme_report())

colvec <- c("dodgerblue4", "#ffb703","#219ebc", "#023047",  "#fb8500")

year <- 2024
old_mdl_fldr <- here::here(year,'mgmt','18.2c_2020')
mod18.2c_2020 <- mod_2020 <- SS_output(old_mdl_fldr, verbose = FALSE)
```

# Overview

This electronic document describes the analyses undertaken to bridge the last "full" assessment of BSAI Flathead Sole (Monnahan, 2020) into the latest Stock Synthesis (SS3) software version, as well as explorations of sequential inclusion of recent data.

The general workflow was as follows: 

1) Move the 2020 model, referred to as Model 18.2c (2020), from SS3 version 3.30.16 to the the newest SS3 software version as of December 2023 (3.30.22) downloaded from the [NOAA Virtual Lab](https://github.com/nmfs-ost/ss3-source-code/releases). Comparisons between model derived quantities and likelihoods are provided in this document.  

2) Compare the historical and newly-pulled data. The "old data pull approach" (uses code from Drs. McGilliard & Monnahan in a local R package entitled `newsbss`, which is highly customized and not actively maintained. The "newly-pulled" data are obtained using the `afscdata` package. The latter is the preferred method since it is actively maintained and provides a unified approach for many stocks.  

3)  Bridge the data obtained via `afscdata` systematically. Model 18.2c (2020) has catches and fishery length comps through 2020, and everything else through 2019. There is also mean size-at-age data through 2016. We added catches through 2023, with an estimate of 2024 catches, then survey abundance indices, then survey CAALs (marginal survey lengths & ages are ghosted, but included as well), then fishery lengths, then fishery ages. The impact of each of these five steps is documented below. **This bridged model, with updated software and data inputs but no structural changes is labeled as Model 18.2c (2024)**.

```{r include = TRUE, echo = FALSE, warning = FALSE, message = FALSE}
SSplotData(mod18.2c_2020, subplots = 2)
```


# Stock Synthesis Software Update 3.30.22

```{r include = FALSE, echo = FALSE,  warning = FALSE, message = FALSE}
mod18.2c_2020_v33022 <- SS_output(here::here(year,'model_runs','18.2c_2020_ss3v33022'), verbose = FALSE)
ss_compare <- SSsummarize(list(mod18.2c_2020,mod18.2c_2020_v33022))
```

## Warnings

Model 18.2c (2020) had generic warnings about the `recr_dist` method, poor $F_{MSY}$ convergence, and an issue with the final gradient. Only the latter is of concern. Model 18.2c run with the new SS3 software threw the same warnings as well as an indication that the initial value for `parm 11` was greater than the max (`999\>5`); this is the end logit for the survey selex (forcing it to be asymptotic). I am comfortable with the consistency of these warnings and clean them up below; the gradient is identical between models (`r  mod18.2c_2020$maximum_gradient_component`).

## Likelihood Components
```{r include = TRUE, echo = FALSE,  warning = FALSE, message = FALSE}
names(ss_compare$likelihoods)[c(1,2)] <- c('Model 18.2c (2020)', 'Model 18.2c (2020) - software transition')
ss_compare$likelihoods[c(1:7,11),]
SSplotComparisons(ss_compare, print = T, plotdir = here('docs','ss_version_bridge'), legendlabels = names(ss_compare$likelihoods)[c(1,2)], col = colvec)
```


::: panel-tabset
## Spawning Biomass

```{r, include=T, echo = FALSE, warning = FALSE, fig.cap="The spawning biomass trajectory and associated uncertainty are identical between models"}
knitr::include_graphics(here::here('docs','ss_version_bridge','compare2_spawnbio_uncertainty.png'))
```
## Survey Fits

```{r, include=T, echo = FALSE, warning = FALSE, fig.cap="Survey fits are identical between models"}
knitr::include_graphics(here::here('docs','ss_version_bridge','compare13_indices.png'))
```

## Recruitment Time Series

```{r, include=T, echo = FALSE, warning = FALSE, fig.cap="The recruitment time series and associated uncertainty are identical between models"}
knitr::include_graphics(here::here('docs','ss_version_bridge','compare10_recruits_uncertainty.png'))
```

## Unfished Recruitment

```{r, include=T, echo = FALSE, warning = FALSE,fig.cap="The R0 posteriors are identical between models"}
knitr::include_graphics(here::here('docs','ss_version_bridge','compare16_densities_SR_LN(R0).png'))
```
:::

## SS3 Bridging Conclusion

Based on the above explorations, I am comfortable that moving to the latest SS3 version is not impacting model behavior. After completing this exercise, I addressed the `warnings` in the latest model via the following:

  + Change `recr_dist_method` to 4 (line 17) and removing associated stuff lines 99-101
  + Change the `INIT` for Age_DblN_end_logit_Survey to 20 and the MAX to 25 to get rid of the bound error. The selectivity is the same.
  
The warning-free model is in `model_runs/18.2c_2020_ss3v33022w`.


```{r include = FALSE, message = FALSE, warning = FALSE}
m18.2cv33022w <- SS_output(here::here(year,'model_runs','18.2c_2020_ss3v33022w'), verbose = FALSE)
SSplotSelex(m18.2cv33022w, fleets = 2, sexes = 1)
```

# Data Exploration/Comparison
## Big-Picture Data Notes
This section of the script assumes that one has already downloaded and formatted the data one plans to use in the assesssment. To avoid separate scripts doing the same thing, I'm completing that step in `R/2024_analysis.R`. I wrote some functions for the `afscdata` and `afscassess` packages that reshape those data frames into the SS3 format, which is also accomplished in that script. 

The original data pull method is in `R/old_datapull_script.R`. I used that code to download data in the manner consistent with the historical approach, when possible, and below reshape it into the SS3 format for comparison as a one-off. There are several cases where I wasn't able to re-trace the 2020 model's steps, mostly due to deprecated Oracle schemata. 

Bering Flounder is *not* included in the compositional data; Dr. Monnahan caught and corrected this issue in 2020. The total survey biomass and catches do include both species.

**Due to staffing issues** we had to triage the number of otoliths read for all sources in years 2022 and 2023. After consulting with the Age & Growth team, they indicated they could read a *total* of about 750 BSAI FHS otoliths this year. This is a considerable (~75%) reduction given than normally we have about 600-800 otoliths for each source (survey and fishery) for each year; this typically encompasses every collected otolith from each source, so there are not historical ratios to use for guidance. Dr. Kapur decided in January 2024 that the ratio of the Francis weights from Model 18.2c (2020) would guide how the reduction in age-reads was allocated accross sources. The Francis survey age data weights were about 2.5x higher than those for the fishery age data. Using this ratio and splitting age-reads evenly across the two missing years resulted in a request of 107 age-reads for fishery otoliths from each of 2022 & 2023, and 267 age-reads for survey otoliths from each of 2022 & 2023. 

Normally, the number of hauls is used as the input sample size for the compositional data, but doing so for 2022 and 2023 would not reflect the fact that the input data represent far fewer of those hauls for those years. I will later do a sensitivity analysis to how the specification of input sample size for those years impacts model behavior; for now the number of hauls is retained as the default.

The figures at the bottom of this section compare the key data sources both historically and within the new period from both approaches. The text headers describe any discrepancies between approaches.

## Fishery Catches

Both queries call from the `council.comprehensive_blend_ca` table. I ran the `afscassess::clean_catch()` function on the downloaded data, and the summary code for aggregating into tons. **The approaches result in consistent catch histories,** with the understandable exception of in-year catches for 2020 (which were under-estimated). 

```{r load dfs, include = TRUE, echo = FALSE, eval = TRUE, message = FALSE, warning = FALSE}
## Aggregate catch to just year

rbind( mod_2020$catch %>% select(Yr, Obs) %>%
         mutate(src = 'Old'),
       read.csv(here(year,'data','output','fsh_catch_ss3.csv')) %>% mutate(src = 'New') %>% select(Yr = year, Obs = catch_t, src) ) %>%
  ggplot(., aes(x = Yr, y = Obs, col = src )) +
  geom_line() +
  scale_color_manual(values = c('blue','grey22'),
                     labels = c('2024 Model Data', '2020 Model Data'))+
  labs(x = 'Year', y = 'Observed Catch (t)', color = '') +
  geom_vline(data = NULL, aes(xintercept = 2020), linetype = 'dotted', color = 'grey66')

```

## Fishery Length Compositions
The current assessment passes the fishery length comp time series but only fits to year where there are not age-comp data (1977-1999, 2002-2003, 2008 and 2020). I am not thrilled with this approach but have replicated it for consistency.


## Fishery Age Compositions

The old datapull script and `afscdata` both read from `norpac.debriefed_spcomp`, though the latter reads from `mv` and the former doesn't.
  + Years 1994, 1995 and 1998 are not used in the model as length comp data are available.
  + The number of hauls is used as the input sample size; these values were recoverable using the `afscdata` approach.
  + The default `afscdata` approach did not have a means for getting sex-specific values; I simply added these to the summary calls (ignoring unsexed fish) and reformatting things in SS3. 

*I was unable to reproduce the fishery age-comp routine* used for the older version of the model. For reproducibility purposes, I am going to move towards the `afscdata` approach, which requires about 10% of the code to run, and does not require multiple reads of the same data sources. Importantly, I tested Model 18.2c with *only* the age-comp data changed to those available using my new approach and found the impact on derived quantities to be trivial.



See the comments on the figures below for more information.

```{r, include=FALSE, echo = FALSE, warning = FALSE,}
mod_2020_newcomps <- SS_output(here(year, 'model_runs','18.2c_2020_ss3v33022w-newcomps'))
compsummary <- SSsummarize(list(mod_2020,mod_2020_newcomps))
```

::: panel-tabset

### Fish Age Comps from 18.c (2020)

```{r, include=T, echo = FALSE, warning = FALSE, fig.cap="By manual inspection of the values and data plots, the outcomes are very similar, but not identical. It appears there is a slight squashing of observations towards older ages; the input sample sizes are essentially unchanged." }
SSplotComps(mod_2020_newcomps, kind = 'AGE', subplots = 1, datonly = TRUE, maxrows = 6,showsampsize = TRUE, showeffN = FALSE)
```

### Fish Age Comps using `afscdata`
```{r, include=T, echo = FALSE, warning = FALSE, fig.cap="By manual inspection of the values and data plots, the outcomes are very similar, but not identical. It appears there is a slight squashing of observations towards older ages; the input sample sizes are essentially unchanged." }
SSplotComps(mod_2020, kind = 'AGE', subplots = 1, datonly = TRUE, maxrows = 6,showsampsize = TRUE, showeffN = FALSE)

```
### Spawning Biomass, old vs new data

```{r,  include=T, eval = TRUE, echo = FALSE, warning = FALSE, message =FALSE, fig.cap="The impact of the new age comps on model quantities, including spawning biomass and recruitment (and associated uncertainty) and survey fits, when passed to Model 18.2c, is trivial."}
SSplotComparisons(compsummary, 
                  legendlabels = c('Model 18.2c (2020)','Model 18.2c (2020) with new comp data'),
                  subplots = 2)
```

### Recruitment Time Series, old vs new data
```{r, include=T, eval = TRUE, echo = FALSE, warning = FALSE, message =FALSE, fig.cap="The impact of the new age comps on model quantities, including spawning biomass and recruitment (and associated uncertainty) and survey fits, when passed to Model 18.2c, is trivial."}
SSplotComparisons(compsummary, 
                  legendlabels = c('Model 18.2c (2020)','Model 18.2c (2020) with new comp data'),
                  subplots = 12)
```

### Survey Fits, old vs new data

```{r, include=T, echo = FALSE, warning = FALSE, fig.cap="The impact of the new age comps on model quantities, including spawning biomass and recruitment (and associated uncertainty) and survey fits, when passed to Model 18.2c, is trivial."}
SSplotComparisons(compsummary, 
                  legendlabels = c('Model 18.2c (2020)','Model 18.2c (2020) with new comp data'),
                  subplots = 13)
```
:::




## Survey Biomass Data

From the 2020 SAFE: 

>"This assessment used a single survey index of "total" *Hippoglossoides* spp. biomass that included the EBS “standard” survey areas and AI survey areas for the years 1982-2018 (Table 9.9). Survey biomass for *Hippoglossoides* spp. in the Aleutian Islands is very small as compared to that from the EBS shelf survey, and survey biomass for Bering flounder is very small as compared to that of flathead sole. A linear regression is used to estimate a relationship between EBS shelf *Hippoglossoides* spp. survey biomass estimates and AI survey biomass estimates; this relationship is used to estimate AI survey biomass in years when no AI survey occurred (by using the linear equation to find an AI biomass estimate in a particular year based on the EBS biomass estimate for that year)."

Both Dr. Monnohan (per his notes) and I are not thrilled with this approach, since being model-based means that even historical datapoints can change with each new observation (assuming that the output of the lm is used to replace the survey biomass series wholesale, which would be statistically prudent).

I coded the linear model into the `afscdata::bsai_fhs` data extraction function and did *not* use the `afscassess::bts_biomass` function for further post-processing. The former function saves the Synthesis-formatted dataframe directly to `output/`. The resultant index is identical to what was used before.


```{r, include=T, echo = FALSE, warning = FALSE}

rbind( mod_2020$cpue %>% select(Yr, Obs, SE) %>%
         mutate(src = 'Old'),
       read.csv(here(year,'data','output','2023-12-19-ss_survey_index.csv')) %>% mutate(src = 'New') %>% select(Yr = year, Obs = obs, SE = se_log, src) ) %>%
  ggplot(., aes(x = Yr, y = Obs, col = src )) +
  geom_point(alpha = 0.2) +
  geom_errorbar(aes(ymin = Obs - Obs*SE, ymax = Obs+Obs*SE), width = 0) +
  scale_color_manual(values = c('blue','grey22'),
                     labels = c('2024 Model Data', '2020 Model Data'))+
  labs(x = 'Year', y = 'Observed Survey Biomass (t)', color = '')+
  geom_vline(data = NULL, aes(xintercept = 2019), linetype = 'dotted', color = 'grey66')

```

## Survey Compositional Data

**Important**: I could not reproduce the 2020 Model's method of pulling these data from scratch because the schema (`haehnr`) that it calls from has been deleted.

The model uses conditional age-at-length data from the survey as well as marginal length composition data. The marginal survey ages are ghosted into the model for plotting purposes. The workflow for these data are as follows:
  1) Pull the raw data from `racebase` using the `afscdata` approach (see `2024_analysis.R`)
  2) Expand the marginal trawl survey compositional data using the `afscassess` functions
  3) Calculate conditional ages-at-length for each sex via the following. 
    + Starting with the EBS ages, filter out Bering Flounder (code `10140`) and only include the EBS (subarea <= 6) and sexed fish (3)
    + Bin the data into length and age bins greater than 0 (legacy code `BIN_AGE_DATA` and `BIN_LEN_DATA`).
    + Group by bins and tabulate the number in each unique combination; filling missing values from zero
    + Reformat into SS3 syntax.


# Data Bridging
 Importantly, the data updates conducted here are holistic, meaning that the entire time series of data for each component (where available) is replaced with what is currently available in the AKFIN database. A comparison between the data used in the last assessment and the latest version of that dataset is provided for each component above. The model that includes each change is named in the relevant header; these are hosted under `model_runs/`.

## Adding Catches
## Adding Survey Biomass
## Adding Survey CAALs
## Adding Fishery Lengths
## Adding Fishery Ages

## Marginal Survey Ages & Lengths (ghosted)


# Bridged "Update" Model, 18.2c (2024)
This is model 18.2c (2024) and represents an "operational update"; the model structure has not been modified, and only the input data have been revised to reflect the current database. Additional explorations with this model including changes to the
