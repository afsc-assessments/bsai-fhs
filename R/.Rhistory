merge(., xtrayrs, by = 'Yr',all = T) %>%
mutate(c1= Catch.x, c2= Catch.y) %>%
data.frame(.) %>%
select(-Catch.x, -Catch.y) %>%
reshape2::melt(., id = 'Yr') %>%
mutate(value = as.numeric(value), Yr = as.numeric(Yr)) %>%
filter(variable != 'OFL') %>%
filter(Yr %in% c(2016,2019) & variable %in% c(TAC, c1))
merge(mgmt, base20mod$catch %>%
select(Yr, Catch = Obs),
by ='Yr', all.x = TRUE)  %>%
merge(., xtrayrs, by = 'Yr',all = T) %>%
mutate(c1= Catch.x, c2= Catch.y) %>%
data.frame(.) %>%
select(-Catch.x, -Catch.y) %>%
reshape2::melt(., id = 'Yr') %>%
mutate(value = as.numeric(value), Yr = as.numeric(Yr)) %>%
filter(variable != 'OFL') %>%
# filter(Yr %in% c(2016,2019) & variable %in% c(TAC, c1))
ggplot(., aes(x = Yr,y = value, color = variable, group = variable)) +
geom_line(lwd = 1.1) +
ggsidekick::theme_sleek() +
theme(legend.text = element_text(size = 14), legend.position = 'bottom',
axis.text = element_text(size = 14),axis.title  = element_text(size = 14)) +
# scale_x_continuous(limits = c(1990,2025),
#                    breaks =  seq(1990,2025,5),
#                    labels = seq(1990,2025,5)) +
# scale_color_manual(values = cbpal,
#                    labels = c('TAC','ABC','OFL',"Catches in Base Model", "Catches used in Projections" ))+
# annotate('text', x = rep(2020.5,4), y = c(47500,40000,30000, 4500),
#          label = c('OFL','ABC','TAC','Catches'),
#          color = c(cbpal[3:1],'grey44'), size = 6)+
scale_color_manual(values = cbpal,
labels = c('TAC','ABC',"Catches in Base Model", "Catches used in Projections" ))+
# annotate('text', x = rep(2020.5,3), y = c(40000,30000, 4500),
# label = c('ABC','TAC','Catches'),
# color = c(cbpal[2:1],'grey44'), size = 6)+
labs(x = 'Year', y = 'Catch or Harvest Spex (t)', color = '')
mgmt
merge(mgmt, base20mod$catch %>%
select(Yr, Catch = Obs),
by ='Yr', all.x = TRUE)  %>%
merge(., xtrayrs, by = 'Yr',all = T) %>%
mutate(c1= Catch.x, c2= Catch.y) %>%
data.frame(.) %>%
select(-Catch.x, -Catch.y) %>%
reshape2::melt(., id = 'Yr') %>%
mutate(value = as.numeric(value), Yr = as.numeric(Yr)) %>%
filter(variable != 'OFL') %>%
filter(Yr ==2019)
ggplot(., aes(x = Yr,y = value, color = variable, group = variable)) +
geom_line(lwd = 1.1) +
ggsidekick::theme_sleek() +
theme(legend.text = element_text(size = 14), legend.position = 'bottom',
axis.text = element_text(size = 14),axis.title  = element_text(size = 14)) +
scale_x_continuous(limits = c(1990,2025),
breaks =  seq(1990,2025,5),
labels = seq(1990,2025,5)) +
# scale_color_manual(values = cbpal,
#                    labels = c('TAC','ABC','OFL',"Catches in Base Model", "Catches used in Projections" ))+
# annotate('text', x = rep(2020.5,4), y = c(47500,40000,30000, 4500),
#          label = c('OFL','ABC','TAC','Catches'),
#          color = c(cbpal[3:1],'grey44'), size = 6)+
scale_color_manual(values = cbpal,
labels = c('TAC','ABC',"Catches in Base Model", "Catches used in Projections" ))+
# annotate('text', x = rep(2020.5,3), y = c(40000,30000, 4500),
# label = c('ABC','TAC','Catches'),
# color = c(cbpal[2:1],'grey44'), size = 6)+
labs(x = 'Year', y = 'Catch or Harvest Spex (t)', color = '')
merge(mgmt, base20mod$catch %>%
select(Yr, Catch = Obs),
by ='Yr', all.x = TRUE)  %>%
merge(., xtrayrs, by = 'Yr',all = T) %>%
mutate(c1= Catch.x, c2= Catch.y) %>%
data.frame(.) %>%
select(-Catch.x, -Catch.y) %>%
reshape2::melt(., id = 'Yr') %>%
mutate(value = as.numeric(value), Yr = as.numeric(Yr)) %>%
filter(variable != 'OFL') %>%
# filter(Yr ==2019)
ggplot(., aes(x = Yr,y = value, color = variable, group = variable)) +
geom_line(lwd = 1.1) +
ggsidekick::theme_sleek() +
theme(legend.text = element_text(size = 14), legend.position = 'bottom',
axis.text = element_text(size = 14),axis.title  = element_text(size = 14)) +
scale_x_continuous(limits = c(1990,2025),
breaks =  seq(1990,2025,5),
labels = seq(1990,2025,5)) +
# scale_color_manual(values = cbpal,
#                    labels = c('TAC','ABC','OFL',"Catches in Base Model", "Catches used in Projections" ))+
# annotate('text', x = rep(2020.5,4), y = c(47500,40000,30000, 4500),
#          label = c('OFL','ABC','TAC','Catches'),
#          color = c(cbpal[3:1],'grey44'), size = 6)+
scale_color_manual(values = cbpal,
labels = c('TAC','ABC',"Catches in Base Model", "Catches used in Projections" ))+
# annotate('text', x = rep(2020.5,3), y = c(40000,30000, 4500),
# label = c('ABC','TAC','Catches'),
# color = c(cbpal[2:1],'grey44'), size = 6)+
labs(x = 'Year', y = 'Catch or Harvest Spex (t)', color = '')
merge(mgmt, base20mod$catch %>%
select(Yr, Catch = Obs),
by ='Yr', all.x = TRUE)  %>%
merge(., xtrayrs, by = 'Yr',all = T) %>%
mutate(c1= Catch.x, c2= Catch.y) %>%
data.frame(.) %>%
select(-Catch.x, -Catch.y) %>%
reshape2::melt(., id = 'Yr') %>%
mutate(value = as.numeric(value), Yr = as.numeric(Yr)) %>%
filter(variable != 'OFL') %>%
# filter(Yr ==2019)
ggplot(., aes(x = Yr,y = value, color = variable, group = variable)) +
geom_line(lwd = 1.1) +
ggsidekick::theme_sleek() +
theme(legend.text = element_text(size = 14), legend.position = 'bottom',
axis.text = element_text(size = 14),axis.title  = element_text(size = 14)) +
scale_x_continuous(limits = c(1990,2025),
breaks =  seq(1995,2025,5),
labels = seq(1995,2025,5)) +
# scale_color_manual(values = cbpal,
#                    labels = c('TAC','ABC','OFL',"Catches in Base Model", "Catches used in Projections" ))+
# annotate('text', x = rep(2020.5,4), y = c(47500,40000,30000, 4500),
#          label = c('OFL','ABC','TAC','Catches'),
#          color = c(cbpal[3:1],'grey44'), size = 6)+
scale_color_manual(values = cbpal,
labels = c('TAC','ABC',"Catches in Base Model", "Catches used in Projections" ))+
# annotate('text', x = rep(2020.5,3), y = c(40000,30000, 4500),
# label = c('ABC','TAC','Catches'),
# color = c(cbpal[2:1],'grey44'), size = 6)+
labs(x = 'Year', y = 'Catch or Harvest Spex (t)', color = '')
merge(mgmt, base20mod$catch %>%
select(Yr, Catch = Obs),
by ='Yr', all.x = TRUE)  %>%
merge(., xtrayrs, by = 'Yr',all = T) %>%
mutate(c1= Catch.x, c2= Catch.y) %>%
data.frame(.) %>%
select(-Catch.x, -Catch.y) %>%
reshape2::melt(., id = 'Yr') %>%
mutate(value = as.numeric(value), Yr = as.numeric(Yr)) %>%
filter(variable != 'OFL') %>%
# filter(Yr ==2019)
ggplot(., aes(x = Yr,y = value, color = variable, group = variable)) +
geom_line(lwd = 1.1) +
ggsidekick::theme_sleek() +
theme(legend.text = element_text(size = 14), legend.position = 'bottom',
axis.text = element_text(size = 14),axis.title  = element_text(size = 14)) +
scale_x_continuous(limits = c(1990,2025),
breaks =  seq(1995,2025,5),
labels = seq(1995,2025,5)) +
# scale_color_manual(values = cbpal,
#                    labels = c('TAC','ABC','OFL',"Catches in Base Model", "Catches used in Projections" ))+
annotate('text', x = rep(2020.5,4), y = c(47500,40000,30000, 4500),
label = c('OFL','ABC','TAC','Catches'),
color = c(cbpal[3:1],'grey44'), size = 6)+
scale_color_manual(values = cbpal,
labels = c('TAC','ABC',"Catches in Base Model", "Catches used in Projections" ))+
# annotate('text', x = rep(2020.5,3), y = c(40000,30000, 4500),
# label = c('ABC','TAC','Catches'),
# color = c(cbpal[2:1],'grey44'), size = 6)+
labs(x = 'Year', y = 'Catch or Harvest Spex (t)', color = '')
merge(mgmt, base20mod$catch %>%
select(Yr, Catch = Obs),
by ='Yr', all.x = TRUE)  %>%
merge(., xtrayrs, by = 'Yr',all = T) %>%
mutate(c1= Catch.x, c2= Catch.y) %>%
data.frame(.) %>%
select(-Catch.x, -Catch.y) %>%
reshape2::melt(., id = 'Yr') %>%
mutate(value = as.numeric(value), Yr = as.numeric(Yr)) %>%
filter(variable != 'OFL') %>%
# filter(Yr ==2019)
ggplot(., aes(x = Yr,y = value, color = variable, group = variable)) +
geom_line(lwd = 1.1) +
ggsidekick::theme_sleek() +
theme(legend.text = element_text(size = 14), legend.position = 'bottom',
axis.text = element_text(size = 14),axis.title  = element_text(size = 14)) +
scale_x_continuous(limits = c(1990,2025),
breaks =  seq(1995,2025,5),
labels = seq(1995,2025,5)) +
# scale_color_manual(values = cbpal,
#                    labels = c('TAC','ABC','OFL',"Catches in Base Model", "Catches used in Projections" ))+
# annotate('text', x = rep(2020.5,4), y = c(47500,40000,30000, 4500),
#          label = c('OFL','ABC','TAC','Catches'),
#          color = c(cbpal[3:1],'grey44'), size = 6)+
scale_color_manual(values = cbpal,
labels = c('TAC','ABC',"Catches in Base Model", "Catches used in Projections" ))+
annotate('text', x = rep(2020.5,3), y = c(40000,30000, 4500),
label = c('ABC','TAC','Catches'),
color = c(cbpal[2:1],'grey44'), size = 6)+
labs(x = 'Year', y = 'Catch or Harvest Spex (t)', color = '')
merge(mgmt, base20mod$catch %>%
select(Yr, Catch = Obs),
by ='Yr', all.x = TRUE)  %>%
merge(., xtrayrs, by = 'Yr',all = T) %>%
mutate(c1= Catch.x, c2= Catch.y) %>%
data.frame(.) %>%
select(-Catch.x, -Catch.y) %>%
reshape2::melt(., id = 'Yr') %>%
mutate(value = as.numeric(value), Yr = as.numeric(Yr)) %>%
filter(variable != 'OFL') %>%
# filter(Yr ==2019)
ggplot(., aes(x = Yr,y = value, color = variable, group = variable)) +
geom_line(lwd = 1.1) +
ggsidekick::theme_sleek() +
theme(legend.text = element_text(size = 14), legend.position = 'bottom',
axis.text = element_text(size = 14),axis.title  = element_text(size = 14)) +
scale_x_continuous(limits = c(1990,2025),
breaks =  seq(1995,2025,5),
labels = seq(1995,2025,5)) +
# scale_color_manual(values = cbpal,
#                    labels = c('TAC','ABC','OFL',"Catches in Base Model", "Catches used in Projections" ))+
# annotate('text', x = rep(2020.5,4), y = c(47500,40000,30000, 4500),
#          label = c('OFL','ABC','TAC','Catches'),
#          color = c(cbpal[3:1],'grey44'), size = 6)+
scale_color_manual(values = cbpal,
labels = c('TAC','ABC',"Catches in Base Model", "Catches used in Projections" ))+
annotate('text', x = rep(2020.5,3),
y = c(100000,30000, 4500),
label = c('ABC','TAC','Catches'),
color = c(cbpal[2:1],'grey44'), size = 6)+
labs(x = 'Year', y = 'Catch or Harvest Spex (t)', color = '')
merge(mgmt, base20mod$catch %>%
select(Yr, Catch = Obs),
by ='Yr', all.x = TRUE)  %>%
merge(., xtrayrs, by = 'Yr',all = T) %>%
mutate(c1= Catch.x, c2= Catch.y) %>%
data.frame(.) %>%
select(-Catch.x, -Catch.y) %>%
reshape2::melt(., id = 'Yr') %>%
mutate(value = as.numeric(value), Yr = as.numeric(Yr)) %>%
filter(variable != 'OFL') %>%
# filter(Yr ==2019)
ggplot(., aes(x = Yr,y = value, color = variable, group = variable)) +
geom_line(lwd = 1.1) +
ggsidekick::theme_sleek() +
theme(legend.text = element_text(size = 14), legend.position = 'bottom',
axis.text = element_text(size = 14),axis.title  = element_text(size = 14)) +
scale_x_continuous(limits = c(1990,2025),
breaks =  seq(1995,2025,5),
labels = seq(1995,2025,5)) +
# scale_color_manual(values = cbpal,
#                    labels = c('TAC','ABC','OFL',"Catches in Base Model", "Catches used in Projections" ))+
# annotate('text', x = rep(2020.5,4), y = c(47500,40000,30000, 4500),
#          label = c('OFL','ABC','TAC','Catches'),
#          color = c(cbpal[3:1],'grey44'), size = 6)+
scale_color_manual(values = cbpal,
labels = c('TAC','ABC',"Catches in Base Model", "Catches used in Projections" ))+
annotate('text', x = rep(2020.5,3),
y = c(75000,30000, 4500),
label = c('ABC','TAC','Catches'),
color = c(cbpal[2:1],'grey44'), size = 6)+
labs(x = 'Year', y = 'Catch or Harvest Spex (t)', color = '')
merge(mgmt, base20mod$catch %>%
select(Yr, Catch = Obs),
by ='Yr', all.x = TRUE)  %>%
merge(., xtrayrs, by = 'Yr',all = T) %>%
mutate(c1= Catch.x, c2= Catch.y) %>%
data.frame(.) %>%
select(-Catch.x, -Catch.y) %>%
reshape2::melt(., id = 'Yr') %>%
mutate(value = as.numeric(value), Yr = as.numeric(Yr)) %>%
filter(variable != 'OFL') %>%
# filter(Yr ==2019)
ggplot(., aes(x = Yr,y = value, color = variable, group = variable)) +
geom_line(lwd = 1.1) +
ggsidekick::theme_sleek() +
theme(legend.text = element_text(size = 14), legend.position = 'bottom',
axis.text = element_text(size = 14),axis.title  = element_text(size = 14)) +
scale_x_continuous(limits = c(1995,2025),
breaks =  seq(1995,2025,5),
labels = seq(1995,2025,5)) +
# scale_color_manual(values = cbpal,
#                    labels = c('TAC','ABC','OFL',"Catches in Base Model", "Catches used in Projections" ))+
# annotate('text', x = rep(2020.5,4), y = c(47500,40000,30000, 4500),
#          label = c('OFL','ABC','TAC','Catches'),
#          color = c(cbpal[3:1],'grey44'), size = 6)+
scale_color_manual(values = cbpal,
labels = c('TAC','ABC',"Catches in Base Model", "Catches used in Projections" ))+
annotate('text', x = rep(2020.5,3),
y = c(75000,30000, 4500),
label = c('ABC','TAC','Catches'),
color = c(cbpal[2:1],'grey44'), size = 6)+
labs(x = 'Year', y = 'Catch or Harvest Spex (t)', color = '')
ggsave(last_plot(), file = here("figs","harvest_spex_vs_catch.png"),
height = 7, width  = 12, unit = 'in', dpi = 520)
catch
head(catch)
catch %>% filter(Year == 2019) %>% summarise(sum(TONS))
catch %>% filter(YEAR == 2019) %>% summarise(sum(TONS))
SSplotTimeseries(basemod20, subplot =1)
SSplotTimeseries(base20mod, subplot =1)
SSplotTimeseries(base20mod, subplot =2)
SSplotTimeseries(base20mod, subplot =3)
SSplotTimeseries(base20mod)
SSplotTimeseries(base20mod, subplot = 4)
SSplotTimeseries(base20mod, subplot = 5)
SSplotTimeseries(base20mod, subplot = 6)
SSplotTimeseries(base20mod, subplot = 7)
SSplotTimeseries(base20mod, subplot = 8)
SSplotTimeseries(base20mod, subplot = 9)
abline(h = 71280)
abline(h = 71280, add = T)
SSplotTimeseries(base20mod, subplot = 9);abline(h = 71280, add = T)
SSplotTimeseries(base20mod, subplot = 10)
SSplotTimeseries(base20mod, subplot = 7)
abline(h = 71280)
text(x = 2020, y = 72000, label = expression(B~[40]))
text(x = 2020, y = 72000, label = expression(B~40))
text(x = 2020, y = 72000, label = expression('B'[40]))
SSplotTimeseries(base20mod, subplot = 7)
abline(h = 71280)
text(x = 2020, y = 72000, label = expression('B'[40]))
text(x = 2020, y = 74000, label = expression('B'[40]))
text(x = 2020, y = 75000, label = expression('2022 B'[40]'=71280 mt'))
text(x = 2020, y = 75000, label = expression('2022 B'[40]='71280 mt'))
text(x = 2020, y = 75000, label = expression('2022 B'[40]'71280 mt'))
text(x = 2020, y = 75000, label = expression('2022 B'[40]*'71280 mt'))
text(x = 2020, y = 75000, label = expression('2022 B'[40]*'=71,280 mt'))
SSplotTimeseries(base20mod, subplot = 7)
abline(h = 71280, lty = 'dashed')
text(x = 2020, y = 75000, label = expression('2022 B'[40]*'=71,280 mt'))
text(x = 2019, y = 75000, label = expression('2022 B'[40]*'=71,280 mt'))
SSplotTimeseries(base20mod, subplot = 7)
abline(h = 71280, lty = 'dashed')
text(x = 2019, y = 75000, label = expression('2022 B'[40]*'=71,280 mt'))
SSplotTimeseries(base20mod, subplot = 7)
abline(h = 71280, lty = 'dashed')
text(x = 2015, y = 75000, label = expression('2022 B'[40]*'=71,280 mt'))
SSplotTimeseries(base20mod, subplot = 7)
abline(h = 71280, lty = 'dashed')
text(x = 2015, y = 76000, label = expression('2022 B'[40]*'=71,280 mt'))
png(here("figs","SSB_2020_vsB40_2022.png"), width = 7, height = 5, res = 520)
SSplotTimeseries(base20mod, subplot = 7)
abline(h = 71280, lty = 'dashed')
text(x = 2015, y = 76000, label = expression('2022 B'[40]*'=71,280 mt'))
dev.off()
png(here("figs","SSB_2020_vsB40_2022.png"), width = 7, height = 5, unit = 'in' res = 520)
SSplotTimeseries(base20mod, subplot = 7)
abline(h = 71280, lty = 'dashed')
text(x = 2015, y = 76000, label = expression('2022 B'[40]*'=71,280 mt'))
dev.off()
png(here("figs","SSB_2020_vsB40_2022.png"), width = 7, height = 5, unit = 'in', res = 520)
SSplotTimeseries(base20mod, subplot = 7)
abline(h = 71280, lty = 'dashed')
text(x = 2015, y = 76000, label = expression('2022 B'[40]*'=71,280 mt'))
dev.off()
SSplotRecdevs(base20mod)
base20mod$recruit
SSplotBiology(base20mod)
SSplotSpawnrecruit(base20mod)
mgmt
merge(mgmt, base20mod$catch %>%
select(Yr, Catch = Obs),
by ='Yr', all.x = TRUE)  %>%
merge(., xtrayrs, by = 'Yr',all = T) %>%
mutate(c1= Catch.x, c2= Catch.y) %>%
data.frame(.) %>%
select(-Catch.x, -Catch.y) %>%
reshape2::melt(., id = 'Yr') %>%
mutate(value = as.numeric(value), Yr = as.numeric(Yr)) %>%
filter(variable != 'OFL') %>%
filter(Yr >2016)
11006/14500
### ----- survey conditional age at length -----
message("Querying EBS age-length...")
## Query written by Rebecca Haehn in 2020 based on a really old
## version by Dan. This replaces the need to use her dropbox .csv
## file.
query <- "
SELECT a.hauljoin, d.year, a.region, a.specimenid, a.biostratum, a.species_code, a.length, a.weight, a.sex,
a.age, b.start_time, b.bottom_depth, b. stratum, b.gear_temperature, b.bottom_type, b.gear_depth, b.performance,
b.duration, b.distance_fished, b.net_width, b.net_height, b.net_measured, b.start_latitude, b.end_latitude,
b.start_longitude, b.end_longitude, b.surface_temperature, b.gear, b.abundance_haul, c.nmfs_area,
decode(b.stratum,10,1,20,2,31,3,32,3,41,4,42,4,43,4,50,5,61,6,62,6,82,8,90,9,-9) subarea
from RACEBASE.SPECIMEN a
inner join RACEBASE.HAUL b
on a.hauljoin = b.hauljoin
inner join haehnr.ebs_nmfs_areas c
on b.stationid = c.stationid
left join HAULNAME d
on a.hauljoin = d.hauljoin
where a.region = 'BS' and
species_code in (10130, 10140) and
b.abundance_haul = 'Y';
"
test <- sqlQuery(AFSC, query)
## download the raw data from Oracle and save
## based on data.R from 2020 assessment by Cole Monnahan
## Libraries/options required:
require(RODBC)
require(dplyr)
require(here)
require(ggplot2)
require(r4ss)
library(tidyverse)
## library(r4ss)
## Setup the network connections
AFSC <- odbcConnect("AFSC","mkapur","N5w!Pw4mkq",  believeNRows = FALSE)
AKFIN <- odbcConnect("AKFIN","mkapur","ssmamk22",  believeNRows=FALSE)
test <- sqlQuery(AFSC, query)
if(!is.data.frame(test)) stop("Failed to query age-length survey data")
test
## Query written by Rebecca Haehn in 2020 based on a really old
## version by Dan. This replaces the need to use her dropbox .csv
## file.
query <- "SELECT a.hauljoin, d.year, a.region, a.specimenid, a.biostratum, a.species_code, a.length, a.weight, a.sex,
a.age, b.start_time, b.bottom_depth, b. stratum, b.gear_temperature, b.bottom_type, b.gear_depth, b.performance,
b.duration, b.distance_fished, b.net_width, b.net_height, b.net_measured, b.start_latitude, b.end_latitude,
b.start_longitude, b.end_longitude, b.surface_temperature, b.gear, b.abundance_haul, c.nmfs_area,
decode(b.stratum,10,1,20,2,31,3,32,3,41,4,42,4,43,4,50,5,61,6,62,6,82,8,90,9,-9) subarea
from RACEBASE.SPECIMEN a
inner join RACEBASE.HAUL b
on a.hauljoin = b.hauljoin
inner join haehnr.ebs_nmfs_areas c
on b.stationid = c.stationid
left join HAULNAME d
on a.hauljoin = d.hauljoin
where a.region = 'BS' and
species_code in (10130, 10140) and
b.abundance_haul = 'Y';
"
test <- sqlQuery(AFSC, query)
if(!is.data.frame(test)) stop("Failed to query age-length survey data")
### ----- Get fishery age composition data  -----
message("Querying fishery ages files...")
SpeciesCode <- "103" #105 is rex sole
FmpArea <- "500 and 544"  ##Typical options are AI = 539-544, GOA = 600 to 699 (600-650 incl. all the management areas and 690 is outside the EEZ), BS = 500 to 539
source('data/get_agecomps_fishery.R')
source(here('2020_files','get_agecomps_fishery.R'))
here('2020_files','get_agecomps_fishery.R')
source('~/assessments/2021/BSAI-flathead/2020_files/data/get_agecomps_fishery.R')
AgeLength.df
test<-paste0("SELECT OBSINT.DEBRIEFED_SPCOMP.HAUL_JOIN,\n ",
"OBSINT.DEBRIEFED_LENGTH.HAUL_JOIN AS HAUL_JOIN1,\n ",
"OBSINT.DEBRIEFED_SPCOMP.EXTRAPOLATED_WEIGHT,\n ",
"OBSINT.DEBRIEFED_SPCOMP.EXTRAPOLATED_NUMBER,\n ",
"OBSINT.DEBRIEFED_SPCOMP.HAUL_DATE,\n ",
"OBSINT.DEBRIEFED_SPCOMP.YEAR,\n ",
"OBSINT.DEBRIEFED_SPCOMP.SPECIES,\n ",
"OBSINT.DEBRIEFED_LENGTH.GEAR,\n ",
"OBSINT.DEBRIEFED_LENGTH.NMFS_AREA,\n ",
"OBSINT.DEBRIEFED_LENGTH.SEX AS SEX1,\n ",
"OBSINT.DEBRIEFED_LENGTH.LENGTH,\n ",
"OBSINT.DEBRIEFED_LENGTH.FREQUENCY,\n ",
"OBSINT.DEBRIEFED_LENGTH.VESSEL_TYPE,\n ",
"SUBSTR(TO_CHAR(OBSINT.DEBRIEFED_LENGTH.HAUL_JOIN),9,19) AS LAST1,\n ",
"SUBSTR(TO_CHAR(OBSINT.DEBRIEFED_LENGTH.HAUL_JOIN),1,8) AS FIRST1\n ",
"FROM OBSINT.DEBRIEFED_SPCOMP\n ",
"INNER JOIN OBSINT.DEBRIEFED_LENGTH\n ",
"ON OBSINT.DEBRIEFED_SPCOMP.HAUL_JOIN    = OBSINT.DEBRIEFED_LENGTH.HAUL_JOIN\n ",
"AND OBSINT.DEBRIEFED_LENGTH.CRUISE    = OBSINT.DEBRIEFED_SPCOMP.CRUISE\n ",
"AND OBSINT.DEBRIEFED_LENGTH.PERMIT    = OBSINT.DEBRIEFED_SPCOMP.PERMIT\n ",
"WHERE OBSINT.DEBRIEFED_SPCOMP.SPECIES   = 103\n ",
"AND OBSINT.DEBRIEFED_LENGTH.NMFS_AREA BETWEEN ",FmpArea,"\n ",
"AND OBSINT.DEBRIEFED_LENGTH.SPECIES in (",SpeciesCode,")\n ",
"ORDER BY OBSINT.DEBRIEFED_LENGTH.YEAR")
Dcombo <- sqlQuery(AFSC,test)
## Dlength$ID<-paste(Dlength$CRUISE,"_",Dlength$PERMIT,"_",Dlength$HAUL_OFFLOAD,sep="")
Dcombo$Haul.Join <- Dcombo$FIRST1
Dcombo$Haul.Join[complete.cases(Dcombo$LAST1)] <-
paste0(Dcombo$FIRST1[complete.cases(Dcombo$LAST1)],Dcombo$LAST1[complete.cases(Dcombo$LAST1)])
Dcombo$FMP_SUBAREA <- NA
Dcombo$FMP_SUBAREA[Dcombo$NMFS_AREA > 539 & Dcombo$NMFS_AREA <=544]<-"AI"
Dcombo$FMP_SUBAREA[Dcombo$NMFS_AREA >=500 & Dcombo$NMFS_AREA<=539]<-"BS"
Dcombo$FMP_SUBAREA[Dcombo$NMFS_AREA == 610]<-"WG"
Dcombo$FMP_SUBAREA[Dcombo$NMFS_AREA == 630 | Dcombo$NMFS_AREA == 620]<-"CG"
Dcombo$FMP_SUBAREA[Dcombo$NMFS_AREA == 640 | Dcombo$NMFS_AREA == 650]<-"EG"
Dcombo$TheDate<-as.Date(Dcombo$HAUL_DATE,format = "%m/%d/%Y")
Dcombo$Season<-quarters(Dcombo$TheDate)
saveRDS(Dcombo, file="'~/assessments/2021/BSAI-flathead/data/lengths_fishery_stratefied.RDS")
saveRDS(Dcombo, file="~/assessments/2021/BSAI-flathead/data/lengths_fishery_stratefied.RDS")
## either need to add something to this query to only query otolith samples OR need to use the squash_sp_type table.
MyQuery<-paste0("SELECT to_char(OBSINT.DEBRIEFED_AGE_SQUASH_SP_TYPE.PORT_JOIN) as PORT_JOIN,\n ",
"OBSINT.DEBRIEFED_AGE_SQUASH_SP_TYPE.AGE,\n ",
"OBSINT.DEBRIEFED_AGE_SQUASH_SP_TYPE.GEAR,\n ",
"OBSINT.DEBRIEFED_AGE_SQUASH_SP_TYPE.LENGTH,\n ",
"OBSINT.DEBRIEFED_AGE_SQUASH_SP_TYPE.NMFS_AREA,\n ",
"OBSINT.DEBRIEFED_AGE_SQUASH_SP_TYPE.HAUL_OFFLOAD_DATE,\n ",
"OBSINT.DEBRIEFED_AGE_SQUASH_SP_TYPE.SEX,\n ",
"OBSINT.DEBRIEFED_AGE_SQUASH_SP_TYPE.SPECIES,\n ",
"OBSINT.DEBRIEFED_AGE_SQUASH_SP_TYPE.TYPE_1_OTOLITH,\n ",
"OBSINT.DEBRIEFED_AGE_SQUASH_SP_TYPE.YEAR,\n ",
"to_char(OBSINT.DEBRIEFED_AGE_SQUASH_SP_TYPE.HAUL_JOIN) as HAUL_JOIN,\n ",
"SUBSTR(TO_CHAR(OBSINT.DEBRIEFED_AGE_SQUASH_SP_TYPE.HAUL_JOIN),9,19) AS HJ_LAST1,\n ",
"SUBSTR(TO_CHAR(OBSINT.DEBRIEFED_AGE_SQUASH_SP_TYPE.HAUL_JOIN),1,8) AS HJ_FIRST1\n ",
"FROM OBSINT.DEBRIEFED_AGE_SQUASH_SP_TYPE\n ",
"WHERE OBSINT.DEBRIEFED_AGE_SQUASH_SP_TYPE.NMFS_AREA BETWEEN ",FmpArea,"\n ",
"AND OBSINT.DEBRIEFED_AGE_SQUASH_SP_TYPE.SPECIES        = ",SpeciesCode,"\n ",
"AND OBSINT.DEBRIEFED_AGE_SQUASH_SP_TYPE.TYPE_1_OTOLITH = 'Y'")
AgeLength.df <- sqlQuery(AFSC,MyQuery)
AgeLength.df
AgeLength.df <- sqlQuery(AFSC,MyQuery)
AgeLength.df
## ## devtools::install_github("r4ss/r4ss")
## library(r4ss)
## Setup the network connections
AFSC <- odbcConnect("AFSC","mkapur","N5w!Pw4mkq",  believeNRows = FALSE)
AKFIN <- odbcConnect("AKFIN","mkapur","ssmamk22",  believeNRows=FALSE)
AgeLength.df <- sqlQuery(AFSC,MyQuery)
if(!is.data.frame(AgeLength.df)) stop("Age length query failed")
#AgeLength.df$HAUL_JOIN <- as.character(AgeLength.df$HAUL_JOIN)
AgeLength.df$HJ_LAST1[is.na(AgeLength.df$HJ_LAST1)] = ""
AgeLength.df$HAUL_JOIN <-
paste0(AgeLength.df$HJ_FIRST1, AgeLength.df$HJ_LAST1)
AgeLength.df$HAUL_JOIN[is.na(AgeLength.df$HJ_FIRST1)] <- NA
AgeLength.df$PORT_JOIN <- as.character(AgeLength.df$PORT_JOIN)
AgeLength.df$SEASON <- quarters(as.Date(AgeLength.df$HAUL_OFFLOAD_DATE))
### Do NOT USE THIS. When reading/writing CSV it breaks HAUL_JOIN
### and the processing script fails. Super subtle. Doesn't happen
### with RDS file.
## write.csv(AgeLength.df, file="data/Age_Length_Stratified.csv", row.names=FALSE)
saveRDS(AgeLength.df, file='data/Age_Length_Stratified.RDS')
saveRDS(AgeLength.df, file=here("data","2021-11-12-fishery_agecomps.RDS"))
