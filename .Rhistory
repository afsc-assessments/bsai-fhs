breaks = seq(0,0.08,0.01),
labels = seq(0,0.08,0.01))+
labs(x = 'Year', y = 'Catch/Summary Biomass (age 3+)')
## plot with diff colors for extrapolated and forecasted catches
ggplot(subset(fig1, Yr < this_year),
aes(x = Yr, y = catch_over_biomass)) +
geom_line(lwd = 1, col = 'dodgerblue2') +
# geom_point(data = subset(fig1, Yr==2020),
#           size = 3, col = 'grey44') +
geom_line(data = subset(fig1, Yr > 2019),
lwd = 1, linetype = 'dotted',  col = 'grey44') +
scale_x_continuous(labels = seq(1960,2025,5),
breaks = seq(1960,2025,5))+
scale_y_continuous(limits = c(0,0.08),
breaks = seq(0,0.08,0.01),
labels = seq(0,0.08,0.01))+
labs(x = 'Year', y = 'Catch/Summary Biomass (age 3+)')
ggsave(last_plot(), height = 5, width = 8, dpi = 520,
file = here('figs',paste0(Sys.Date(),'-Fig1_catchvsbio.png')))
#* index plot ----
# index <- read.csv(here('data','2021-09-15-index.csv'))
index <- read.csv(here('data',paste0(date_use,'-ss_survey_index.csv')) %>%
# index %>% filter(  YEAR != 2019) %>% summarise(mb=mean(BIOM), sdb = sd(BIOM)) %>% mutate(mb+sdb)
ggplot(index, aes(x = year, y = obs/1000)) +
geom_line(lwd = 1, col = 'grey77') +
# geom_point() +
geom_point(data = subset(index, year == 2021), color = 'blue') +
scale_x_continuous(labels = seq(1983,2021,2),
breaks = seq(1983,2021,2))+
# scale_x_continuous(labels = seq(1980,2025,5),
#                    breaks = seq(1980,2025,5))+
scale_y_continuous(limits = c(0,1000) ) +
labs(x = 'Year', y = 'Survey Biomass (1000 mt)')+
geom_ribbon(aes(ymin =lci/1000, ymax = uci/1000 ),alpha = 0.2)+
ggsidekick::theme_sleek()
#* index plot ----
# index <- read.csv(here('data','2021-09-15-index.csv'))
index <- read.csv(here('data',paste0(date_use,'-ss_survey_index.csv'))) %>%
mutate(lci = obs-se_log*obs, uci = se_log*obs+obs)
# index %>% filter(  YEAR != 2019) %>% summarise(mb=mean(BIOM), sdb = sd(BIOM)) %>% mutate(mb+sdb)
ggplot(index, aes(x = year, y = obs/1000)) +
geom_line(lwd = 1, col = 'grey77') +
# geom_point() +
geom_point(data = subset(index, year == 2021), color = 'blue') +
scale_x_continuous(labels = seq(1983,2021,2),
breaks = seq(1983,2021,2))+
# scale_x_continuous(labels = seq(1980,2025,5),
#                    breaks = seq(1980,2025,5))+
scale_y_continuous(limits = c(0,1000) ) +
labs(x = 'Year', y = 'Survey Biomass (1000 mt)')+
geom_ribbon(aes(ymin =lci/1000, ymax = uci/1000 ),alpha = 0.2)+
ggsidekick::theme_sleek()
# index %>% filter(  YEAR != 2019) %>% summarise(mb=mean(BIOM), sdb = sd(BIOM)) %>% mutate(mb+sdb)
ggplot(index, aes(x = year, y = obs/1000)) +
geom_line(lwd = 1, col = 'grey77') +
# geom_point() +
geom_point(data = subset(index, year == 2021), color = 'blue') +
scale_x_continuous(labels = seq(1983,2021,2),
breaks = seq(1983,2021,2))+
# scale_x_continuous(labels = seq(1980,2025,5),
#                    breaks = seq(1980,2025,5))+
scale_y_continuous(limits = c(0,1000) ) +
labs(x = 'Year', y = 'Survey Biomass (1000 mt)')+
geom_ribbon(aes(ymin =lci/1000, ymax = uci/1000 ),alpha = 0.2)
# index %>% filter(  YEAR != 2019) %>% summarise(mb=mean(BIOM), sdb = sd(BIOM)) %>% mutate(mb+sdb)
ggplot(index, aes(x = year, y = obs/1000)) +
geom_line(lwd = 1, col = 'grey77') +
# geom_point() +
geom_point(data = subset(index, year == 2021), color = 'blue') +
scale_x_continuous(labels = seq(1980,2025,5),
breaks =  seq(1980,2025,5))+
scale_y_continuous(limits = c(0,1000) ) +
labs(x = 'Year', y = 'Survey Biomass (1000 mt)')+
geom_ribbon(aes(ymin =lci/1000, ymax = uci/1000 ),alpha = 0.2)
ggsave(last_plot(), height = 6, width = 10, dpi = 520,
file = here('figs',paste0(Sys.Date(),'-index_wCVs.png')))
rec_table
## load last year's values and make full safe
previous_rec_table <- read.csv("C:/Users/maia.kapur/Work/assessments/2021/BSAI-flathead/projection/Projections/REC_TABLE.CSV")
previous_rec_table
rec_table
cbind(previous_rec_table, rec_table)
cbind(previous_rec_table, rec_table[,2:3]) %>%
add_row(M = 0.2,
Tier = "3a")
cbind(previous_rec_table, rec_table[,2:3]) %>%
add_row(c(metric = 'M', rep(0.2,4)))
cbind(previous_rec_table, rec_table[,2:3]) %>%
add_row(metric = 'M', rep(0.2,4))
cbind(previous_rec_table, rec_table[,2:3]) %>%
add_row(metric = 'M', X2022 = 0.2, X2023 = 0.2, `2023` = 0.2, `2024`=0.2)
cbind(previous_rec_table, rec_table[,2:3]) %>%
add_row(metric = 'M', X2022 = 0.2, X2023 = 0.2, '2023' = 0.2, `2024`=0.2)
cbind(previous_rec_table, rec_table[,2:3]) %>%
add_row(metric = 'M', X2022 = 0.2, X2023 = 0.2, '2023' = 0.2, '2024'=0.2)
cbind(previous_rec_table, rec_table[,2:3]) %>%
add_row(metric = 'M', X2022 = 0.2, X2023 = 0.2, '2023' = 0.2, '2024'=0.2)
rbind(c('M', rep(0.2,4))) %>%
cbind(previous_rec_table, rec_table[,2:3])
rbind(c('M', rep(0.2,4)),
cbind(previous_rec_table, rec_table[,2:3])
rbind(c('M', rep(0.2,4)),
cbind(previous_rec_table, rec_table[,2:3]))
rbind(c('M', rep(0.2,4)),
c('Tier', rep('3a',4)),
cbind(previous_rec_table, rec_table[,2:3]))
safe0 <- rbind(c('M', rep(0.2,4)),
c('Tier', rep('3a',4)),
cbind(previous_rec_table, rec_table[,2:3]))
status = matrix(NA, nrow = 3, ncol = 4)
colnames(status) <- c(2020,2021,2021,2022)
rownames(status) <- c('Overfishing','Overfished','Approaching Overfished')
status[1,c(1,4)] <- status[2,c(2,4)] <- status[3,c(2,4)] <- 'no'
status
rbind(safe0, status)
safe0
rbind(c('M', rep(0.2,4)),
c('Tier', rep('3a',4)),
cbind(previous_rec_table, rec_table[,2:3])) %>%
`rownames<-`c(metric)
<- rbind(c('M', rep(0.2,4)),
c('Tier', rep('3a',4)),
cbind(previous_rec_table, rec_table[,2:3])) %>%
`rownames<-` c(metric)
rownames(safe0) <-safe0$metric
safe0
safe0 <- rbind(c('M', rep(0.2,4)),
c('Tier', rep('3a',4)),
cbind(previous_rec_table, rec_table[,2:3]))
rownames(safe0) <-safe0$metric
safe0
rbind(c('M', rep(0.2,4)),
c('Tier', rep('3a',4)),
cbind(previous_rec_table, rec_table[,2:3]))
safe0 <- rbind(c('M', rep(0.2,4)),
c('Tier', rep('3a',4)),
cbind(previous_rec_table[,2:3], rec_table[,2:3]))
rownames(safe0) <-previous_rec_table$metric
safe0
safe0 <- rbind(c(rep(0.2,3)),
c(rep('3a',3)),
cbind(previous_rec_table[,2:3], rec_table[,2:3]))
rownames(safe0) <-c('M', 'Tier',previous_rec_table$metric)
safe0
previous_rec_table$metric
rownames(safe0) <-c('M',
'Tier',
"Projected total (3+) biomass (t)",
"Projected Female spawning biomass (t)",
"B100%",
" B40%",
"B35%",
"FOFL",
"maxFABC",
"FABC",
"OFL (t)",
"maxABC (t)",
"ABC (t)"
)
safe0
status = matrix(NA, nrow = 3, ncol = 4)
colnames(status) <- c(2020,2021,2021,2022)
rownames(status) <- c('Overfishing','Overfished','Approaching Overfished')
status[1,c(1,4)] <- status[2,c(2,4)] <- status[3,c(2,4)] <- 'no'
rbind(safe0, status)
status
safe0
status = matrix(NA, nrow = 3, ncol = 4)
# colnames(status) <- c(2020,2021,2021,2022)
rownames(status) <- c('Overfishing','Overfished','Approaching Overfished')
status[1,c(1,4)] <- status[2,c(2,4)] <- status[3,c(2,4)] <- 'no'
rbind(safe0, status)
status
safe0
rbind(as.matrix(safe0), status)
rbind(as.matrix(noquote(safe0)), status)
,
rbind(noquote(as.matrix(safe0)), status)
noquote(rbind(as.matrix(safe0).status))
noquote(rbind(as.matrix(safe0),status))
rec_table2 <-
read.table('alt2_proj.out', header=TRUE) %>%
filter(Year %in% (this_year+1:2)) %>%
pivot_longer(cols=c(-Stock, -Year), names_to='metric', values_to='value') %>%
pivot_wider(names_from=Year, values_from=value)
rec_table2
formatC(rec_table, format="d", big.mark=",")
formatC(safe0, format="d", big.mark=",")
safe0
rec_table
rec_table[c(1:5,9:11),2:3]
rec_table[c(1:5,9:11),2:3] <-formatC(rec_table[c(1:5,9:11),2:3] , format="d", big.mark=",")
class(rec_table[c(1:5,9:11),2:3])
xtable(prettyNum(safe0,big.mark=","))
require(xtable)
install.packages('xtable')
xtable(prettyNum(safe0,big.mark=","))
require(xtable)
xtable(prettyNum(safe0,big.mark=","))
prettyNum(safe0,big.mark=",")
safe0
safe0[,1]
prettyNum(safe0[,1],big.mark=",")
xtable(prettyNum(rec_table,big.mark=","))
rec_table
xtable(prettyNum(rec_table[,2:3],big.mark=","))
safe0 <- rbind(c(rep(0.2,3)),
c(rep('3a',3)),
cbind(previous_rec_table[,2:3],
rec_table[,2:3]))
rownames(safe0) <-c('M',
'Tier',
"Projected total (3+) biomass (t)",
"Projected Female spawning biomass (t)",
"B100%",
"B40%",
"B35%",
"FOFL",
"maxFABC",
"FABC",
"OFL (t)",
"maxABC (t)",
"ABC (t)"
)
xtable(prettyNum(safe0[,2:3],big.mark=","))
safe0
safe0[,2:4]
prettyNum(safe0[,2:4],big.mark=",")
xtable(prettyNum(safe0[,3],big.mark=","))
xtable(prettyNum(rec_table[,2:3],big.mark=","))
rec_table[,2:3]
(prettyNum(rec_table[,2:3],big.mark=",")
)
?prettyNum
xtable(prettyNum(rec_table[,2],big.mark=","))
rec_table
rec_table1 <-
read.table('percentdb.out') %>%
as.data.frame(stringsAsFactors=FALSE) %>%
transmute(scenario=as.numeric(V2), year=as.numeric(V3), metric=V4,
value=as.numeric(V5)) %>%
filter(year %in% (this_year+1:2) & scenario==1 &
metric %in% c('SSBMean','SSBFofl', 'SSBFabc', 'SSBF100', 'Fofl', 'Fabc')) %>%
arrange(year, metric) %>%
pivot_wider(names_from=year, values_from=value)
rec_table1[3:6,3:4] <- 1000*rec_table1[3:6,3:4]
rec_table2 <-
read.table('alt2_proj.out', header=TRUE) %>%
filter(Year %in% (this_year+1:2)) %>%
pivot_longer(cols=c(-Stock, -Year), names_to='metric', values_to='value') %>%
pivot_wider(names_from=Year, values_from=value)
rec_table1$scenario <- rec_table2$Stock <- NULL
rec_table2[,2:3] <- 1000*rec_table2[,2:3]
rec_table <- bind_rows(rec_table1, rec_table2)
## change order to match SAFE format & magnitudes
rec_table <- rec_table[c(11,6,3,5,4,2,1,1,9,8,8),]
xtable(prettyNum(rec_table[,2],big.mark=","))
xtable(prettyNum(rec_table,big.mark=","))
safe0 <- rbind(c(rep(0.2,3)),
c(rep('3a',3)),
cbind(previous_rec_table[,2:3],
rec_table[,2:3]))
rownames(safe0) <-c('M',
'Tier',
"Projected total (3+) biomass (t)",
"Projected Female spawning biomass (t)",
"B100%",
"B40%",
"B35%",
"FOFL",
"maxFABC",
"FABC",
"OFL (t)",
"maxABC (t)",
"ABC (t)"
)
xtable(prettyNum(safe0,big.mark=","))
safe0
xtable(prettyNum(safe0[,3],big.mark=","))
xtable(prettyNum(rec_table[,3],big.mark=","))
rec_table[,3]
xtable(prettyNum(c(rec_table[,3]),big.mark=","))
rectable2[,2] <- prettyNum(rectable2[,2],big.mark=",")
rec_table2 <-
read.table('alt2_proj.out', header=TRUE) %>%
filter(Year %in% (this_year+1:2)) %>%
pivot_longer(cols=c(-Stock, -Year), names_to='metric', values_to='value') %>%
pivot_wider(names_from=Year, values_from=value)
rec_table1$scenario <- rec_table2$Stock <- NULL
rectable2[,2] <- prettyNum(rectable2[,2],big.mark=",")
rec_table2 <-
read.table('alt2_proj.out', header=TRUE) %>%
filter(Year %in% (this_year+1:2)) %>%
pivot_longer(cols=c(-Stock, -Year), names_to='metric', values_to='value') %>%
pivot_wider(names_from=Year, values_from=value)
rec_table1$scenario <- rec_table2$Stock <- NULL
rec_table2[,2] <- prettyNum(rec_table2[,2],big.mark=",")
rec_table2[,2]
class(safe0[,1])
class(rec_table2[,2])
## change order to match SAFE format & magnitudes
rec_table <- matrix(rec_table[c(11,6,3,5,4,2,1,1,9,8,8),] )
prettyNum(rec_table2[,2],big.mark=",")
rec_table
totals <- read.csv(here('data',paste0(date_use,'-catch.csv'))) %>%
group_by(year=YEAR) %>%
summarize(catch=sum(TONS), .groups='drop')
catch_proportions <- readRDS(here('data',,paste0(date_use,'-catches_observer.RDS'))) %>%
group_by(year, species) %>%
summarize(weight=sum(weight)/1000, .groups='drop') %>%
pivot_wider(names_from=species, values_from=weight,values_fill=0) %>%
mutate(prop_bf=Bering_flounder/(Bering_flounder+flathead_sole),
prop_fs=1-prop_bf
) %>%
filter(year>=1995 | year==1992) %>%
merge(.,totals, by='year', all = T) %>%
mutate(total = round(catch),
FHS = round(prop_fs*catch),
BF = round(prop_bf*catch)) %>%
select(year, total, FHS, BF)
catch_proportions <- readRDS(here('data',paste0(date_use,'-catches_observer.RDS'))) %>%
group_by(year, species) %>%
summarize(weight=sum(weight)/1000, .groups='drop') %>%
pivot_wider(names_from=species, values_from=weight,values_fill=0) %>%
mutate(prop_bf=Bering_flounder/(Bering_flounder+flathead_sole),
prop_fs=1-prop_bf
) %>%
filter(year>=1995 | year==1992) %>%
merge(.,totals, by='year', all = T) %>%
mutate(total = round(catch),
FHS = round(prop_fs*catch),
BF = round(prop_bf*catch)) %>%
select(year, total, FHS, BF)
write.csv(catch_proportions, file = here('report',paste0(Sys.Date(),'-catch_proportions.csv')), row.names=FALSE)
index_ai <- read.csv(here('data',paste0(date_use,'-biomass_survey_ai.csv')) %>%
index_ai <- read.csv(here('data',paste0(date_use,'-biomass_survey_ai.csv'))) %>%
mutate(species=gsub(" ", "_",COMMON_NAME), survey = 'AI', cv = BIOMASS_VAR /TOTAL_BIOMASS) %>%
select(year=YEAR, species, biomass=TOTAL_BIOMASS,
variance = BIOMASS_VAR, survey) %>% mutate(cv = round(sqrt(log(1+variance/biomass^2)),5))
index_ebs_spp <- read.csv(here('data',paste0(date_use,'-biomass_survey_ebs_by_species.csv')))%>%
mutate(species=gsub(" ", "_",COMMON_NAME), survey = 'ebs') %>%
select(year=YEAR,species, biomass=BIOMASS,
variance = VARBIO, survey) %>%mutate(cv = round(sqrt(log(1+variance/biomass^2)),5))
index_ebs <-  read.csv(here('data',paste0(date_use,"-biomass_survey_ebs.csv"))) %>%
select(year=YEAR, biomass=BIOMASS,
variance=VARBIO) %>% cbind(survey='ebs') %>% mutate(cv = round(sqrt(log(1+variance/biomass^2)),5)) %>%
select(year, ebs_total = biomass, ebs_total_cv = cv)
ebs2 <- index_ebs_spp %>% select(year, species, biomass, cv) %>%
pivot_wider(names_from=species, values_from=c(biomass, cv)) %>%
select(year, ebs_flathead = biomass_flathead_sole, ebs_flathead_cv = cv_flathead_sole,
ebs_bering = biomass_Bering_flounder, ebs_bering_cv=cv_Bering_flounder)
index_ai %>%
pivot_wider(names_from=survey, values_from=c(biomass, cv)) %>%
select(-variance, -species) %>%
merge(., SS_index %>% select(year, obs, se_log), by = 'year',all = T) %>%
select(year, total = obs, cv_total = se_log, biomass_AI, cv_AI) %>%
merge(., index_ebs) %>%
merge(., ebs2) %>%
write.csv(., file = here('report',paste0(Sys.Date(),'-survey_by_spp.csv')), row.names=FALSE)
index_ai %>%
pivot_wider(names_from=survey, values_from=c(biomass, cv)) %>%
select(-variance, -species) %>%
merge(., SS_index %>% select(year, obs, se_log), by = 'year',all = T) %>%
select(year, total = obs, cv_total = se_log, biomass_AI, cv_AI) %>%
merge(., index_ebs) %>%
merge(., ebs2)
#* Table 3 NBS ----
index_nbs <- read.csv(here('data',paste0(date_use,"-biomass_survey_NBS_by_species.csv") %>%
#* Table 3 NBS ----
index_nbs <- read.csv(here('data',paste0(date_use,"-biomass_survey_NBS_by_species.csv"))) %>%
mutate(species=gsub(" ", "_",COMMON_NAME), survey = 'NBS', cv = VARBIO /BIOMASS) %>%
select(year=YEAR, species, biomass=BIOMASS,
variance = VARBIO, survey) %>% mutate(cv = round(sqrt(log(1+variance/biomass^2)),5))
## make a total column, tot var is sum of squares
nbs2 <- index_nbs %>%
group_by(year) %>%
summarise(totbio = sum(biomass),
var2 = sum(variance),
cv=round(sqrt(log(1+var2/totbio^2)),5)) %>%
select(year, nbs_total = totbio, nbs_total_cv = cv)
index_nbs %>% select(year, species, biomass, cv) %>%
pivot_wider(names_from=species, values_from=c(biomass, cv)) %>%
merge(., nbs2, by = 'year') %>%
select(year, nbs_total, nbs_total_cv, biomass_flathead_sole, cv_flathead_sole, biomass_Bering_flounder, cv_Bering_flounder) %>%
write.csv(., file = here('report',paste0(Sys.Date(),'-NBS_survey_by_spp.csv')), row.names=FALSE)
xtable(nbs2)
?xtable
xtable(prettyNum(nbs2))
library(devtools)
install_github("drmjc/mjcbase")
install_github("drmjc/excelIO")
install_github("drmjc/mjcbase")
# https://rdrr.io/github/drmjc/mjcbase/man/prettyNum.html
mjcbase::prettynum(nbs2)
# https://rdrr.io/github/drmjc/mjcbase/man/prettyNum.html
mjcbase::prettyNum(nbs2)
nbs2
# https://rdrr.io/github/drmjc/mjcbase/man/prettyNum.html
mjcbase::prettyNum(matrix(nbs2))
nbs2
# https://rdrr.io/github/drmjc/mjcbase/man/prettyNum.html
mjcbase::prettyNum(data.frame(nbs2))
data.frame(nbs2)
nbs2
mjcbase::prettyNum
# https://rdrr.io/github/drmjc/mjcbase/man/prettyNum.html
mjcbase::prettyNum(index_nbs)
index_nbs
# https://rdrr.io/github/drmjc/mjcbase/man/prettyNum.html
mjcbase::prettyNum(index_nbs[,3])
?prettyNum
# https://rdrr.io/github/drmjc/mjcbase/man/prettyNum.html
mjcbase::prettyNum(index_nbs[,3], big.mark = ',')
apply(nbs2,2,mjcbase::prettyNum, big.mark = ',')
index_nbs %>% select(year, species, biomass, cv) %>%
pivot_wider(names_from=species, values_from=c(biomass, cv)) %>%
merge(., nbs2, by = 'year') %>%
select(year, nbs_total, nbs_total_cv, biomass_flathead_sole, cv_flathead_sole, biomass_Bering_flounder, cv_Bering_flounder) %>%
across(.cols = -year, ~mjcbase::prettyNum(.x, big.mark = ',') )
index_nbs
# https://rdrr.io/github/drmjc/mjcbase/man/prettyNum.html
mjcbase::prettyNum(index_nbs[,c(3,4,6)], big.mark = ',')
index_nbs[,c(3,4,6)]
# https://rdrr.io/github/drmjc/mjcbase/man/prettyNum.html
mjcbase::prettyNum(index_nbs[,c(3,4)], big.mark = ',')
class(index_nbs)
class(index_nbs[,c(3,4)])
apply(nbs2,2,mjcbase::prettyNum, big.mark = ',')
spp = c('`r spp[1]`', 'Hippoglossoides esassodon', 'Hippoglossoides spp.')
thisyr = 2022
lastyr = thisyr-1
proj_years = (thisyr+1):(thisyr+2)
proj_range = paste0(range(proj_years), collapse = "-")
kableExtra::kable(nbs2)
?kable
kableExtra::kable(nbs2, caption = "Table 3. Northern Bering Sea survey biomass (t) and coefficient of variation (CV) for flathead sole, Bering flounder, and the two combined (Hippoglossoides spp.). Data accessed via Oracle database query on 05 October, 2021. These data are not included in the base model and are presented here for reference only.")
kableExtra::kable(nbs2, format.args = list(big.mark = ','), caption = "Table 3. Northern Bering Sea survey biomass (t) and coefficient of variation (CV) for flathead sole, Bering flounder, and the two combined (Hippoglossoides spp.). Data accessed via Oracle database query on 05 October, 2021. These data are not included in the base model and are presented here for reference only.")
nbs2$year <- character(nbs2$year)
kableExtra::kable(nbs2, format.args = list(big.mark = ','), caption = "Table 3. Northern Bering Sea survey biomass (t) and coefficient of variation (CV) for flathead sole, Bering flounder, and the two combined (Hippoglossoides spp.). Data accessed via Oracle database query on 05 October, 2021. These data are not included in the base model and are presented here for reference only.")
nbs2$year <- as.character(nbs2$year)
kableExtra::kable(nbs2, format.args = list(big.mark = ','), caption = "Table 3. Northern Bering Sea survey biomass (t) and coefficient of variation (CV) for flathead sole, Bering flounder, and the two combined (Hippoglossoides spp.). Data accessed via Oracle database query on 05 October, 2021. These data are not included in the base model and are presented here for reference only.")
index_ai %>%
pivot_wider(names_from=survey, values_from=c(biomass, cv)) %>%
select(-variance, -species) %>%
merge(., SS_index %>% select(year, obs, se_log), by = 'year',all = T) %>%
select(year, total = obs, cv_total = se_log, biomass_AI, cv_AI) %>%
merge(., index_ebs) %>%
merge(., ebs2)
index_nbs %>% select(year, species, biomass, cv) %>%
pivot_wider(names_from=species, values_from=c(biomass, cv)) %>%
merge(., nbs2, by = 'year') %>%
select(year, nbs_total, nbs_total_cv, biomass_flathead_sole, cv_flathead_sole, biomass_Bering_flounder, cv_Bering_flounder)
date_use = "2022-05-31"
table3 <- read.csv(here('tables',paste0(date_use,'-survey_by_spp.csv')))
table3
table3 <- read.csv(here('tables',paste0(date_use,'-NBS_survey_by_spp.csv')))
kableExtra::kable(nbs2, format.args = list(big.mark = ','), caption = "Table 3. Northern Bering Sea survey biomass (t) and coefficient of variation (CV) for flathead sole, Bering flounder, and the two combined (Hippoglossoides spp.). Data accessed via Oracle database query on 05 October, 2021. These data are not included in the base model and are presented here for reference only.")
kableExtra::kable(table3, format.args = list(big.mark = ','), caption = "Table 3. Northern Bering Sea survey biomass (t) and coefficient of variation (CV) for flathead sole, Bering flounder, and the two combined (Hippoglossoides spp.). Data accessed via Oracle database query on 05 October, 2021. These data are not included in the base model and are presented here for reference only.")
table3 <- read.csv(here('tables',paste0(date_use,'-NBS_survey_by_spp.csv'))) %>%
select(-nbs_total, -nbs_total_cv)
names(table3)
kableExtra::kable(table3, format.args = list(big.mark = ','), caption = "Table 3. Northern Bering Sea survey biomass (t) and coefficient of variation (CV) for flathead sole, Bering flounder, and the two combined (Hippoglossoides spp.). Data accessed via Oracle database query on 05 October, 2021. These data are not included in the base model and are presented here for reference only.")
table3 <- read.csv(here('tables',paste0(date_use,'-NBS_survey_by_spp.csv')))
kableExtra::kable(table3, format.args = list(big.mark = ','), caption = "Table 3. Northern Bering Sea survey biomass (t) and coefficient of variation (CV) for flathead sole, Bering flounder, and the two combined (Hippoglossoides spp.). Data accessed via Oracle database query on 05 October, 2021. These data are not included in the base model and are presented here for reference only.")
lubridate::as_date(date_use)
?as_date
kableExtra::kable(table3, format.args = list(big.mark = ','), caption = "Table 3. Northern Bering Sea survey biomass (t) and coefficient of variation (CV) for flathead sole, Bering flounder, and the two combined (Hippoglossoides spp.). Data accessed via Oracle database query on `r date_use`. These data are not included in the base model and are presented here for reference only.")
caption = paste0("Table 3. Northern Bering Sea survey biomass (t) and coefficient of variation (CV) for flathead sole, Bering flounder, and the two combined (Hippoglossoides spp.). Data accessed via Oracle database query on",date_use,"These data are not included in the base model and are presented here for reference only.")
caption = paste0("Table 3. Northern Bering Sea survey biomass (t) and coefficient of variation (CV) for flathead sole, Bering flounder, and the two combined (Hippoglossoides spp.). Data accessed via Oracle database query on",date_use,"These data are not included in the base model and are presented here for reference only.")
kableExtra::kable(table3, format.args = list(big.mark = ','),
caption = paste0("Table 3. Northern Bering Sea survey biomass (t) and coefficient of variation (CV) for flathead sole, Bering flounder, and the two combined (Hippoglossoides spp.). Data accessed via Oracle database query on",date_use,"These data are not included in the base model and are presented here for reference only."))
table3 <- read.csv(here('tables',paste0(date_use,'-NBS_survey_by_spp.csv')))
kableExtra::kable(table3, format.args = list(big.mark = ','),
caption = paste0("Table 3. Northern Bering Sea survey biomass (t) and coefficient of variation (CV) for flathead sole, Bering flounder, and the two combined (Hippoglossoides spp.). Data accessed via Oracle database query on",date_use,". These data are not included in the base model and are presented here for reference only."))
kableExtra::kable(table3, format.args = list(big.mark = ','),
caption = paste0("Table 3. Northern Bering Sea survey biomass (t) and coefficient of variation (CV) for flathead sole, Bering flounder, and the two combined (Hippoglossoides spp.). Data accessed via Oracle database query on ",date_use,". These data are not included in the base model and are presented here for reference only."))
as_date(date_use)
as_date(date_use, format = 1)
stamp(date_use)
month(date_use)
?month
month(date_use, label = T)
paste0(month(date_use, label = T), day(date_use))
date_use_long = paste0(month(date_use, label = T), " ",day(date_use),",",year(date_use))
date_use_long
date_use_long = paste0(month(date_use, label = T), " ",day(date_use),", ",year(date_use))
kableExtra::kable(table3, format.args = list(big.mark = ','),
caption = paste0("Table 3. Northern Bering Sea survey biomass (t) and coefficient of variation (CV) for flathead sole, Bering flounder, and the two combined (Hippoglossoides spp.).  These data are not included in the base model and are presented here for reference only. Data accessed via Oracle database query on ",date_use_long,"."))
table2 <- read.csv(here('tables',paste0(date_use,'-NBS_survey_by_spp.csv')))
kableExtra::kable(table2, format.args = list(big.mark = ','),
caption = paste0("Table 2. Survey biomass in tons and coefficient of variation (CV) of Hippoglossoides spp. combined (flathead sole and Bering flounder) across the entire BSAI; flathead sole only in the Aleutian Islands, Hippoglossoides spp. combined in the Eastern Bering Sea (EBS) shelf survey, flathead sole only in EBS shelf survey, and Bering flounder only in the EBS shelf survey. Slight discrepancies in totals may occur due to rounding. Bolded years are not included in base model.'Data accessed via Oracle database query on ",date_use_long,"."))
table2 <- read.csv(here('tables',paste0(date_use,'-survey_by_spp.csv')))
kableExtra::kable(table2, format.args = list(big.mark = ','),
caption = paste0("Table 2. Survey biomass in tons and coefficient of variation (CV) of Hippoglossoides spp. combined (flathead sole and Bering flounder) across the entire BSAI; flathead sole only in the Aleutian Islands, Hippoglossoides spp. combined in the Eastern Bering Sea (EBS) shelf survey, flathead sole only in EBS shelf survey, and Bering flounder only in the EBS shelf survey. Slight discrepancies in totals may occur due to rounding. Bolded years are not included in base model.'Data accessed via Oracle database query on ",date_use_long,"."))
?kable
table2[is.na(table2)] <-""
kableExtra::kable(table2, format.args = list(big.mark = ','),
caption = paste0("Table 2. Survey biomass in tons and coefficient of variation (CV) of Hippoglossoides spp. combined (flathead sole and Bering flounder) across the entire BSAI; flathead sole only in the Aleutian Islands, Hippoglossoides spp. combined in the Eastern Bering Sea (EBS) shelf survey, flathead sole only in EBS shelf survey, and Bering flounder only in the EBS shelf survey. Slight discrepancies in totals may occur due to rounding. Bolded years are not included in base model.'Data accessed via Oracle database query on ",date_use_long,"."))
table2$year <- as.character(table2$year)
kableExtra::kable(table2, format.args = list(big.mark = ','),
caption = paste0("Table 2. Survey biomass in tons and coefficient of variation (CV) of Hippoglossoides spp. combined (flathead sole and Bering flounder) across the entire BSAI; flathead sole only in the Aleutian Islands, Hippoglossoides spp. combined in the Eastern Bering Sea (EBS) shelf survey, flathead sole only in EBS shelf survey, and Bering flounder only in the EBS shelf survey. Slight discrepancies in totals may occur due to rounding. Bolded years are not included in base model.'Data accessed via Oracle database query on ",date_use_long,"."))
kableExtra::kable(table2, format.args = list(big.mark = ','), digits = 2,
caption = paste0("Table 2. Survey biomass in tons and coefficient of variation (CV) of Hippoglossoides spp. combined (flathead sole and Bering flounder) across the entire BSAI; flathead sole only in the Aleutian Islands, Hippoglossoides spp. combined in the Eastern Bering Sea (EBS) shelf survey, flathead sole only in EBS shelf survey, and Bering flounder only in the EBS shelf survey. Slight discrepancies in totals may occur due to rounding. Bolded years are not included in base model.'Data accessed via Oracle database query on ",date_use_long,"."))
kableExtra::kable(table2, format.args = list(big.mark = ','), digits = c(1,1,2,1),
caption = paste0("Table 2. Survey biomass in tons and coefficient of variation (CV) of Hippoglossoides spp. combined (flathead sole and Bering flounder) across the entire BSAI; flathead sole only in the Aleutian Islands, Hippoglossoides spp. combined in the Eastern Bering Sea (EBS) shelf survey, flathead sole only in EBS shelf survey, and Bering flounder only in the EBS shelf survey. Slight discrepancies in totals may occur due to rounding. Bolded years are not included in base model.'Data accessed via Oracle database query on ",date_use_long,"."))
kableExtra::kable(table2, format.args = list(big.mark = ','), digits = c(1,1,2,0),
caption = paste0("Table 2. Survey biomass in tons and coefficient of variation (CV) of Hippoglossoides spp. combined (flathead sole and Bering flounder) across the entire BSAI; flathead sole only in the Aleutian Islands, Hippoglossoides spp. combined in the Eastern Bering Sea (EBS) shelf survey, flathead sole only in EBS shelf survey, and Bering flounder only in the EBS shelf survey. Slight discrepancies in totals may occur due to rounding. Bolded years are not included in base model.'Data accessed via Oracle database query on ",date_use_long,"."))
round(table2)
kableExtra::kable(table2, format.args = list(big.mark = ','), digits = 0,
caption = paste0("Table 2. Survey biomass in tons and coefficient of variation (CV) of Hippoglossoides spp. combined (flathead sole and Bering flounder) across the entire BSAI; flathead sole only in the Aleutian Islands, Hippoglossoides spp. combined in the Eastern Bering Sea (EBS) shelf survey, flathead sole only in EBS shelf survey, and Bering flounder only in the EBS shelf survey. Slight discrepancies in totals may occur due to rounding. Bolded years are not included in base model.'Data accessed via Oracle database query on ",date_use_long,"."))
kableExtra::kable(table2, format.args = list(big.mark = ','), digits = 2,
caption = paste0("Table 2. Survey biomass in tons and coefficient of variation (CV) of Hippoglossoides spp. combined (flathead sole and Bering flounder) across the entire BSAI; flathead sole only in the Aleutian Islands, Hippoglossoides spp. combined in the Eastern Bering Sea (EBS) shelf survey, flathead sole only in EBS shelf survey, and Bering flounder only in the EBS shelf survey. Slight discrepancies in totals may occur due to rounding. Bolded years are not included in base model.'Data accessed via Oracle database query on ",date_use_long,"."))
