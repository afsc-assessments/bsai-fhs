breaks = seq(0,0.08,0.01),
labels = seq(0,0.08,0.01))+
labs(x = 'Year', y = 'Catch/Summary Biomass (age 3+)')
ggplot(subset(fig1),
aes(x = Yr, y = catch_over_biomass)) +
geom_hline(aes(yintercept = mean(fig1$catch_over_biomass)
),linetype = 'dashed', col = 'grey88') +
geom_text(check.overlap = T, aes(x = 2022, y = 0.027, label = paste0(diff,'%'))) +
geom_line(lwd = 1, col = 'grey77') +
geom_point(data = subset(fig1, Yr > 2021),
lwd = 1,  col = 'blue', pch = 1) +
geom_point(data = subset(fig1, Yr %in% c(2020,2021)),
lwd = 1,  col = 'blue', pch = 16) +
scale_x_continuous(limits = c(1960,2021),
labels = seq(1960,2021,5),
breaks = seq(1960,2021,5))+
scale_y_continuous(limits = c(0,0.08),
breaks = seq(0,0.08,0.01),
labels = seq(0,0.08,0.01))+
labs(x = 'Year', y = 'Catch/Summary Biomass (age 3+)')
ggplot(subset(fig1),
aes(x = Yr, y = catch_over_biomass)) +
geom_hline(aes(yintercept = mean(fig1$catch_over_biomass)
),linetype = 'dashed', col = 'grey88') +
geom_text(check.overlap = T, aes(x = 2020, y = 0.027, label = paste0(diff,'%'))) +
geom_line(lwd = 1, col = 'grey77') +
geom_point(data = subset(fig1, Yr > 2021),
lwd = 1,  col = 'blue', pch = 1) +
geom_point(data = subset(fig1, Yr %in% c(2020,2021)),
lwd = 1,  col = 'blue', pch = 16) +
scale_x_continuous(limits = c(1960,2021),
labels = seq(1960,2021,5),
breaks = seq(1960,2021,5))+
scale_y_continuous(limits = c(0,0.08),
breaks = seq(0,0.08,0.01),
labels = seq(0,0.08,0.01))+
labs(x = 'Year', y = 'Catch/Summary Biomass (age 3+)')
ggplot(subset(fig1),
aes(x = Yr, y = catch_over_biomass)) +
geom_hline(aes(yintercept = mean(fig1$catch_over_biomass)
),linetype = 'dashed', col = 'grey88') +
geom_text(check.overlap = T, aes(x = 2020.5, y = 0.027, label = paste0(diff,'%'))) +
geom_line(lwd = 1, col = 'grey77') +
geom_point(data = subset(fig1, Yr > 2021),
lwd = 1,  col = 'blue', pch = 1) +
geom_point(data = subset(fig1, Yr %in% c(2020,2021)),
lwd = 1,  col = 'blue', pch = 16) +
scale_x_continuous(limits = c(1960,2021),
labels = seq(1960,2021,5),
breaks = seq(1960,2021,5))+
scale_y_continuous(limits = c(0,0.08),
breaks = seq(0,0.08,0.01),
labels = seq(0,0.08,0.01))+
labs(x = 'Year', y = 'Catch/Summary Biomass (age 3+)')
ggplot(subset(fig1),
aes(x = Yr, y = catch_over_biomass)) +
geom_hline(aes(yintercept = mean(fig1$catch_over_biomass)
),linetype = 'dashed', col = 'grey88') +
geom_text(check.overlap = T, aes(x = 2021, y = 0.027, label = paste0(diff,'%'))) +
geom_line(lwd = 1, col = 'grey77') +
geom_point(data = subset(fig1, Yr > 2021),
lwd = 1,  col = 'blue', pch = 1) +
geom_point(data = subset(fig1, Yr %in% c(2020,2021)),
lwd = 1,  col = 'blue', pch = 16) +
scale_x_continuous(limits = c(1960,2021),
labels = seq(1960,2021,5),
breaks = seq(1960,2021,5))+
scale_y_continuous(limits = c(0,0.08),
breaks = seq(0,0.08,0.01),
labels = seq(0,0.08,0.01))+
labs(x = 'Year', y = 'Catch/Summary Biomass (age 3+)')
ggplot(subset(fig1),
aes(x = Yr, y = catch_over_biomass)) +
geom_hline(aes(yintercept = mean(fig1$catch_over_biomass)
),linetype = 'dashed', col = 'grey88') +
geom_text(check.overlap = T, aes(x = 2021, y = 0.027, label = paste0(diff,'%'))) +
geom_line(lwd = 1, col = 'grey77') +
geom_point(data = subset(fig1, Yr > 2021),
lwd = 1,  col = 'blue', pch = 1) +
geom_point(data = subset(fig1, Yr %in% c(2020,2021)),
lwd = 1,  col = 'blue', pch = 16) +
scale_x_continuous(limits = c(1960,2021),
labels = seq(1960,2021,5),
breaks = seq(1960,2021,5))+
scale_y_continuous(limits = c(0,0.08),
breaks = seq(0,0.75,0.01),
labels = seq(0,0.75,0.01))+
labs(x = 'Year', y = 'Catch/Summary Biomass (age 3+)')
ggplot(subset(fig1),
aes(x = Yr, y = catch_over_biomass)) +
geom_hline(aes(yintercept = mean(fig1$catch_over_biomass)
),linetype = 'dashed', col = 'grey88') +
geom_text(check.overlap = T, aes(x = 2021, y = 0.027, label = paste0(diff,'%'))) +
geom_line(lwd = 1, col = 'grey77') +
geom_point(data = subset(fig1, Yr > 2021),
lwd = 1,  col = 'blue', pch = 1) +
geom_point(data = subset(fig1, Yr %in% c(2020,2021)),
lwd = 1,  col = 'blue', pch = 16) +
scale_x_continuous(limits = c(1960,2021),
labels = seq(1960,2021,5),
breaks = seq(1960,2021,5))+
scale_y_continuous(limits = c(0,0.75),
breaks = seq(0,0.75,0.01),
labels = seq(0,0.75,0.01))+
labs(x = 'Year', y = 'Catch/Summary Biomass (age 3+)')
ggplot(subset(fig1),
aes(x = Yr, y = catch_over_biomass)) +
geom_hline(aes(yintercept = mean(fig1$catch_over_biomass)
),linetype = 'dashed', col = 'grey88') +
geom_text(check.overlap = T, aes(x = 2021, y = 0.027, label = paste0(diff,'%'))) +
geom_line(lwd = 1, col = 'grey77') +
geom_point(data = subset(fig1, Yr > 2021),
lwd = 1,  col = 'blue', pch = 1) +
geom_point(data = subset(fig1, Yr %in% c(2020,2021)),
lwd = 1,  col = 'blue', pch = 16) +
scale_x_continuous(limits = c(1960,2021),
labels = seq(1960,2021,5),
breaks = seq(1960,2021,5))+
scale_y_continuous(limits = c(0,0.75),
breaks = seq(0,0.75,0.1),
labels = seq(0,0.75,0.1))+
labs(x = 'Year', y = 'Catch/Summary Biomass (age 3+)')
ggplot(subset(fig1),
aes(x = Yr, y = catch_over_biomass)) +
geom_hline(aes(yintercept = mean(fig1$catch_over_biomass)
),linetype = 'dashed', col = 'grey88') +
geom_text(check.overlap = T, aes(x = 2021, y = 0.027, label = paste0(diff,'%'))) +
geom_line(lwd = 1, col = 'grey77') +
geom_point(data = subset(fig1, Yr > 2021),
lwd = 1,  col = 'blue', pch = 1) +
geom_point(data = subset(fig1, Yr %in% c(2020,2021)),
lwd = 1,  col = 'blue', pch = 16) +
scale_x_continuous(limits = c(1960,2021),
labels = seq(1960,2021,5),
breaks = seq(1960,2021,5))+
scale_y_continuous(limits = c(0,0.075),
breaks = seq(0,0.75,0.1),
labels = seq(0,0.75,0.1))+
labs(x = 'Year', y = 'Catch/Summary Biomass (age 3+)')
ggplot(subset(fig1),
aes(x = Yr, y = catch_over_biomass)) +
geom_hline(aes(yintercept = mean(fig1$catch_over_biomass)
),linetype = 'dashed', col = 'grey88') +
geom_text(check.overlap = T, aes(x = 2021, y = 0.027, label = paste0(diff,'%'))) +
geom_line(lwd = 1, col = 'grey77') +
geom_point(data = subset(fig1, Yr > 2021),
lwd = 1,  col = 'blue', pch = 1) +
geom_point(data = subset(fig1, Yr %in% c(2020,2021)),
lwd = 1,  col = 'blue', pch = 16) +
scale_x_continuous(limits = c(1960,2021),
labels = seq(1960,2021,5),
breaks = seq(1960,2021,5))+
scale_y_continuous(limits = c(0,0.075),
breaks = seq(0,0.75,0.01),
labels = seq(0,0.75,0.01))+
labs(x = 'Year', y = 'Catch/Summary Biomass (age 3+)')
ggplot(subset(fig1),
aes(x = Yr, y = catch_over_biomass)) +
geom_hline(aes(yintercept = mean(fig1$catch_over_biomass)
),linetype = 'dashed', col = 'grey88') +
geom_text(check.overlap = T, aes(x = 2021, y = 0.027, label = paste0(diff,'%'))) +
geom_line(lwd = 1, col = 'grey77') +
geom_point(data = subset(fig1, Yr > 2021),
lwd = 1,  col = 'blue', pch = 1) +
geom_point(data = subset(fig1, Yr %in% c(2020,2021)),
lwd = 1,  col = 'blue', pch = 16) +
scale_x_continuous(limits = c(1960,2021),
labels = seq(1960,2021,5),
breaks = seq(1960,2021,5))+
scale_y_continuous(limits = c(0,0.07),
breaks = seq(0,0.75,0.01),
labels = seq(0,0.75,0.01))+
labs(x = 'Year', y = 'Catch/Summary Biomass (age 3+)')
ggsave(last_plot(), height = 5, width = 8, dpi = 520,
file = here('figs',paste0(Sys.Date(),'-Fig1_catchvsbio_ppt.png')))
ggplot(subset(fig1),
aes(x = Yr, y = catch_over_biomass)) +
geom_hline(aes(yintercept = mean(fig1$catch_over_biomass)
),linetype = 'dashed', col = 'grey88') +
geom_text(check.overlap = T, aes(x = 2021, y = 0.027, label = paste0(diff,'%'))) +
geom_line(lwd = 1, col = 'grey77') +
# geom_point(data = subset(fig1, Yr %in% c(2020,2021)),
#            lwd = 1,  col = 'blue', pch = 16) +
scale_x_continuous(limits = c(1960,2021),
labels = seq(1960,2021,5),
breaks = seq(1960,2021,5))+
scale_y_continuous(limits = c(0,0.07),
breaks = seq(0,0.75,0.01),
labels = seq(0,0.75,0.01))+
labs(x = 'Year', y = 'Catch/Summary Biomass (age 3+)')
ggsave(last_plot(), height = 5, width = 8, dpi = 520,
file = here('figs',paste0(Sys.Date(),'-Fig1_catchvsbio_ppt.png')))
ggplot(subset(fig1),
aes(x = Yr, y = catch_over_biomass)) +
geom_hline(aes(yintercept = mean(fig1$catch_over_biomass)
),linetype = 'dashed', col = 'grey88') +
geom_text(check.overlap = T, aes(x = 2021, y = 0.027, label = paste0(diff,'%'))) +
geom_line(lwd = 1, col = 'grey77') +
ggsidekick::theme_sleek(base_size = 18) +
scale_x_continuous(limits = c(1960,2021),
labels = seq(1960,2021,5),
breaks = seq(1960,2021,5))+
scale_y_continuous(limits = c(0,0.07),
breaks = seq(0,0.75,0.01),
labels = seq(0,0.75,0.01))+
labs(x = 'Year', y = 'Catch/Summary Biomass (age 3+)')
ggsave(last_plot(), height = 5, width = 8, dpi = 520,
file = here('figs',paste0(Sys.Date(),'-Fig1_catchvsbio_ppt.png')))
#* Fig1.2 for ppt----
## show a line for the mean, remove the projected catches and indicate %change
diff<- round(100*(fig1$catch_over_biomass[fig1$Yr==2019]-fig1$catch_over_biomass[fig1$Yr==2020])/
fig1$catch_over_biomass[fig1$Yr==2019])
ggplot(subset(fig1),
aes(x = Yr, y = catch_over_biomass)) +
geom_hline(aes(yintercept = mean(fig1$catch_over_biomass)
),linetype = 'dashed', col = 'grey88') +
geom_text(check.overlap = T, aes(x = 2021, y = 0.027, label = paste0(diff,'%'))) +
geom_line(lwd = 1, col = 'grey77') +
ggsidekick::theme_sleek(base_size = 18) +
scale_x_continuous(limits = c(1960,2021),
labels = seq(1960,2021,5),
breaks = seq(1960,2021,5))+
scale_y_continuous(limits = c(0,0.07),
breaks = seq(0,0.75,0.01),
labels = seq(0,0.75,0.01))+
labs(x = 'Year', y = 'Catch/Summary Biomass (age 3+)')
ggsave(last_plot(), height = 5, width = 8, dpi = 520,
file = here('figs',paste0(Sys.Date(),'-Fig1_catchvsbio_ppt.png')))
#* Fig1.2 for ppt----
## show a line for the mean, remove the projected catches and indicate %change
diff<- round(100*(fig1$catch_over_biomass[fig1$Yr==2019]-fig1$catch_over_biomass[fig1$Yr==2021])/
fig1$catch_over_biomass[fig1$Yr==2019])
ggplot(subset(fig1),
aes(x = Yr, y = catch_over_biomass)) +
geom_hline(aes(yintercept = mean(fig1$catch_over_biomass)
),linetype = 'dashed', col = 'grey88') +
geom_text(check.overlap = T, aes(x = 2021, y = 0.027, label = paste0(diff,'%'))) +
geom_line(lwd = 1, col = 'grey77') +
geom_point(data = subset(fig1, Yr %in% c(2019,2021))) +
ggsidekick::theme_sleek(base_size = 18) +
scale_x_continuous(limits = c(1960,2021),
labels = seq(1960,2021,5),
breaks = seq(1960,2021,5))+
scale_y_continuous(limits = c(0,0.07),
breaks = seq(0,0.75,0.01),
labels = seq(0,0.75,0.01))+
labs(x = 'Year', y = 'Catch/Summary Biomass (age 3+)')
ggsave(last_plot(), height = 5, width = 8, dpi = 520,
file = here('figs',paste0(Sys.Date(),'-Fig1_catchvsbio_ppt.png')))
diff
#* Fig1.2 for ppt----
## show a line for the mean, remove the projected catches and indicate %change
diff<- round(-100*(fig1$catch_over_biomass[fig1$Yr==2019]-fig1$catch_over_biomass[fig1$Yr==2021])/
fig1$catch_over_biomass[fig1$Yr==2019])
ggplot(subset(fig1),
aes(x = Yr, y = catch_over_biomass)) +
geom_hline(aes(yintercept = mean(fig1$catch_over_biomass)
),linetype = 'dashed', col = 'grey88') +
geom_text(check.overlap = T, aes(x = 2021, y = 0.027, label = paste0(diff,'%'))) +
geom_line(lwd = 1, col = 'grey77') +
geom_point(data = subset(fig1, Yr %in% c(2019,2021))) +
ggsidekick::theme_sleek(base_size = 18) +
scale_x_continuous(limits = c(1960,2021),
labels = seq(1960,2021,5),
breaks = seq(1960,2021,5))+
scale_y_continuous(limits = c(0,0.07),
breaks = seq(0,0.75,0.01),
labels = seq(0,0.75,0.01))+
labs(x = 'Year', y = 'Catch/Summary Biomass (age 3+)')
ggsave(last_plot(), height = 5, width = 8, dpi = 520,
file = here('figs',paste0(Sys.Date(),'-Fig1_catchvsbio_ppt.png')))
## Code to produce results
require(dplyr)
require(tidyr)
require(ggplot2)
require(r4ss)
# Write proj files ----
mod_2020_dir <-here('2020_files','model_runs','Run06_francis_tuning')
require(here)
# Write proj files ----
mod_2020_dir <-here('2020_files','model_runs','Run06_francis_tuning')
mod_2020<- SS_output(mod_2020_dir, verbose = F)
base_model = mod_2020
require(dplyr)
require(r4ss)
require(here)
mod_2020_dir <-here('2020_files','model_runs','Run06_francis_tuning')
base_model<- SS_output(mod_2020_dir, verbose = F)
mod_2020_dir <-here('2020_files','model_runs','Run06_francis_tuning')
base_model<- SS_output(mod_2020_dir, verbose = F)
write_file=paste0(here::here('report','SARA','saradump.txt'))
T1 <- noquote("# Stock Assessment Results Archive (SARA) file for stocks managed under the North Pacific Fisheries Management Council \n
#This form is only required for Tier 1-6 stocks in a full year, or Tier 1-3 stocks in a partial year  \n
#There are four required sections to update: Assessment Summary, Fishing Mortality Estimates, Biomass Estimates, and Time Series Estimates with an optional fifth Survey Estimates section \n
#Please fill in the text (surrounded by " ") or data as values in the line after each field marked with a # and capitalized name  \n
#Note that several of the fields below may be static or only change occasionally, please see the SARA_HQ_Lookup Google sheet for more details \n
#Note that some fields reference the 2018 Next Generation Stock Assessment Improvement Plan (SAIP), please see https://spo.nmfs.noaa.gov/sites/default/files/TMSPO183.pdf for more details \n
#ASSESSMENT_SUMMARY -------------------------------------------------------------------------------------------------
#STOCK - Short code for stock name, part of unique identifier key for joining SARA data, see lookup table for name code \n
")
T1 <- noquote("# Stock Assessment Results Archive (SARA) file for stocks managed under the North Pacific Fisheries Management Council \n #This form is only required for Tier 1-6 stocks in a full year, or Tier 1-3 stocks in a partial year  \n
#There are four required sections to update: Assessment Summary, Fishing Mortality Estimates, Biomass Estimates, and Time Series Estimates with an optional fifth Survey Estimates section \n
#Please fill in the text (surrounded by " ") or data as values in the line after each field marked with a # and capitalized name  \n
#Note that several of the fields below may be static or only change occasionally, please see the SARA_HQ_Lookup Google sheet for more details \n
#Note that some fields reference the 2018 Next Generation Stock Assessment Improvement Plan (SAIP), please see https://spo.nmfs.noaa.gov/sites/default/files/TMSPO183.pdf for more details \n
#ASSESSMENT_SUMMARY -------------------------------------------------------------------------------------------------
#STOCK - Short code for stock name, part of unique identifier key for joining SARA data, see lookup table for name code \n
")
T1
noquote("# Stock Assessment Results Archive (SARA) file for stocks managed under the North Pacific Fisheries Management Council \n #This form is only required for Tier 1-6 stocks in a full year, or Tier 1-3 stocks in a partial year  \n
#There are four required sections to update: Assessment Summary, Fishing Mortality Estimates, Biomass Estimates, and Time Series Estimates with an optional fifth Survey Estimates section \n
#Please fill in the text (surrounded by " ") or data as values in the line after each field marked with a # and capitalized name  \n
#Note that several of the fields below may be static or only change occasionally, please see the SARA_HQ_Lookup Google sheet for more details \n
#Note that some fields reference the 2018 Next Generation Stock Assessment Improvement Plan (SAIP), please see https://spo.nmfs.noaa.gov/sites/default/files/TMSPO183.pdf for more details \n
#ASSESSMENT_SUMMARY -------------------------------------------------------------------------------------------------
#STOCK - Short code for stock name, part of unique identifier key for joining SARA data, see lookup table for name code \n
")
T1 <- noquote("# Stock Assessment Results Archive (SARA) file for stocks managed under the North Pacific Fisheries Management Council \n
This form is only required for Tier 1-6 stocks in a full year, or Tier 1-3 stocks in a partial year  \n
#There are four required sections to update: Assessment Summary, Fishing Mortality Estimates, Biomass Estimates, and Time Series Estimates with an optional fifth Survey Estimates section \n
#Please fill in the text (surrounded by " ") or data as values in the line after each field marked with a # and capitalized name  \n
#Note that several of the fields below may be static or only change occasionally, please see the SARA_HQ_Lookup Google sheet for more details \n
#Note that some fields reference the 2018 Next Generation Stock Assessment Improvement Plan (SAIP), please see https://spo.nmfs.noaa.gov/sites/default/files/TMSPO183.pdf for more details \n
#ASSESSMENT_SUMMARY -------------------------------------------------------------------------------------------------
#STOCK - Short code for stock name, part of unique identifier key for joining SARA data, see lookup table for name code \n
")
T1 <- noquote("# Stock Assessment Results Archive (SARA) file for stocks managed under the North Pacific Fisheries Management Council
# This form is only required for Tier 1-6 stocks in a full year, or Tier 1-3 stocks in a partial year  \n
#There are four required sections to update: Assessment Summary, Fishing Mortality Estimates, Biomass Estimates, and Time Series Estimates with an optional fifth Survey Estimates section \n
#Please fill in the text (surrounded by " ") or data as values in the line after each field marked with a # and capitalized name  \n
#Note that several of the fields below may be static or only change occasionally, please see the SARA_HQ_Lookup Google sheet for more details \n
#Note that some fields reference the 2018 Next Generation Stock Assessment Improvement Plan (SAIP), please see https://spo.nmfs.noaa.gov/sites/default/files/TMSPO183.pdf for more details \n
#ASSESSMENT_SUMMARY -------------------------------------------------------------------------------------------------
#STOCK - Short code for stock name, part of unique identifier key for joining SARA data, see lookup table for name code \n
")
T1 <- noquote("# Stock Assessment Results Archive (SARA) file for stocks managed under the North Pacific Fisheries Management Council
# This form is only required for Tier 1-6 stocks in a full year, or Tier 1-3 stocks in a partial year  \n
#There are four required sections to update: Assessment Summary, Fishing Mortality Estimates, Biomass Estimates, and Time Series Estimates with an optional fifth Survey Estimates section \n
#Please fill in the text (surrounded by " ") or data as values in the line after each field marked with a # and capitalized name  \n
#Note that several of the fields below may be static or only change occasionally, please see the SARA_HQ_Lookup Google sheet for more details \n
#Note that some fields reference the 2018 Next Generation Stock Assessment Improvement Plan (SAIP), please see https://spo.nmfs.noaa.gov/sites/default/files/TMSPO183.pdf for more details \n #ASSESSMENT_SUMMARY -------------------------------------------------------------------------------------------------
#STOCK - Short code for stock name, part of unique identifier key for joining SARA data, see lookup table for name code \n
")
T1 <- noquote("# Stock Assessment Results Archive (SARA) file for stocks managed under the North Pacific Fisheries Management Council
# This form is only required for Tier 1-6 stocks in a full year, or Tier 1-3 stocks in a partial year  \n
#There are four required sections to update: Assessment Summary, Fishing Mortality Estimates, Biomass Estimates, and Time Series Estimates with an optional fifth Survey Estimates section \n
#Please fill in the text (surrounded by " ") or data as values in the line after each field marked with a # and capitalized name  \n
#Note that several of the fields below may be static or only change occasionally, please see the SARA_HQ_Lookup Google sheet for more details \n
#Note that some fields reference the 2018 Next Generation Stock Assessment Improvement Plan (SAIP), please see https://spo.nmfs.noaa.gov/sites/default/files/TMSPO183.pdf for more details \n #ASSESSMENT_SUMMARY ------------------------------------------------------------------------------------------------- #STOCK - Short code for stock name, part of unique identifier key for joining SARA data, see lookup table for name code \n
")
write_file=paste0(here::here('report','SARA','saradump.txt'))
T1<-noquote("#NUM_SEXES - Number of sexes if 1 sex=ALL elseif 2 sex=(FEMALE MALE)    ")
write(T1,paste(write_file),append = T)
T1<-noquote(base_model$nsexes)
write(T1,paste(write_file),append = T)
base_model$nfishfleets
T1<-noquote("##NUM_FISHERIES - Number of fisheries    ")
write(T1,paste(write_file),append = T)
T1<-noquote(base_model$nfishfleets)
write(T1,paste(write_file),append = T)
T1<-noquote(paste("#TOTFSHRYMORT -Fishing mortality rate by year  ",sep=" "))
write(T1,paste(write_file),append = T)
T1 <- noquote(paste(round(base_model$derived_quants[grep('F_1|F_2',base_model$derived_quants$Label),
'Value'],4), sep = " " ))
write.table(T1, write_file, eol=" ", quote=F, row.names=F, col.names=F, append = T)
T1<-noquote(paste("#TOTALCATCH -Total catch by year in metric tons ",sep=" "))
write(T1,paste(write_file),append = T)
T1 <- noquote(round(base_model$catch %>% filter(Yr %in% 1978:2022) %>% select(Obs)))
write.table(T1, write_file, eol=" ", quote=F, row.names=F, col.names=F, append = T)
T1<-noquote(paste("#GOA_trawl_biomass_mtons",sep=" "))
write(T1,paste(write_file),append = T)
T1 <- noquote(round(base_model$cpue %>% filter(Yr %in% 1978:2022) %>% select(Yr)))
write.table(T1, write_file, eol=" ", quote=F, row.names=F, col.names=F, append = T)
T1 <- noquote(round(base_model$cpue %>% filter(Yr %in% 1978:2022) %>% select(Obs)))
write.table(T1, write_file, eol=" ", quote=F, row.names=F, col.names=F, append = T)
T1<-noquote(paste("#TOTALBIOMASS -Total biomass by year in metric tons (see age+ above) ",sep=" "))
write(T1,paste(write_file),append = T)
T1 <- noquote(round(base_model$timeseries %>% filter(Yr %in% 1978:2022) %>% select(Bio_all )))
write.table(T1, write_file, eol=" ", quote=F, row.names=F, col.names=F, append = T)
T1<-noquote("#SPAWNBIOMASS -Spawning biomass by year in metric tons ")
write(T1,paste(write_file),append = T)
T1 <- noquote(paste(round(base_model$derived_quants[grep('SSB_1|SSB_2',base_model$derived_quants$Label),
'Value']), sep = " " ))
write.table(T1, write_file, eol=" ", quote=F, row.names=F, col.names=F, append = T)
pdt <- data.frame(read.table(here::here('projection',"bigfile.out"), header=TRUE))
pdt.long <- pivot_longer(pdt, cols=c(-Alternative, -Spp, -Yr), names_to='metric') %>%
mutate(Alternative=factor(Alternative)) %>%
group_by(Yr, Alternative, metric) %>%
dplyr::summarize(med=median(value), lwr=quantile(value, .025),
upr=quantile(value, .975), .groups='drop')
pdt.long <- tidyr::pivot_longer(pdt, cols=c(-Alternative, -Spp, -Yr), names_to='metric') %>%
mutate(Alternative=factor(Alternative)) %>%
group_by(Yr, Alternative, metric) %>%
dplyr::summarize(med=median(value), lwr=quantile(value, .025),
upr=quantile(value, .975), .groups='drop')
pdt.long%>% filter(metric == 'SSB' & Alternative == 1)
pdt
pdt <- data.frame(read.table(here::here('projection',"bigfile.out"), header=TRUE)) %>%
filter(Yr == 2021)
pdt.long <- tidyr::pivot_longer(pdt, cols=c(-Alternative, -Spp, -Yr), names_to='metric') %>%
mutate(Alternative=factor(Alternative)) %>%
group_by(Yr, Alternative, metric) %>%
dplyr::summarize(med=median(value), lwr=quantile(value, .025),
upr=quantile(value, .975), .groups='drop')
pdt.long
pdt.long%>% filter(metric == 'SSB' & Alternative == 1)
T1<-noquote(paste("#FISHERYYEAR - For Tiers 1-3 list years used in the age-structured model, for Tiers 4-6 list longest time series of years in the assessment
",sep=" "))
write(T1,paste(write_file),append = T)
T1 <- noquote(unique(base_model$catch$Yr))
write.table(T1, write_file, eol=" ", quote=F, row.names=F, col.names=F, append = T)
T1<-noquote(paste("#AGE - list of ages used in the model where applicable, NA if no ages used"),sep=" ")
T1<-noquote(paste("#AGE - list of ages used in the model where applicable, NA if no ages used",sep=" "))
write(T1,paste(write_file),append = T)
T1 <- noquote(unique(base_model$agebins))
T1
write.table(T1, write_file, eol=" ", quote=F, row.names=F, col.names=F, append = T)
T1<-noquote("#RECRUITMENT -Number of recruits by year (see multiplier above) ")
write(T1,paste(write_file),append = T)
T1 <- noquote(paste(base_model$derived_quants[grep('Recr_1|Recr_2',base_model$derived_quants$Label),
'Value'], sep = " " ))
write.table(T1, write_file, eol=" ", quote=F, row.names=F, col.names=F, append = T)
base_model$summary_age
require(ss3sim)
require(ggplot2)
setup_scenarios_defaults()
## runs the om-em pair given a dirrectory and whatever
## impacts you specify in the simdf
run_ss3sim(
iterations = 1:2,
simdf = NULL,
bias_adjust = FALSE,
user_recdevs = recdevs_det
)
setup_scenarios_defaults()
source("https://raw.githubusercontent.com/mkapur/kaputils/master/R/getF.R")
Edat<-getFhist(nsim=1000,Esd=0.001,nyears=61,dFmin=-0.07,dFmax=0.07,bb=-0.1,scale=0.2 /1.323)
Edat<-getF(nsim=1000,Esd=0.001,nyears=61,dFmin=-0.07,dFmax=0.07,bb=-0.1,scale=0.2 /1.323)
Edat
Edat<-getF(nsim=1,Esd=0.001,nyears=61,dFmin=-0.07,dFmax=0.07,bb=-0.1,scale=0.2 /1.323)
Edat
require(dplyr)
require(r4ss)
require(here)
mod_2020_dir <-here('2020_files','model_runs','Run06_francis_tuning')
base_model<- SS_output(mod_2020_dir, verbose = F)
base_model$derived_quants[grep('SSB_2022',base_model$derived_quants$Label),] %>%
mutate(lci = round(Value - 1.96*StdDev),
uci = round(Value + 1.96*StdDev))
pdt <- data.frame(read.table(here::here('projection',"bigfile.out"), header=TRUE)) %>%
filter(Yr == 2021)
pdt.long <- tidyr::pivot_longer(pdt, cols=c(-Alternative, -Spp, -Yr), names_to='metric') %>%
mutate(Alternative=factor(Alternative)) %>%
group_by(Yr, Alternative, metric) %>%
dplyr::summarize(med=median(value), lwr=quantile(value, .025),
upr=quantile(value, .975), .groups='drop')
unique(pdt.long$metric)
pdt.long%>% filter(metric == 'F' & Alternative == 1)
round(base_model$derived_quants[grep('SSB_2021',base_model$derived_quants$Label),
'Value'],4)
base_model$derived_quants$Label
round(base_model$derived_quants[grep('SSB_2020',base_model$derived_quants$Label),
'Value'],4)
round(base_model$derived_quants[grep('SSB_2020',base_model$derived_quants$Label),
],4)
base_model$derived_quants[grep('SSB_2020',base_model$derived_quants$Label),]
# The Best B Estimate and associated confidence intervals should be the same as the last full or operational assessment. I have 148077, 137099, and 159055 for Best B, LCI, UCI from last year's SARA. Does that look correct to you?
base_model$derived_quants[grep('SSB_2020',base_model$derived_quants$Label),] %>%
mutate(lci = Value-1.96*StdDev, uci = Value+1.96*StdDev)
T1 <- noquote(round(base_model$timeseries %>% filter(Yr %in% 1963:2022) %>% select(Bio_all )))
T1
t(T1)
base_model$derived_quants[grep('F_1|F_2',base_model$derived_quants$Label),
'Value']
base_model$derived_quants[grep('F_1|F_2',base_model$derived_quants$Label),
]
base_model$derived_quants
sort(unique(base_model$derived_quants$Label
)
)
base_model$derived_quants[grep('F_1|F_2',base_model$derived_quants$Label),
'Value']
base_model$derived_quants[grep('F_1|F_2',base_model$derived_quants$Label),
]
T1 <- noquote(paste(round(base_model$derived_quants[grep('F_1|F_2',base_model$derived_quants$Label),
'Value'],4), sep = " " ))
T1
length(T1)
length(1962:2021)
length(1963:2020)
t(T1)
t(T1)
T1 <- noquote(round(base_model$catch %>% filter(Yr %in% 1963:2022) %>% select(Obs)))
T1
t(T1)
cbind(T1,1962:2022)
cbind(T1,1963:2022)
base_model$catch %>% filter(Yr %in% 1963:2022)
base_model$catch %>% filter(Yr %in% 1963:2022)  %>% select(Yr, Value)
base_model$catch %>% filter(Yr %in% 1963:2022)  %>% select(Yr, Obs)
pdt.long%>% filter(metric == 'Catch' & Alternative == 1)
pdt <-data.frame(read.table(here::here('projection',"bigfile.out"), header=TRUE))
# %>%
# filter(Yr == 2021)
pdt.long <- tidyr::pivot_longer(pdt, cols=c(-Alternative, -Spp, -Yr), names_to='metric') %>%
mutate(Alternative=factor(Alternative)) %>%
group_by(Yr, Alternative, metric) %>%
dplyr::summarize(med=median(value), lwr=quantile(value, .025),
upr=quantile(value, .975), .groups='drop')
# The Best F Estimate should be for the last full year of catch (so 2021 in this case) and for partials can be taken from proj, since that's the "best" available estimate as we update the catch in the projections.
pdt.long%>% filter(metric == 'F' & Alternative == 1)
pdt.long%>% filter(metric == 'Catch' & Alternative == 1)
