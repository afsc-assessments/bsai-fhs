tidyr::pivot_wider(names_from = AGE, values_from = freq, id_cols = c(YEAR, SEX), values_fill = 0)
srvage0 <- survage %>%
mutate(AGE = as.numeric(AGE)) %>%
tidyr::pivot_wider(names_from = AGE, values_from = freq, id_cols = c(YEAR, SEX), values_fill = 0) %>%
mutate(SEX = ifelse(SEX == 'males',2,1)) %>%
merge(., nsamp_age, by = 'YEAR')
head(srvage0)
srvage0 <- survage %>%
mutate(AGE = as.numeric(AGE)) %>%
tidyr::pivot_wider(names_from = AGE, values_from = freq, id_cols = c(YEAR, SEX), values_fill = 0) %>%
mutate(SEX = ifelse(SEX == 'males',2,1)) %>%
merge(., nsamp_age, by = 'YEAR') %>%
select(YEAR, SEX, HAULJOIN, 1:21)
srvage0
head(srvage0)
srvage0 <- survage %>%
mutate(AGE = as.numeric(AGE)) %>%
tidyr::pivot_wider(names_from = AGE, values_from = freq, id_cols = c(YEAR, SEX), values_fill = 0) %>%
mutate(SEX = ifelse(SEX == 'males',2,1)) %>%
merge(., nsamp_age, by = 'YEAR') %>%
select(YEAR, SEX, HAULJOIN, paste0(1:21))
head(srvage0)
srvage0 %>%
filter(SEX == 1) %>%
merge(., srvage0 %>%
filter(SEX == 2) %>%
select(-SEX, -HAULJOIN),
by = c('YEAR'), all.y = FALSE) %>%
mutate(Seas = 7, FltSvy = -2, Gender = 3, Part = 0,Ageerr = 1, Lbin_lo = -1, Lbin_hi = -1) %>%
select(Yr = YEAR, Seas, FltSvy, Gender, Part, Nsamp=HAULJOIN, everything(),
-SEX) %>%
arrange(Yr)
srvage0 %>%
filter(SEX == 1) %>%
merge(., srvage0 %>%
filter(SEX == 2) %>%
select(-SEX, -HAULJOIN),
by = c('YEAR'), all.y = FALSE) %>%
mutate(Seas = 7, FltSvy = -2, Gender = 3, Part = 0,Ageerr = 1, Lbin_lo = -1, Lbin_hi = -1) %>%
select(Yr = YEAR, Seas, FltSvy, Gender, Part, Ageerr, Nsamp=HAULJOIN, everything(),
-SEX) %>%
arrange(Yr)
srvage0 %>%
filter(SEX == 1) %>%
merge(., srvage0 %>%
filter(SEX == 2) %>%
select(-SEX, -HAULJOIN),
by = c('YEAR'), all.y = FALSE) %>%
mutate(Seas = 7, FltSvy = -2, Gender = 3, Part = 0,Ageerr = 1, Lbin_lo = -1) %>%
select(Yr = YEAR, Seas, FltSvy, Gender, Part, Ageerr, Lbin_lo = Lbin_lo, Lbin_hi = Lbin_lo, Nsamp=HAULJOIN, everything(),
-SEX) %>%
arrange(Yr)
srvage0 %>%
filter(SEX == 1) %>%
merge(., srvage0 %>%
filter(SEX == 2) %>%
select(-SEX, -HAULJOIN),
by = c('YEAR'), all.y = FALSE) %>%
mutate(Seas = 7, FltSvy = -2, Gender = 3, Part = 0,Ageerr = 1, Lbin_lo = -1) %>%
select(Yr = YEAR, Seas, FltSvy, Gender, Part, Ageerr, Lbin_lo = Lbin_lo, Lbin_hi = Lbin_lo, Nsamp=HAULJOIN, everything(),
-SEX) %>%
arrange(Yr) %>%
write.csv(., file = here::here(year,'data','output','srv_ages_ss3-ghost.csv'), row.names = FALSE)
mod_2020_new_srv_age <- SS_output(here(year, 'model_runs','18.2c_2020_ss3v33022w-new_srv_ages_ghost'))
compsummary_5 <- SSsummarize(list(mod_2020,mod_2020_new_srv_age))
SSplotComps(mod_2020,fleets=2, subplots = 1, kind = 'AGE',
datonly = TRUE, maxrows = 6,showsampsize = TRUE, showeffN = FALSE)
SSplotComps(mod_2020,fleets=2, subplots = 2, kind = 'AGE',
datonly = TRUE, maxrows = 6,showsampsize = TRUE, showeffN = FALSE)
?SSplotComps
SSplotComps(mod_2020, kind = 'AGE')
SSplotComps(mod_2020, kind = 'AGE', fleets = 2)
SS_plots(mod_2020_new_srv_age)
SS_plots(mod_2020)
knitr::include_graphics(here::here(year, 'model_runs','18.2c_2020_ss3v33022w-new_srv_ages_ghost','comp_gstagefit_flt2mkt0_page1.png'))
knitr::include_graphics(here::here(old_mdl_fldr,'plots','plots','comp_gstagefit_flt2mkt0_page1.png'))
old_mdl_fldr
knitr::include_graphics(here::here(old_mdl_fldr,'plots','plots','comp_gstagefit_flt2mkt0.png'))
knitr::include_graphics(here::here(old_mdl_fldr,'plots','comp_gstagefit_flt2mkt0.png'))
knitr::include_graphics(here::here(year, 'model_runs','18.2c_2020_ss3v33022w-new_srv_ages_ghost','plots','comp_gstagefit_flt2mkt0.png'))
knitr::include_graphics(here::here(year, 'model_runs','18.2c_2020_ss3v33022w-new_srv_ages_ghost','plots','comp_gstagedat_flt2mkt0.png'))
knitr::include_graphics(here::here(year, 'model_runs','18.2c_2020_ss3v33022w-new_srv_ages_ghost','plots','comp_gstagedata_flt2mkt0.png'))
knitr::include_graphics(here::here(year, 'model_runs','18.2c_2020_ss3v33022w-new_srv_ages_ghost','plots','comp_gstagedat_flt2mkt0.png'))
knitr::include_graphics(here::here(year, 'model_runs','18.2c_2020_ss3v33022w-new_srv_ages_ghost','plots','comp_gstagedat_flt2mkt0.png'))
knitr::include_graphics(here::here(old_mdl_fldr,'plots','comp_gstagedat_flt2mkt0.png'))
knitr::include_graphics(here::here(year, 'model_runs','18.2c_2020_ss3v33022w-new_srv_ages_ghost','plots','comp_gstagedat_flt2mkt0_page1.png'))
mod_2020$parameters
mod_2020$parameters[mod_2020$parameters$Phase>0,]
mod_2020$parameters[mod_2020$parameters$Phase>0,] %>% View()
require(dplyr)
mod_2020$parameters[mod_2020$parameters$Phase>0,] %>% View()
log(100)
qsurv
qsurvAI
rbind( mod_2020$cpue %>% select(Yr, Obs, SE) %>%
mutate(src = 'Old'),
read.csv(here(year,'data','output','2023-12-19-ss_survey_index.csv')) %>% mutate(src = 'New') %>% select(Yr = year, Obs = obs, SE = se_log, src) ) %>%
ggplot(., aes(x = Yr, y = Obs, col = src )) +
geom_point(alpha = 0.2) +
geom_errorbar(aes(ymin = Obs - Obs*SE, ymax = Obs+Obs*SE), width = 0) +
scale_color_manual(values = c('blue','grey22'),
labels = c('2024 Model Data', '2020 Model Data'))+
labs(x = 'Year', y = 'Observed Survey Biomass (t)', color = '')+
geom_vline(data = NULL, aes(xintercept = 2019), linetype = 'dotted', color = 'grey66')
require(ggplot2)
rbind( mod_2020$cpue %>% select(Yr, Obs, SE) %>%
mutate(src = 'Old'),
read.csv(here(year,'data','output','2023-12-19-ss_survey_index.csv')) %>% mutate(src = 'New') %>% select(Yr = year, Obs = obs, SE = se_log, src) ) %>%
ggplot(., aes(x = Yr, y = Obs, col = src )) +
geom_point(alpha = 0.2) +
geom_errorbar(aes(ymin = Obs - Obs*SE, ymax = Obs+Obs*SE), width = 0) +
scale_color_manual(values = c('blue','grey22'),
labels = c('2024 Model Data', '2020 Model Data'))+
labs(x = 'Year', y = 'Observed Survey Biomass (t)', color = '')+
geom_vline(data = NULL, aes(xintercept = 2019), linetype = 'dotted', color = 'grey66')
library(r4ss)
library(here)
library(dplyr)
library(ggplot2)
theme_set(afscassess::theme_report())
rbind( mod_2020$cpue %>% select(Yr, Obs, SE) %>%
mutate(src = 'Old'),
read.csv(here(year,'data','output','2023-12-19-ss_survey_index.csv')) %>% mutate(src = 'New') %>% select(Yr = year, Obs = obs, SE = se_log, src) ) %>%
ggplot(., aes(x = Yr, y = Obs, col = src )) +
geom_point(alpha = 0.2) +
geom_errorbar(aes(ymin = Obs - Obs*SE, ymax = Obs+Obs*SE), width = 0) +
scale_color_manual(values = c('blue','grey22'),
labels = c('2024 Model Data', '2020 Model Data'))+
labs(x = 'Year', y = 'Observed Survey Biomass (t)', color = '')+
geom_vline(data = NULL, aes(xintercept = 2019), linetype = 'dotted', color = 'grey66')
qsurv
afscdata::bsai_fhs
q_bts_biomass
afscdata::q_bts_biomass
rbind( mod_2020$cpue %>% select(Yr, Obs, SE) %>%
mutate(src = 'Old'),
read.csv(here(year,'data','output','2023-12-19-ss_survey_index.csv')) %>% mutate(src = 'New') %>% select(Yr = year, Obs = obs, SE = se_log, src) ) %>%
ggplot(., aes(x = Yr, y = Obs, col = src )) +
geom_point(alpha = 0.2) +
geom_errorbar(aes(ymin = Obs - Obs*SE, ymax = Obs+Obs*SE), width = 0) +
scale_color_manual(values = c('blue','grey22'),
labels = c('2024 Model Data', '2020 Model Data'))+
labs(x = 'Year', y = 'Observed Survey Biomass (t)', color = '')+
geom_vline(data = NULL, aes(xintercept = 2019), linetype = 'dotted', color = 'grey66')
library(r4ss)
library(here)
library(dplyr)
library(ggplot2)
theme_set(afscassess::theme_report())
colvec <- c("dodgerblue4", "#ffb703","#219ebc", "#023047",  "#fb8500")
year <- 2024
old_mdl_fldr <- here::here(year,'mgmt','18.2c_2020')
mod18.2c_2020 <- mod_2020 <- SS_output(old_mdl_fldr, verbose = FALSE)
SSplotData(mod18.2c_2020, subplots = 2)
mod18.2c_2020_v33022 <- SS_output(here::here(year,'model_runs','18.2c_2020_ss3v33022'), verbose = FALSE)
ss_compare <- SSsummarize(list(mod18.2c_2020,mod18.2c_2020_v33022))
names(ss_compare$likelihoods)[c(1,2)] <- c('Model 18.2c (2020)', 'Model 18.2c (2020) - software transition')
ss_compare$likelihoods[c(1:7,11),]
SSplotComparisons(ss_compare, print = T, plotdir = here('docs','ss_version_bridge'), legendlabels = names(ss_compare$likelihoods)[c(1,2)], col = colvec)
knitr::include_graphics(here::here('docs','ss_version_bridge','compare2_spawnbio_uncertainty.png'))
knitr::include_graphics(here::here('docs','ss_version_bridge','compare13_indices.png'))
knitr::include_graphics(here::here('docs','ss_version_bridge','compare10_recruits_uncertainty.png'))
knitr::include_graphics(here::here('docs','ss_version_bridge','compare16_densities_SR_LN(R0).png'))
m18.2cv33022w <- SS_output(here::here(year,'model_runs','18.2c_2020_ss3v33022w'), verbose = FALSE)
SSplotSelex(m18.2cv33022w, fleets = 2, sexes = 1)
## note that I changed the "collected" column so that only the difference between collected & aged is peeking out
otodat <- read.csv(here::here(year,'data','user_input','otolith_reads_vs_aged.csv')) %>%
mutate(Collected_plot = Collected-Aged,
proportion = ifelse(Aged ==0 |is.na(Collected),'',round(Aged/Collected,2))) %>%
select(-region, -effN_mod2020,-Collected) %>%
reshape2::melt(id = c('Year','source', 'proportion')) %>%
mutate(variable = forcats::fct_relevel(variable, c('Collected_plot','Aged')))
ggplot(otodat, aes(x = Year, y = value, fill = variable, color = variable )) +
geom_bar(position = 'stack', stat = 'identity', width = 1) +
labs(x = 'Year', y = 'Number of Otoliths', fill = '', color = '') +
scale_color_manual(values = c('grey77','dodgerblue2'), labels = c('Collected','Aged'))+
scale_fill_manual(values = c('grey77','dodgerblue2'), labels = c('Collected','Aged'))+
scale_x_continuous(expand = c(0,0))+
facet_grid(source~.)+
geom_bar(data = subset(otodat, Year>2021 & variable == 'Aged'),position = 'stack', stat = 'identity', width = 1, fill = 'red', color = 'red')
## visualize the comps data with fewer samples
obs_fsh_19<-  subset(mod_2020$agedbase, Yr == 2019 & Sex == 1 & Fleet == 1) %>% select(Obs) %>% unlist()
sim600 <- rmultinom(n  = 1, prob= obs_fsh_19, size = 600 ) %>%
data.frame('raw'=.) %>%
mutate(freq = raw/sum(raw),
age = as.numeric(gsub('Obs','',rownames(.))))
sim187 <- rmultinom(n  = 1, prob= obs_fsh_19, size = 187 ) %>%
data.frame('raw'=.) %>%
mutate(freq = raw/sum(raw),
age = as.numeric(gsub('Obs','',rownames(.))))
sim175 <- rmultinom(n  = 1, prob= obs_fsh_19, size = 175 ) %>%
data.frame('raw'=.) %>%
mutate(freq = raw/sum(raw),
age = as.numeric(gsub('Obs','',rownames(.))))
sim107 <- rmultinom(n  = 1, prob= obs_fsh_19, size = 107 ) %>%
data.frame('raw'=.) %>%
mutate(freq = raw/sum(raw),
age = as.numeric(gsub('Obs','',rownames(.))))
p1 <- ggplot(sim600, aes(x = age, y = freq)) +
geom_area(fill = 'grey55')+   geom_point() +
labs(x = 'age',y = 'simulated frequency', title = 'Full Sampling (n = 600)') +
scale_y_continuous(limits = c(0,0.15))
p2 <-ggplot(sim187, aes(x = age, y = freq)) +
geom_area(fill = 'grey55')+   geom_point() +
labs(x = 'age',y = 'simulated frequency', title = 'Equivalent Sampling (n = 187)')+scale_y_continuous(limits = c(0,0.15))
p3 <-ggplot(sim175, aes(x = age, y = freq)) +
geom_area(fill = 'dodgerblue4')+   geom_point() +
labs(x = 'age',y = 'simulated frequency', title = 'Compromise Sampling (n = 175)')+scale_y_continuous(limits = c(0,0.15))
p4 <-ggplot(sim107, aes(x = age, y = freq)) +
geom_area(fill = 'grey55')+   geom_point() +
labs(x = 'age',y = 'simulated frequency', title = 'Data Weighted Sampling (n = 107)')+scale_y_continuous(limits = c(0,0.15))
Rmisc::multiplot(plotlist = list(p1,p3,p2, p4), cols = 2)
## simulate the survey CAALs at lower SS.
obs_srv_19 <-  subset(mod_2020$condbase, Yr == 2019 & Sex == 1 & Fleet == 2) %>%
group_by(Bin) %>%
summarise(mean(Obs)) %>%
select(Obs = `mean(Obs)`) %>% unlist()
sim600 <- rmultinom(n  = 1, prob= obs_srv_19, size = 600 ) %>%
data.frame('raw'=.) %>%
mutate(freq = raw/sum(raw),
age = as.numeric(gsub('Obs','',rownames(.))))
sim187 <- rmultinom(n  = 1, prob= obs_srv_19, size = 187 ) %>%
data.frame('raw'=.) %>%
mutate(freq = raw/sum(raw),
age = as.numeric(gsub('Obs','',rownames(.))))
sim225 <- rmultinom(n  = 1, prob= obs_srv_19, size = 225 ) %>%
data.frame('raw'=.) %>%
mutate(freq = raw/sum(raw),
age = as.numeric(gsub('Obs','',rownames(.))))
sim267 <- rmultinom(n  = 1, prob= obs_srv_19, size = 267 ) %>%
data.frame('raw'=.) %>%
mutate(freq = raw/sum(raw),
age = as.numeric(gsub('Obs','',rownames(.))))
sim50 <- rmultinom(n  = 1, prob= obs_srv_19, size = 50 ) %>%
data.frame('raw'=.) %>%
mutate(freq = raw/sum(raw),
age = as.numeric(gsub('Obs','',rownames(.))))
p1 <- ggplot(sim600, aes(x = age, y = freq)) +
geom_area(fill = 'grey55')+   geom_point() +
labs(x = 'age',y = 'simulated frequency', title =  'Full Sampling (n = 600)') +
scale_y_continuous(limits = c(0,0.1))
p4 <-ggplot(sim187, aes(x = age, y = freq)) +
geom_area(fill = 'grey55')+   geom_point() +
labs(x = 'age',y = 'simulated frequency', title = 'Equivalent Sampling (n = 187)')+scale_y_continuous(limits = c(0,0.15))
p2 <-ggplot(sim267, aes(x = age, y = freq)) +
geom_area(fill = 'grey55')+   geom_point() +
labs(x = 'age',y = 'simulated frequency', title = 'Data Weighted Sampling (n = 267)')+scale_y_continuous(limits = c(0,0.15))
p3 <- ggplot(sim225, aes(x = age, y = freq)) +
geom_area(fill = 'dodgerblue4')+   geom_point() +
labs(x = 'age',y = 'simulated frequency', title = 'Compromise Sampling (n = 225)')+scale_y_continuous(limits = c(0,0.15))
Rmisc::multiplot(plotlist = list(p1,p3,p2, p4), cols = 2)
## Aggregate catch to just year
rbind( mod_2020$catch %>% select(Yr, Obs) %>%
mutate(src = 'Old'),
read.csv(here(year,'data','output','fsh_catch_ss3.csv')) %>% mutate(src = 'New') %>% select(Yr = year, Obs = catch_t, src) ) %>%
ggplot(., aes(x = Yr, y = Obs, col = src )) +
geom_line() +
scale_color_manual(values = c('blue','grey22'),
labels = c('2024 Model Data', '2020 Model Data'))+
labs(x = 'Year', y = 'Observed Catch (t)', color = '') +
geom_vline(data = NULL, aes(xintercept = 2020), linetype = 'dotted', color = 'grey66')
mod_2020_new_fsh_age_comps <- SS_output(here(year, 'model_runs','18.2c_2020_ss3v33022w-new_fsh_age_comps'))
mod_2020_new_fsh_len_comps <- SS_output(here(year, 'model_runs','18.2c_2020_ss3v33022w-new_fsh_len_comps'))
compsummary_1 <- SSsummarize(list(mod_2020,mod_2020_new_fsh_age_comps))
compsummary_2 <- SSsummarize(list(mod_2020,mod_2020_new_fsh_len_comps))
SSplotComps(mod_2020, kind = 'LEN', fleets = 1, subplots = 1, datonly = TRUE, maxrows = 10,showsampsize = TRUE, showeffN = FALSE)
SSplotComps(mod_2020_new_fsh_len_comps, kind = 'LEN',fleets = 1,  subplots = 1, datonly = TRUE, maxrows = 10,showsampsize = TRUE, showeffN = FALSE)
SSplotComparisons(compsummary_2,
legendlabels = c('Model 18.2c (2020)','Model 18.2c (2020) with new length comp data'),
subplots = 2)
SSplotComparisons(compsummary_2,
legendlabels = c('Model 18.2c (2020)','Model 18.2c (2020) with new length comp data'),
subplots = 12)
SSplotComparisons(compsummary_2,
legendlabels = c('Model 18.2c (2020)','Model 18.2c (2020) with new length comp data'),
subplots = 13)
mod_2020$lendbase %>% mutate(src = 'Old') %>%
bind_rows(mod_2020_new_fsh_len_comps$lendbase%>% mutate(src = 'New')) %>%
filter(Fleet == 1)%>%
select(Yr, sex, Nsamp_in, Fleet, src) %>%
group_by(Yr, Fleet, src) %>%
summarise(inputN=mean(Nsamp_in)) %>%
# mutate(Fleet = ifelse(Fleet == 1,'Fishery','Survey')) %>%
ggplot(., aes(x = Yr, y = inputN, fill = src, color = src)) +
geom_bar(position = 'dodge', stat = 'identity') +
# facet_wrap(~Fleet, scales = 'free') +
scale_fill_manual(values = colvec, labels = c('afscdata()','Model 18.2c (2020) data')) +
scale_color_manual(values = colvec, labels = c('afscdata()','Model 18.2c (2020) data')) +
labs(x = 'Year',  y = 'Input Sample Size (nhauls)', fill = '',color = '')
SSplotComps(mod_2020, kind = 'AGE',fleets=1, subplots = 1, datonly = TRUE, maxrows = 6,showsampsize = TRUE, showeffN = FALSE)
SSplotComps(mod_2020_new_fsh_age_comps,fleets=1, kind = 'AGE', subplots = 1, datonly = TRUE, maxrows = 6,showsampsize = TRUE, showeffN = FALSE)
SSplotComparisons(compsummary_1,
legendlabels = c('Model 18.2c (2020)','Model 18.2c (2020) with new comp data'),
subplots = 2)
SSplotComparisons(compsummary_1,
legendlabels = c('Model 18.2c (2020)','Model 18.2c (2020) with new comp data'),
subplots = 12)
SSplotComparisons(compsummary_1,
legendlabels = c('Model 18.2c (2020)','Model 18.2c (2020) with new age comp data'),
subplots = 13)
rbind( mod_2020$cpue %>% select(Yr, Obs, SE) %>%
mutate(src = 'Old'),
read.csv(here(year,'data','output','2023-12-19-ss_survey_index.csv')) %>% mutate(src = 'New') %>% select(Yr = year, Obs = obs, SE = se_log, src) ) %>%
ggplot(., aes(x = Yr, y = Obs, col = src )) +
geom_point(alpha = 0.2) +
geom_errorbar(aes(ymin = Obs - Obs*SE, ymax = Obs+Obs*SE), width = 0) +
scale_color_manual(values = c('blue','grey22'),
labels = c('2024 Model Data', '2020 Model Data'))+
labs(x = 'Year', y = 'Observed Survey Biomass (t)', color = '')+
geom_vline(data = NULL, aes(xintercept = 2019), linetype = 'dotted', color = 'grey66')
rbind( mod_2020$cpue %>% select(Yr, Obs, SE) %>%
mutate(src = 'Old')
# read.csv(here(year,'data','output','2023-12-19-ss_survey_index.csv')) %>% mutate(src = 'New') %>% select(Yr = year, Obs = obs, SE = se_log, src)
#
) %>%
ggplot(., aes(x = Yr, y = Obs, col = src )) +
geom_point(alpha = 0.2) +
geom_errorbar(aes(ymin = Obs - Obs*SE, ymax = Obs+Obs*SE), width = 0) +
scale_color_manual(values = c('blue','grey22'),
labels = c('2024 Model Data', '2020 Model Data'))+
labs(x = 'Year', y = 'Observed Survey Biomass (t)', color = '')+
geom_vline(data = NULL, aes(xintercept = 2019), linetype = 'dotted', color = 'grey66')
rbind( mod_2020$cpue %>% select(Yr, Obs, SE) %>%
mutate(src = 'Old'),
read.csv(here(year,'data','output','2023-12-19-ss_survey_index.csv')) %>% mutate(src = 'New') %>% select(Yr = year, Obs = obs, SE = se_log, src)
) %>%
ggplot(., aes(x = Yr, y = Obs, col = src )) +
geom_point(alpha = 0.2) +
geom_errorbar(aes(ymin = Obs - Obs*SE, ymax = Obs+Obs*SE), width = 0) +
scale_color_manual(values = c('blue','grey22'),
labels = c('2024 Model Data', '2020 Model Data'))+
labs(x = 'Year', y = 'Observed Survey Biomass (t)', color = '')+
geom_vline(data = NULL, aes(xintercept = 2019), linetype = 'dotted', color = 'grey66')
sql_channel <- gapindex::get_connected()
spp_start_year <-
RODBC::sqlQuery(channel = sql_channel,
query = "SELECT * FROM GAP_PRODUCTS.SPECIES_YEAR")
## use complex for surv bio
production_data_forbio <- gapindex::get_data(
year_set = 1982:2023,
survey_set = "EBS",
data.frame(GROUP = 10129, SPECIES_CODE = 10130:10140),
pull_lengths = FALSE,
haul_type = 3,
abundance_haul = "Y",
sql_channel = sql_channel)
production_data_forbio <- gapindex::calc_cpue(racebase_tables = production_data_forbio)
bts_sparse_og <- read.csv("C:/Users/maia.kapur/Work/assessments/bsai-fhs/2024/data/raw/bsai_total_bts_biomass_data.csv")  %>%
dplyr::group_by(year, survey) %>%
dplyr::summarise(biomass= sum(total_biomass), ## to MT
sd = sqrt(sum(biomass_var ))) %>%
tidyr::pivot_wider(names_from=survey, values_from=c(biomass, sd))
bts_sparse <- rbind(production_biomass_stratum,production_biomass_stratum_ai)  %>%
dplyr::group_by(YEAR, SURVEY) %>%
dplyr::summarise(biomass= sum(BIOMASS_MT  ),## to MT
sd = sqrt(sum(BIOMASS_VAR ))) %>%
tidyr::pivot_wider(names_from=SURVEY, values_from=c(biomass, sd))
bts_sparse_og <- read.csv("C:/Users/maia.kapur/Work/assessments/bsai-fhs/2024/data/raw/bsai_total_bts_biomass_data.csv")  %>%
dplyr::group_by(year, survey) %>%
dplyr::summarise(biomass= sum(total_biomass), ## to MT
sd = sqrt(sum(biomass_var ))) %>%
tidyr::pivot_wider(names_from=survey, values_from=c(biomass, sd))
bts_sparse <- rbind(production_biomass_stratum,production_biomass_stratum_ai)  %>%
dplyr::group_by(YEAR, SURVEY) %>%
dplyr::summarise(biomass= sum(BIOMASS_MT  ),## to MT
sd = sqrt(sum(BIOMASS_VAR ))) %>%
tidyr::pivot_wider(names_from=SURVEY, values_from=c(biomass, sd))
production_biomass_stratum_forbio <- gapindex::calc_biomass_stratum(racebase_tables = production_data_ai,
cpue = production_data_forbio)
production_data_forbio <- gapindex::calc_cpue(racebase_tables = production_data_forbio)
head(production_data_forbio)
## use complex for surv bio
production_data_forbio <- gapindex::get_data(
year_set = 1982:2023,
survey_set = "EBS",
spp_codes = data.frame(GROUP = 10129, SPECIES_CODE = 10130:10140),
pull_lengths = FALSE,
haul_type = 3,
abundance_haul = "Y",
sql_channel = sql_channel)
production_cpue <- calc_cpue(racebase_tables = production_data_forbio)
production_cpue <- gapindex::calc_cpue(racebase_tables = production_data_forbio)
production_biomass_stratum <-
gapindex::calc_biomass_stratum(racebase_tables = production_data,
cpue = production_cpue)
production_biomass_stratum <-
gapindex::calc_biomass_stratum(racebase_tables = production_data_forbio,
cpue = production_cpue)
# Aggregate Biomass to subareas and region
production_biomass_subarea <-
calc_biomass_subarea(racebase_tables = production_data_forbio,
biomass_strata = production_biomass_stratum)
# Aggregate Biomass to subareas and region
production_biomass_subarea <-
gapindex::calc_biomass_subarea(racebase_tables = production_data_forbio,
biomass_strata = production_biomass_stratum)
bts_sparse_og <- read.csv("C:/Users/maia.kapur/Work/assessments/bsai-fhs/2024/data/raw/bsai_total_bts_biomass_data.csv")  %>%
dplyr::group_by(year, survey) %>%
dplyr::summarise(biomass= sum(total_biomass), ## to MT
sd = sqrt(sum(biomass_var ))) %>%
tidyr::pivot_wider(names_from=survey, values_from=c(biomass, sd))
bts_sparse <- production_biomass_subarea  %>%
dplyr::group_by(YEAR, SURVEY) %>%
dplyr::summarise(biomass= sum(BIOMASS_MT  ),## to MT
sd = sqrt(sum(BIOMASS_VAR ))) %>%
tidyr::pivot_wider(names_from=SURVEY, values_from=c(biomass, sd))
tail(bts_sparse);tail(bts_sparse_og)
production_biomass_subarea
production_biomass_subarea
production_data_forbio
bts_sparse
tail(bts_sparse);tail(bts_sparse_og)
bts_sparse
bts_sparse_og
afscdata::q_bts_biomass
?gapindex::get_data
qsurv
bts_sparse_og
bts_sparse
names(bts_sparse) <- tolower(names(bts_sparse))
bts_sparse_og
ggplot(data = NULL, aes(x = year)) +
geom_bar(data = bts_sparse_og, aes(y = biomass_EBS_SHELF )) +
geom_bar(data = bts_sparse, aes(y = biomass_EBS   ))
ggplot(data = NULL, aes(x = year)) +
geom_bar(data = bts_sparse_og, aes(y = biomass_EBS_SHELF )) +
geom_bar(data = bts_sparse, aes(y = biomass_ebs   ))
ggplot(data = NULL, aes(x = year)) +
geom_line(data = bts_sparse_og, aes(y = biomass_EBS_SHELF )) +
geom_line(data = bts_sparse, aes(y = biomass_ebs   ))
geom_line(data = bts_sparse, aes(y = biomass_ebs, color = 'vignette, complex')
ggplot(data = NULL, aes(x = year)) +
geom_line(data = bts_sparse_og, aes(y = biomass_EBS_SHELF )) +
geom_line(data = bts_sparse, aes(y = biomass_ebs, color = 'vignette, complex'))
ggplot(data = NULL, aes(x = year)) +
geom_line(data = mod_2020$cpue, aes(x = Yr, y = Obs,
color = '2020 data (haehnr), complex') ) +
geom_line(data = bts_sparse_og, aes(y = biomass_EBS_SHELF,
color = 'afsc.race_biomass_ebsshelf_plusnw, individual codes') ) +
geom_line(data = bts_sparse, aes(y = biomass_ebs, color = 'vignette, complex')) +
labs(x = Year, y = 'Biomass (kg)')
ggplot(data = NULL) +
geom_line(data = mod_2020$cpue, aes(x = Yr, y = Obs,
color = '2020 data (haehnr), complex') ) +
geom_line(data = bts_sparse_og, aes(y = biomass_EBS_SHELF,
color = 'afsc.race_biomass_ebsshelf_plusnw, individual codes') ) +
geom_line(data = bts_sparse, aes(y = biomass_ebs, color = 'vignette, complex')) +
labs(x = Year, y = 'Biomass (kg)')
ggplot(data = NULL) +
geom_line(data = mod_2020$cpue, aes(x = Yr, y = Obs,
color = '2020 data (haehnr), complex') ) +
geom_line(data = bts_sparse_og, aes(x = year, y = biomass_EBS_SHELF,
color = 'afsc.race_biomass_ebsshelf_plusnw, individual codes') ) +
geom_line(data = bts_sparse, aes(x = year, y = biomass_ebs, color = 'vignette, complex')) +
labs(x = Year, y = 'Biomass (kg)')
ggplot(data = NULL) +
geom_line(data = mod_2020$cpue, aes(x = Yr, y = Obs,
color = '2020 data (haehnr), complex') ) +
geom_line(data = bts_sparse_og, aes(x = year, y = biomass_EBS_SHELF,
color = 'afsc.race_biomass_ebsshelf_plusnw, individual codes') ) +
geom_line(data = bts_sparse, aes(x = year, y = biomass_ebs, color = 'vignette, complex')) +
labs(x = 'Year', y = 'Biomass (kg)')
ggplot(data = NULL) +
geom_line(data = mod_2020$cpue, aes(x = Yr, y = Obs,
color = '2020 data (haehnr), complex') ) +
geom_line(data = bts_sparse_og, aes(x = year, y = biomass_EBS_SHELF/1000,
color = 'afsc.race_biomass_ebsshelf_plusnw, individual codes') ) +
geom_line(data = bts_sparse, aes(x = year, y = biomass_ebs/1000, color = 'vignette, complex')) +
labs(x = 'Year', y = 'Biomass (t)')
ggplot(data = NULL) +
geom_line(data = mod_2020$cpue, aes(x = Yr, y = Obs,
color = '2020 data (haehnr), complex') ) +
geom_line(data = bts_sparse_og, aes(x = year, y = biomass_EBS_SHELF,
color = 'afsc.race_biomass_ebsshelf_plusnw, individual codes') ) +
geom_line(data = bts_sparse, aes(x = year, y = biomass_ebs, color = 'vignette, complex')) +
labs(x = 'Year', y = 'Biomass (t)')
summary(mod_2020$cpue$Obs)
summary(bts_sparse_og$biomass_EBS_SHELF)
bts_sparse_og
bts_sparse
ggplot(data = NULL) +
# geom_line(data = mod_2020$cpue, aes(x = Yr, y = Obs,
#                                     color = '2020 data (haehnr), complex') ) +
geom_line(data = bts_sparse_og, aes(x = year, y = biomass_EBS_SHELF/1000,
color = 'afsc.race_biomass_ebsshelf_plusnw, individual codes') ) +
geom_line(data = bts_sparse, aes(x = year, y = biomass_ebs/1000, color = 'vignette, complex')) +
labs(x = 'Year', y = 'Biomass (t)')
ggplot(data = NULL) +
# geom_line(data = mod_2020$cpue, aes(x = Yr, y = Obs,
#                                     color = '2020 data (haehnr), complex') ) +
geom_line(data = bts_sparse_og, aes(x = year, y = biomass_EBS_SHELF/1000,
color = 'afsc.race_biomass_ebsshelf_plusnw, individual codes') ) +
geom_line(data = bts_sparse, aes(x = year, y = biomass_ebs/1000, color = 'vignette, complex')) +
labs(x = 'Year', y = 'Biomass (t)') +
theme(legend.position = 'top')
bts_sparse_og
bts_sparse
2766366/2075662
bts_sparse[bts_sparse$year == 1993]
bts_sparse[bts_sparse$year == 1993,]
3100218/2344074
ggplot(data = NULL) +
geom_line(data = bts_sparse_og, aes(x = year, y = biomass_EBS_SHELF/1000,
color = 'afsc.race_biomass_ebsshelf_plusnw, individual codes') ) +
geom_line(data = bts_sparse, aes(x = year, y = biomass_ebs/1000, color = 'vignette, complex')) +
labs(x = 'Year', y = 'Biomass (t)', color = '') +
theme(legend.position = 'top')
afscdata::bts_fhs
afscdata::bsai_fhs()
afscdata::bsai_fhs
afscdata::q_bts_biomass()
afscdata::q_bts_biomass
