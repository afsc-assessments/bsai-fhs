paste0(range(2020,year-1),collapse='-')
# remotes::install_github("crsh/rmdfiltr")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.pos = "!h", out.extra = "")
load(here::here('data', paste0("2023-09-27-catches_for_proj.rdata")))
load(here::here(this_year,'data', paste0("2023-09-27-catches_for_proj.rdata")))
this_year = 2023
load(here::here(this_year,'data', paste0("2023-09-27-catches_for_proj.rdata")))
load(here::here('projection','safe_table.rdata')) ##safe02
load(here::here('projection','safe_table.rdata')) ##safe02
load(here::here('projection','safe_table.rdata')) ##safe02
load(here::here(this_year,'projection','safe_table.rdata')) ##safe02
safe::main_table(safe02, year=2023, tier=3, c1, c2, c3)
load(here::here(this_year,'data', paste0("2023-09-27-catches_for_proj.rdata")))
c1 = as.numeric(catchvec[4,2]) # estimated catch in current year
c2 = as.numeric(catchvec[5,2]) # proj catch year + 1
c3 = as.numeric(catchvec[6,2]) # proj catch year + 2
load(here::here(this_year,'projection','safe_table.rdata')) ##safe02
safe::main_table(safe02, year=2023, tier=3, c1, c2, c3)
catchvec[5,2]
catches <- read.csv(here::here('tables','2023-09-27-catch_proportions.csv'))
catches <- read.csv(here::here(this_year,'tables','2023-09-27-catch_proportions.csv'))
catches$year<-as.character(catches$year)
flextable::flextable(catches) %>%
flextable::set_caption("Catch (in tons) of Flathead sole and Bering flounder combined (Hippoglossoides elassodon) and Flathead sole only, and Bering flounder only. Observer data of species-specific extrapolated weight in each haul was summed over hauls within each year and used to calculate the proportion of the total Hippoglossoides spp. catch that was Flathead sole or Bering flounder. Proportions were multiplied by the total Hippoglossoides spp. (Flathead sole and Bering flounder combined) catches reported by AKFIN to obtain total catch of Flathead sole separately from that of Bering flounder. The 2023 catches are current as of Oct 19, 2023 and the value shown below does not include projections through the end of the year.") %>%
flextable::set_header_labels(., values = c('Year','Total Hippoglossoides spp.','Flathead Sole','Bering Flounder'))
library(dplyr)
catches <- read.csv(here::here(this_year,'tables','2023-09-27-catch_proportions.csv'))
catches$year<-as.character(catches$year)
flextable::flextable(catches) %>%
flextable::set_caption("Catch (in tons) of Flathead sole and Bering flounder combined (Hippoglossoides elassodon) and Flathead sole only, and Bering flounder only. Observer data of species-specific extrapolated weight in each haul was summed over hauls within each year and used to calculate the proportion of the total Hippoglossoides spp. catch that was Flathead sole or Bering flounder. Proportions were multiplied by the total Hippoglossoides spp. (Flathead sole and Bering flounder combined) catches reported by AKFIN to obtain total catch of Flathead sole separately from that of Bering flounder. The 2023 catches are current as of Oct 19, 2023 and the value shown below does not include projections through the end of the year.") %>%
flextable::set_header_labels(., values = c('Year','Total Hippoglossoides spp.','Flathead Sole','Bering Flounder'))
survspp <- read.csv(here::here(this_year,'tables','2023-09-27-survey_by_spp.csv'))
survspp$year<-as.character(survspp$year)
flextable::regulartable(survspp) %>%
flextable::set_caption("Survey biomass in tons and coefficient of variation (CV) of Hippoglossoides spp. (combined Flathead sole and Bering flounder) across the entire BSAI; Flathead sole only in the Aleutian Islands, Hippoglossoides spp. combined in the Eastern Bering Sea (EBS) shelf survey, Flathead sole only in EBS shelf survey, and Bering flounder only in the EBS shelf survey. Slight discrepancies in totals may occur due to rounding.") %>%
flextable::colformat_double(j = seq(2,10,2), big.mark = ',', digits = 0) %>%
flextable::colformat_double(j = seq(3,11,2), digits = 2) %>%
flextable::set_header_labels(., values = c('Year',	'Biomass (Total)','CV (Total)',	'Biomass (AI)',	'CV (AI)',	'Biomass (EBS, all)',	'CV (EBS, all)',	'Biomass (EBS, flathead)',	'CV (EBS, flathead)',	'Biomass (EBS, Bering Flounder)',	'CV (EBS, Bering Flounder)'))
survspp <- read.csv(here::here(this_year,'tables','2023-09-27-survey_by_spp.csv')) %>% filter(year< 2023)
nbssurvspp <- read.csv(here::here('tables','2023-09-27-NBS_survey_by_spp.csv'))
nbssurvspp <- read.csv(here::here(this_year, 'tables','2023-09-27-NBS_survey_by_spp.csv'))
nbssurvspp$year<-as.character(nbssurvspp$year)
flextable::regulartable(nbssurvspp) %>%
flextable::set_caption("Northern Bering Sea survey biomass (t) and coefficient of variation (CV) for Flathead sole, Bering flounder, and the two combined (Hippoglossoides spp.). These data are presented here for reference only.") %>%
flextable::colformat_double(j = seq(2,6,2), big.mark = ',', digits = 0) %>%
flextable::colformat_double(j = seq(3,7,2), digits = 2) %>%
flextable::set_header_labels(., values = c('Year',	'Biomass (Total)',	'CV (Total)',	'Biomass (NBS, flathead)',	'CV (NBS, flathead)',	'Biomass (NBS, Bering Flounder)',	'CV (NBS, Bering Flounder)'))
catches <- read.csv(here::here(this_year,'tables','2023-09-27-catch_proportions.csv'))
catches$year<-as.character(catches$year)
flextable::flextable(catches) %>%
flextable::set_caption("Catch (in tons) of Flathead sole and Bering flounder combined (Hippoglossoides elassodon) and Flathead sole only, and Bering flounder only. Observer data of species-specific extrapolated weight in each haul was summed over hauls within each year and used to calculate the proportion of the total Hippoglossoides spp. catch that was Flathead sole or Bering flounder. Proportions were multiplied by the total Hippoglossoides spp. (Flathead sole and Bering flounder combined) catches reported by AKFIN to obtain total catch of Flathead sole separately from that of Bering flounder. Note that the value for ",this_year," is the observed catch, current through", pull_date," and the extrapolated catches used for this year in the projection model are higher.") %>%
flextable::set_header_labels(., values = c('Year','Total Hippoglossoides spp.','Flathead Sole','Bering Flounder'))
catches <- read.csv(here::here(this_year,'tables','2023-09-27-catch_proportions.csv'))
catches$year<-as.character(catches$year)
flextable::flextable(catches) %>%
flextable::set_caption("Catch (in tons) of Flathead sole and Bering flounder combined (Hippoglossoides elassodon) and Flathead sole only, and Bering flounder only. Observer data of species-specific extrapolated weight in each haul was summed over hauls within each year and used to calculate the proportion of the total Hippoglossoides spp. catch that was Flathead sole or Bering flounder. Proportions were multiplied by the total Hippoglossoides spp. (Flathead sole and Bering flounder combined) catches reported by AKFIN to obtain total catch of Flathead sole separately from that of Bering flounder. Note that the value for ",this_year," is the observed catch, current through", pull_date," and the extrapolated catches used for this year in the projection model are higher.") %>%
flextable::set_header_labels(., values = c('Year','Total Hippoglossoides spp.','Flathead Sole','Bering Flounder'))
pull_date = "2023-09-27"
catches <- read.csv(here::here(this_year,'tables','2023-09-27-catch_proportions.csv'))
catches$year<-as.character(catches$year)
flextable::flextable(catches) %>%
flextable::set_caption("Catch (in tons) of Flathead sole and Bering flounder combined (Hippoglossoides elassodon) and Flathead sole only, and Bering flounder only. Observer data of species-specific extrapolated weight in each haul was summed over hauls within each year and used to calculate the proportion of the total Hippoglossoides spp. catch that was Flathead sole or Bering flounder. Proportions were multiplied by the total Hippoglossoides spp. (Flathead sole and Bering flounder combined) catches reported by AKFIN to obtain total catch of Flathead sole separately from that of Bering flounder. Note that the value for ",this_year," is the observed catch, current through", pull_date," and the extrapolated catches used for this year in the projection model are higher.") %>%
flextable::set_header_labels(., values = c('Year','Total Hippoglossoides spp.','Flathead Sole','Bering Flounder'))
catches <- read.csv(here::here(this_year,'tables','2023-09-27-catch_proportions.csv'))
catches$year<-as.character(catches$year)
pull_date
this_year
catches <- read.csv(here::here(this_year,'tables','2023-09-27-catch_proportions.csv'))
catches$year<-as.character(catches$year)
flextable::flextable(catches) %>%
flextable::set_caption(paste0("Catch (in tons) of Flathead sole and Bering flounder combined (Hippoglossoides elassodon) and Flathead sole only, and Bering flounder only. Observer data of species-specific extrapolated weight in each haul was summed over hauls within each year and used to calculate the proportion of the total Hippoglossoides spp. catch that was Flathead sole or Bering flounder. Proportions were multiplied by the total Hippoglossoides spp. (Flathead sole and Bering flounder combined) catches reported by AKFIN to obtain total catch of Flathead sole separately from that of Bering flounder. Note that the value for ",this_year," is the observed catch, current through ", pull_date," and the extrapolated catches used for this year in the projection model are higher.")) %>%
flextable::set_header_labels(., values = c('Year','Total Hippoglossoides spp.','Flathead Sole','Bering Flounder'))
survspp <- read.csv(here::here(this_year,'tables','2023-09-27-survey_by_spp.csv')) %>% filter(year< 2023)
survspp$year<-as.character(survspp$year)
flextable::regulartable(survspp) %>%
flextable::set_caption("Survey biomass in tons and coefficient of variation (CV) of Hippoglossoides spp. (combined Flathead sole and Bering flounder) across the entire BSAI; Flathead sole only in the Aleutian Islands, Hippoglossoides spp. combined in the Eastern Bering Sea (EBS) shelf survey, Flathead sole only in EBS shelf survey, and Bering flounder only in the EBS shelf survey. Slight discrepancies in totals may occur due to rounding.") %>%
flextable::colformat_double(j = seq(2,10,2), big.mark = ',', digits = 0) %>%
flextable::colformat_double(j = seq(3,11,2), digits = 2) %>%
flextable::set_header_labels(., values = c('Year',	'Biomass (Total)','CV (Total)',	'Biomass (AI)',	'CV (AI)',	'Biomass (EBS, all)',	'CV (EBS, all)',	'Biomass (EBS, flathead)',	'CV (EBS, flathead)',	'Biomass (EBS, Bering Flounder)',	'CV (EBS, Bering Flounder)'))
nbssurvspp <- read.csv(here::here(this_year, 'tables','2023-09-27-NBS_survey_by_spp.csv'))
nbssurvspp$year<-as.character(nbssurvspp$year)
flextable::regulartable(nbssurvspp) %>%
flextable::set_caption("Northern Bering Sea survey biomass (t) and coefficient of variation (CV) for Flathead sole, Bering flounder, and the two combined (Hippoglossoides spp.). These data are presented here for reference only and are not used in any assessments.") %>%
flextable::colformat_double(j = seq(2,6,2), big.mark = ',', digits = 0) %>%
flextable::colformat_double(j = seq(3,7,2), digits = 2) %>%
flextable::set_header_labels(., values = c('Year',	'Biomass (Total)',	'CV (Total)',	'Biomass (NBS, flathead)',	'CV (NBS, flathead)',	'Biomass (NBS, Bering Flounder)',	'CV (NBS, Bering Flounder)'))
paste0(range(2020,this_year-1),collapse='-')
paste0(range(this_year,this_year+2),collapse='-')
prettyNum(catchvec[4,2],big.mark=',')
paste0(range(this_year-6,this_year-1),collapse='-')
prettyNum(catchvec[5,2],big.mark=',')
paste0(range(this_year-6,this_year-1),collapse='-')
safe::main_table
catches <- read.csv(here::here(this_year,'tables','2023-09-27-catch_proportions.csv'))
catches$year<-as.character(catches$year)
flextable::flextable(catches) %>%
flextable::set_caption(paste0("Catch (in tons) of Flathead sole and Bering flounder combined (Hippoglossoides elassodon) and Flathead sole only, and Bering flounder only. Observer data of species-specific extrapolated weight in each haul was summed over hauls within each year and used to calculate the proportion of the total Hippoglossoides spp. catch that was Flathead sole or Bering flounder. Proportions were multiplied by the total Hippoglossoides spp. (Flathead sole and Bering flounder combined) catches reported by AKFIN to obtain total catch of Flathead sole separately from that of Bering flounder. Note that the value for ",this_year," is the observed catch, current through ", pull_date,"; the extrapolated catches used for this year in the projection model are higher.")) %>%
flextable::set_header_labels(., values = c('Year','Total Hippoglossoides spp.','Flathead Sole','Bering Flounder'))  %>%
flextable::font(fontname = "Times New Roman",
part = "all") %>% flextable::fontsize(size = 11, part = "all")
survspp <- read.csv(here::here(this_year,'tables','2023-09-27-survey_by_spp.csv')) %>% filter(year< 2023)
survspp$year<-as.character(survspp$year)
flextable::regulartable(survspp) %>%
flextable::set_caption("Survey biomass in tons and coefficient of variation (CV) of Hippoglossoides spp. (combined Flathead sole and Bering flounder) across the entire BSAI; Flathead sole only in the Aleutian Islands, Hippoglossoides spp. combined in the Eastern Bering Sea (EBS) shelf survey, Flathead sole only in EBS shelf survey, and Bering flounder only in the EBS shelf survey. Slight discrepancies in totals may occur due to rounding.") %>%
flextable::colformat_double(j = seq(2,10,2), big.mark = ',', digits = 0) %>%
flextable::colformat_double(j = seq(3,11,2), digits = 2) %>%
flextable::set_header_labels(., values = c('Year',	'Biomass (Total)','CV (Total)',	'Biomass (AI)',	'CV (AI)',	'Biomass (EBS, all)',	'CV (EBS, all)',	'Biomass (EBS, flathead)',	'CV (EBS, flathead)',	'Biomass (EBS, Bering Flounder)',	'CV (EBS, Bering Flounder)'))  %>%
flextable::font(fontname = "Times New Roman", part = "all") %>%
flextable::fontsize(size = 11, part = "all")
nbssurvspp <- read.csv(here::here(this_year, 'tables','2023-09-27-NBS_survey_by_spp.csv'))
nbssurvspp$year<-as.character(nbssurvspp$year)
flextable::regulartable(nbssurvspp) %>%
flextable::set_caption("Northern Bering Sea survey biomass (t) and coefficient of variation (CV) for Flathead sole, Bering flounder, and the two combined (Hippoglossoides spp.). These data are presented here for reference only and are not used in any assessments.") %>%
flextable::colformat_double(j = seq(2,6,2), big.mark = ',', digits = 0) %>%
flextable::colformat_double(j = seq(3,7,2), digits = 2) %>%
flextable::set_header_labels(., values = c('Year',	'Biomass (Total)',	'CV (Total)',	'Biomass (NBS, flathead)',	'CV (NBS, flathead)',	'Biomass (NBS, Bering Flounder)',	'CV (NBS, Bering Flounder)'))  %>%
flextable::font(fontname = "Times New Roman", part = "all") %>%
flextable::fontsize(size = 11, part = "all")
knitr::include_graphics(here::here(this_year,'figs','2023-09-27-index_wCVs.png'))
library(r4ss)
library(here)
library(dplyr)
year <- 2024
old_mdl_fldr <- here::here(year,'mgmt','18.2c_2020')
old_mdl_fldr
mod18.2c_2020 <- SS_output(old_mdl_fldr)
mod18.2c_2020_v33022 <- SS_output( here::here(year,'mgmt','18.2c_2020_ss3v33022'))
mod18.2c_2020_v33022$maximum_gradient
mod18.2c_2020_v33022 <- SS_output(here::here(year,'mgmt','18.2c_2020_ss3v33022'))
mod18.2c_2020$maximum_gradient_component
install_github('r4ss/r4ss')
devtools::install_github('r4ss/r4ss')
devtools::install_github('r4ss/r4ss')
mod18.2c_2020_v33022 <- SS_output(here::here(year,'mgmt','18.2c_2020_ss3v33022'))
library(r4ss)
mod18.2c_2020_v33022 <- SS_output(here::here(year,'mgmt','18.2c_2020_ss3v33022'))
mod18.2c_2020_v33022 <- SS_output(here::here(year,'model_runs','18.2c_2020_ss3v33022'))
mod18.2c_2020 <- SS_output(old_mdl_fldr)
ss_compare <- SSsummarize(mod18.2c_2020,mod18.2c_2020_v33022)
ss_compare <- SSsummarize(list(mod18.2c_2020,mod18.2c_2020_v33022))
ss_compare$likelihoods
signif(ss_compare$likelihoods,4)
ss_compare$likelihoods
ss_compare$likelihoods[c(1:7,11)]
ss_compare$likelihoods[c(1:7,11),]
ss_compare$modelnames
?SSsummarize
names(ss_compare$likelihoods)[c(1,2)] <- c('Model 18.2c (2020), M18.2c (2024)')
ss_compare$likelihoods[c(1:7,11),]
names(ss_compare$likelihoods)[c(1,2)] <- c('Model 18.2c (2020)', 'M18.2c (2024)')
ss_compare$likelihoods[c(1:7,11),]
mod18.2c_2020_v33022 <- SS_output(here::here(year,'model_runs','18.2c_2020_ss3v33022'))
ss_compare <- SSsummarize(list(mod18.2c_2020,mod18.2c_2020_v33022))
library(r4ss)
library(here)
library(dplyr)
year <- 2024
old_mdl_fldr <- here::here(year,'mgmt','18.2c_2020')
mod18.2c_2020 <- SS_output(old_mdl_fldr, verbose = FALSE)
SSplotComparisons(ss_compare, plotdir = here(year,'figs'))
SSplotComparisons(ss_compare, print = T, plotdir = here(year,'figs'))
SSplotComparisons(ss_compare, print = T, plotdir = here(year,'figs'), legendlabels = names(ss_compare$likelihoods)[c(1,2)], col = colvec)
4ss)
colvec <- c("dodgerblue4", "#ffb703","#219ebc", "#023047",  "#fb8500")
SSplotComparisons(ss_compare, print = T, plotdir = here(year,'figs'), legendlabels = names(ss_compare$likelihoods)[c(1,2)], col = colvec)
names(ss_compare$likelihoods)[c(1,2)]
names(ss_compare$likelihoods)[c(1,2)] <- c('Model 18.2c (2020)', 'M18.2c (2024)')
SSplotComparisons(ss_compare, print = T, plotdir = here(year,'figs'), legendlabels = names(ss_compare$likelihoods)[c(1,2)], col = colvec)
knitr::include_graphics(here(year,'figs','ss_version_bridge','compare13_indices.png'))
knitr::include_graphics(here(year,'figs','ss_version_bridge','compare2_spawnbio_uncertainty.png'))
knitr::include_graphics(here(year,'figs','ss_version_bridge','compare16_densities_SR_LN(R0).png'))
knitr::include_graphics(here(year,'figs','ss_version_bridge','compare10_recruits_uncertainty.png'))
knitr::include_graphics(here(year,'figs','ss_version_bridge','compare16_densities_SR_LN(R0).png'))
here::here(year,'figs','ss_version_bridge','compare16_densities_SR_LN(R0).png')
knitr::include_graphics(here::here(year,'figs','ss_version_bridge','compare16_densities_SR_LN(R0).png'))
get
fsh_sp_label
username_AKFIN <- showPrompt(title="Username", message="Enter your AKFIN username:", default="")
require(rstudioapi) ## enables masking of RODBC name, password
username_AKFIN <- showPrompt(title="Username", message="Enter your AKFIN username:", default="")
password_AKFIN <- askForPassword(prompt="Enter your AKFIN password:")
akfin <- odbcConnect("AKFIN",username_AKFIN,password_AKFIN,  believeNRows = FALSE)
#  SETUP ----
#* Packages & Oracle ----
require(RODBC)
akfin <- odbcConnect("AKFIN",username_AKFIN,password_AKFIN,  believeNRows = FALSE)
install.packages("ROracle")
afscdata::connect()
loadNamespace("ROracle")
m18.2cv33022w <- SS_output(here::here(year,'model_runs','18.2c_2020_ss3v33022w'), verbose = FALSE)
require(r4ss)
m18.2cv33022w <- SS_output(here::here(year,'model_runs','18.2c_2020_ss3v33022w'), verbose = FALSE)
library(r4ss)
library(here)
library(dplyr)
colvec <- c("dodgerblue4", "#ffb703","#219ebc", "#023047",  "#fb8500")
year <- 2024
m18.2cv33022w <- SS_output(here::here(year,'model_runs','18.2c_2020_ss3v33022w'), verbose = FALSE)
SSplotSelex(m18.2cv33022w, fleets = 2)
SSplotSelex(m18.2cv33022w, fleets = 2, sexes = 1)
SSplotData(mod18.2c_2020)
old_mdl_fldr <- here::here(year,'mgmt','18.2c_2020')
mod18.2c_2020 <- SS_output(old_mdl_fldr, verbose = FALSE)
SSplotData(mod18.2c_2020)
SSplotData(mod18.2c_2020, subplots = 1)
SSplotData(mod18.2c_2020, subplots = 2)
knitr::include_graphics(here(year,'figs','ss_version_bridge','compare10_recruits_uncertainty.png'))
knitr::include_graphics(here(year,'figs','ss_version_bridge','compare10_recruits_uncertainty.png'))
getwd()
require(here)
require(r4ss)
require(dplyr)
base_model <- SS_output(here('model_runs','m0_8-newMI-biasAdj'), covar=TRUE, verbose=FALSE, printstats=FALSE)
## you must be on the VPN for this to work
afscdata::connect()
afscdata::connect
## you must be on the VPN for this to work
DBI::dbConnect(odbc::odbc(), 'akfin', uid = 'mkapur', pwd = 'ssmamk22')
## you must be on the VPN for this to work
DBI::dbConnect(odbc::odbc(), 'AKFIN', uid = 'mkapur', pwd = 'ssmamk22')
## you must be on the VPN for this to work
DBI::dbConnect(odbc::odbc(), 'AKFIN', uid = 'mkapur', pwd = 'ssmamk22')
DBI::dbConnect(odbc::odbc(), 'AKFIN', uid = 'mkapur', pwd = 'ssmamk22')
## you must be on the VPN for this to work
DBI::dbConnect(odbc::odbc(), 'AKFIN', uid = 'mkapur', pwd = 'ssmamk22')
DBI::dbConnect(odbc::odbc(), 'AKFIN', uid = 'mkapur', pwd = 'ssmamk22')
DBI::dbConnect(odbc::odbc(), 'AKFIN', uid = 'mkapur', pwd = 'ssmamk22')
library(DBI)
DBI::dbConnect(odbc::odbc(), 'AKFIN', uid = 'mkapur', pwd = 'ssmamk22')
install.packages('ROracle')
DBI::dbConnect(odbc::odbc(), 'AKFIN', uid = 'mkapur', pwd = 'ssmamk22')
library(ROracle)
DBI::dbConnect(odbc::odbc(), 'AKFIN', uid = 'mkapur', pwd = 'ssmamk22')
DBI::dbConnect(odbc::odbc(), 'AKFI', uid = 'mkapur', pwd = 'ssmamk22')
DBI::dbConnect(odbc::odbc(), 'AKFIN', uid = 'mkapur', pwd = 'ssmamk22')
DBI::dbConnect(odbc::odbc(), 'AKFIN', uid = 'mkapur', pwd = 'ssmamk22')
DBI::dbConnect(odbc::odbc(), 'AKFIN', uid = 'mkapur', pwd = 'ssmamk22')
install.packages('ROracle')
DBI::dbConnect(odbc::odbc(), 'AKFIN', uid = 'mkapur', pwd = 'ssmamk22')
library(ROracle)
library(RODBC)
library(tidyverse)
DBI::dbConnect(odbc::odbc(), 'AKFIN', uid = 'mkapur', pwd = 'ssmamk22')
