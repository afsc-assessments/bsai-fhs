# files <- list.files(here('data','weekly_catches'), full.names=TRUE)
## For projection model need to predict total catches in this
## year. Use weekly catches from from previous years to get
## proportion of catch by week to estimate terminal year catch.
##
files <- list.files('data/weekly_catches/', full.names=TRUE)
test <- lapply(1:length(files), function(i){
skip <- grep('ACCOUNT.NAME', readLines(files[i]))-1
data.frame(read.table(files[i], skip=skip, header=TRUE, sep=',',
stringsAsFactors=FALSE))
})
weekly_catches <- do.call(rbind, test)
names(weekly_catches) <- c('species', 'date', 'catch')
weekly_catches <- weekly_catches %>%
## No species for Bering flounder, probably in FHS already
filter(grepl("Flathead", x=species)) %>%
mutate(date=mdy(date), week=week(date),  year=year(date))
# catch_this_year <- weekly_catches %>% filter(year==this_year) %>%
#   pull(catch) %>% sum
## Get average catch between now and end of year for previous 5
## years
catch_to_add <- weekly_catches %>% filter(year>=this_year-5 & week > week(today())) %>%
group_by(year) %>% summarize(catch=sum(catch), .groups='drop') %>%
pull(catch) %>% mean
catch_to_add
message("Predicted ", this_year, " catch= ", round(SS_catch$catch[SS_catch$year == this_year] + catch_to_add,0)) ##9272
#* catches for projection years ----
##  use last 5 years' real data average
projc <- SS_catch %>%
filter(year  < this_year & year  > (this_year-6)) %>%
summarise(mean(catch )) %>% as.numeric()
projc
# catch_this_year <- weekly_catches %>% filter(year==this_year) %>%
#   pull(catch) %>% sum
## Get average catch between now and end of year for previous 5
## years
catch_this_year <- SS_catch$catch[SS_catch$year == this_year]
catch_to_add <- weekly_catches %>% filter(year>=this_year-5 & week > week(today())) %>%
group_by(year) %>% summarize(catch=sum(catch), .groups='drop') %>%
pull(catch) %>% mean
message("Predicted ", this_year, " catch= ", round(catch_this_year+ catch_to_add,0)) ##9272
#* catches for projection years ----
##  use last 5 years' real data average
projc <- SS_catch %>%
filter(year  < this_year & year  > (this_year-6)) %>%
summarise(mean(catch )) %>% as.numeric()
catchvec = matrix(c((last_yr-1),
last_yr,
this_year:(this_year+2),
SS_catch$catch[SS_catch$year == last_yr-1],
SS_catch$catch[SS_catch$year == last_yr],
round(catch_this_year + catch_to_add,0),
projc,
projc), ncol = 2)
catchvec
save(catchvec,file = here('data', paste0(Sys.Date(),"-catches_for_proj.rdata")))
rec_table1 <-
read.table(here('projection','percentdb.out')) %>%
as.data.frame(stringsAsFactors=FALSE) %>%
transmute(scenario=as.numeric(V2), year=as.numeric(V3), metric=V4,
value=as.numeric(V5)) %>%
filter(year %in% (this_year+1:2) & scenario==1 &
metric %in% c('SSBMean','SSBFofl', 'SSBFabc', 'SSBF100', 'Fofl', 'Fabc')) %>%
arrange(year, metric) %>%
pivot_wider(names_from=year, values_from=value)
rec_table1[3:6,3:4] <- rec_table1[3:6,3:4]
rec_table2 <-
read.table(here('projection','alt2_proj.out'), header=TRUE) %>%
filter(Year %in% (this_year+1:2)) %>%
pivot_longer(cols=c(-Stock, -Year), names_to='metric', values_to='value') %>%
pivot_wider(names_from=Year, values_from=value)
rec_table1$scenario <- rec_table2$Stock <- NULL
rec_table2[,2:3] <- rec_table2[,2:3]
rec_table <- bind_rows(rec_table1, rec_table2)
## change order to match SAFE format & magnitudes
rec_table <-rec_table[c(11,6,3,4,5,2,1,1,9,8,8),]
# rec_table[c(1:5,9:11),2:3] <-formatC(rec_table[c(1:5,9:11),2:3] , format="d", big.mark=",")
write.csv(rec_table, 'rec_table.csv', row.names=FALSE)
## load last year's values and make full safe
previous_rec_table <- read.csv("C:/Users/maia.kapur/Work/assessments/2021/BSAI-flathead/projection/Projections/REC_TABLE.CSV")
previous_rec_table[,c('X2022','X2023')] <- apply(previous_rec_table[,c('X2022','X2023')],2,
FUN = function(x) as.numeric(gsub(",","",x)))
previous_rec_table[4:5,] <- previous_rec_table[5:4,]
rec_table[c(1:5,9:11),2:3] <- round(rec_table[c(1:5,9:11),2:3])
rec_table[c(6:8),2:3] <- round(rec_table[c(6:8),2:3],digits = 2)
safe0 <- rbind(c(rep(0.2,3)),
c(rep('3a',3)),
cbind(previous_rec_table[,2:3],
rec_table[,2:3]))
rownames(safe0) <-c('M',
'Tier',
"Projected total (3+) biomass (t)",
"Projected Female spawning biomass (t)",
"B100%",
"B40%",
"B35%",
"FOFL",
"maxFABC",
"FABC",
"OFL (t)",
"maxABC (t)",
"ABC (t)"
)
status = matrix(NA, nrow = 3, ncol = 4)
# colnames(status) <- c(2020,2021,2021,2022)
rownames(status) <- c('Overfishing','Overfished','Approaching Overfished')
status[1,c(1,3)] <- status[2,c(2,4)] <- status[3,c(2,4)] <- 'no'
status = data.frame(status)
names(status) = names(safe0)
safe0 = rbind(safe0,status)
safe = noquote(apply(safe0, 2, function(x) prettyNum(x, big.mark = ",")))
safe
# safe[safe > 10e6] <- safe[safe>10e6]/1000
write.csv(safe, file = here('tables','safe_table.csv'), row.names=TRUE)
ggplot2::theme_set(ggsidekick::theme_sleek( base_size = 10))
theme_replace(text= element_text(family = "roboto condensed", size = 10),
title = element_text(size = 10))
require(MetBrewer)
require(ggtext)
require(showtext)
font_add_google("roboto condensed")
showtext_opts(dpi = 520)
showtext_auto(enable = TRUE)
#* Fig 1 catch/totbio plot ----
## per report.xlsx/Fig1, looks like biomass is from the assessment thru 2016 then values from proj
## the figure caption indicates these are for 3+ but the model was run using age 0 as the summary biomass
## had to rerun with the summary age updated
fig1a <- mod_2020$timeseries %>% select(Yr, Bio_smry) %>%
merge(.,mod_2020$catch %>% select(Yr, Obs), by = 'Yr') %>%
filter(Yr != 2020) %>%
mutate(catch_over_biomass  = Obs/Bio_smry)
catchvec
fig1b <- data.frame(Yr = catchvec[,1],
Bio_smry = pdt %>% filter(Yr < max(catchvec[,1])+1) %>% group_by(Yr) %>%
summarise(Bio_smry = round(mean(Tot_biom),2)) %>% select(Bio_smry) ,
Obs = catchvec[,2]) %>%
mutate(catch_over_biomass  = Obs/Bio_smry)
fig1 <- rbind(fig1a, fig1b)
## plot with diff colors for extrapolated and forecasted catches
ggplot(subset(fig1),
aes(x = Yr, y = catch_over_biomass)) +
geom_line(lwd = 1, col = 'grey77') +
geom_point(data = subset(fig1, Yr > 2021),
lwd = 1,  col = 'blue', pch = 1) +
geom_point(data = subset(fig1, Yr %in% c(2020,2021)),
lwd = 1,  col = 'blue', pch = 16) +
scale_x_continuous(labels = seq(1960,2025,5),
breaks = seq(1960,2025,5))+
scale_y_continuous(limits = c(0,0.08),
breaks = seq(0,0.08,0.01),
labels = seq(0,0.08,0.01))+
labs(x = 'Year', y = 'Catch/Summary Biomass (age 3+)')
ggsave(last_plot(), height = 5, width = 8, dpi = 520,
file = here('figs',paste0(Sys.Date(),'-Fig1_catchvsbio.png')))
require(lubridate)
require(here)
require(dplyr)
## text values
spp = c('Flathead sole','Hippoglossoides esassodon', 'Hippoglossoides spp.', 'Bering flounder')
date_use = "2022-09-28" ## date for figures etc
date_use_long = paste0(month(date_use, label = T), " ",day(date_use),", ",year(date_use))
date_pull = "2022-10-01" ## date the final catch pull was made
date_pull_long = paste0(month(date_pull, label = T), " ",day(date_pull),", ",year(date_pull))
thisyr = lubridate::year(Sys.Date())
lastyr = thisyr-1
nextyr = thisyr+1
proj_years = nextyr:(thisyr+2)
proj_range = paste0(range(proj_years), collapse = "-")
## read tables
load(here('data',paste0(date_use,'-catches_for_proj.rdata'))) ## catchvec
cproj = round(data.frame(catchvec)); names(cproj)=c('year','catch')
surv = round(read.csv(here('data',paste0(date_use,"-ss_survey_index.csv"))))
safe = read.csv(here('tables','safe_table.csv'))
names(safe) <- c("",thisyr,nextyr, nextyr, paste(proj_years[2]))
safe[is.na(safe)] <- "n/a"
kableExtra::kable(safe, format.args = list(big.mark = ','), digits = 2, row.names = FALSE,
caption = paste0("*Projections  are based on estimated catches of ",
format(cproj$catch[cproj$year == thisyr], big.mark = ","),
"t used in place of maximum permissible ABC for ",
thisyr," and ",
format(cproj$catch[cproj$year == proj_years[1]], big.mark = ","),
" t used in place of maximum permissible ABC for ",proj_range,
". The final catch for ",
thisyr,
" was estimated by taking the average tons caught between ",paste0(month(date_pull, label = T), " ",day(date_pull))," and December 31 over the previous 5 years (",paste(range(thisyr-5,lastyr),collapse='-')," and adding this average amount to the catch-to-date as of ", date_pull_long," which is shown at the bottom of Table 1. The ",nextyr," and ", proj_years[2], " catch was estimated as the average of the total catch in each of the last 5 years.")) %>%
kableExtra::kable_styling("striped")
require(lubridate)
require(here)
require(dplyr)
## text values
spp = c('Flathead sole','Hippoglossoides esassodon', 'Hippoglossoides spp.', 'Bering flounder')
date_use = "2022-10-19" ## date for figures etc
date_use_long = paste0(month(date_use, label = T), " ",day(date_use),", ",year(date_use))
date_pull = "2022-10-19" ## date the final catch pull was made
date_pull_long = paste0(month(date_pull, label = T), " ",day(date_pull),", ",year(date_pull))
thisyr = lubridate::year(Sys.Date())
lastyr = thisyr-1
nextyr = thisyr+1
proj_years = nextyr:(thisyr+2)
proj_range = paste0(range(proj_years), collapse = "-")
## read tables
load(here('data',paste0(date_use,'-catches_for_proj.rdata'))) ## catchvec
cproj = round(data.frame(catchvec)); names(cproj)=c('year','catch')
surv = round(read.csv(here('data',paste0(date_use,"-ss_survey_index.csv"))))
date_use
## read tables
load(here('data',paste0(date_use,'-catches_for_proj.rdata'))) ## catchvec
surv = round(read.csv(here('data',paste0("2022-10-18-ss_survey_index.csv"))))
surv = round(read.csv(here('data',paste0("2022-09-28-ss_survey_index.csv"))))
safe = read.csv(here('tables','safe_table.csv'))
names(safe) <- c("",thisyr,nextyr, nextyr, paste(proj_years[2]))
safe[is.na(safe)] <- "n/a"
kableExtra::kable(safe, format.args = list(big.mark = ','), digits = 2, row.names = FALSE,
caption = paste0("*Projections  are based on estimated catches of ",
format(cproj$catch[cproj$year == thisyr], big.mark = ","),
"t used in place of maximum permissible ABC for ",
thisyr," and ",
format(cproj$catch[cproj$year == proj_years[1]], big.mark = ","),
" t used in place of maximum permissible ABC for ",proj_range,
". The final catch for ",
thisyr,
" was estimated by taking the average tons caught between ",paste0(month(date_pull, label = T), " ",day(date_pull))," and December 31 over the previous 5 years (",paste(range(thisyr-5,lastyr),collapse='-'),") and adding this average amount to the catch-to-date as of ", date_pull_long," which is shown at the bottom of Table 1. The ",nextyr," and ", proj_years[2], " catch was estimated as the average of the total catch in each of the last 5 years.")) %>%
kableExtra::kable_styling("striped")
table1 <-  read.csv(here('tables',paste0(date_use,'-catch_proportions.csv')))
date_use
date_use
catch_proportions <- readRDS(here('data',paste0(date_use,'-catches_observer.RDS'))) %>%
group_by(year, species) %>%
summarize(weight=sum(weight)/1000, .groups='drop') %>%
pivot_wider(names_from=species, values_from=weight,values_fill=0) %>%
mutate(prop_bf=Bering_flounder/(Bering_flounder+flathead_sole),
prop_fs=1-prop_bf
) %>%
filter(year>=1995 | year==1992) %>%
merge(.,totals, by='year', all = T) %>%
mutate(total = round(catch),
FHS = round(prop_fs*catch),
BF = round(prop_bf*catch)) %>%
select(year, total, FHS, BF)
write.csv(catch_proportions, file = here('tables',paste0(Sys.Date(),'-catch_proportions.csv')), row.names=FALSE)
table1 <-  read.csv(here('tables',paste0(date_use,'-catch_proportions.csv')))
names(table1) <- c('Year',paste0('Total ',spp[3]), spp[1],spp[4])
table1$Year <- as.character(table1$Year)
kableExtra::kable(table1, format.args = list(big.mark = ','), digits = 2,
caption = paste0("Table 1. Catch (in tons) of flathead sole and Bering flounder combined ", spp[2]," and ", spp[1]," only, and ", spp[3]," only in the BSAI as of ",date_pull_long," Observer data on species-specific extrapolated weight in each haul was summed over hauls within each year and used to calculate the proportion of the total Hippoglossoides spp. catch that was flathead sole or Bering flounder. Proportions were multiplied by the total Hippoglossoides spp. (flathead sole and Bering flounder combined) catches reported by AKFIN to obtain total catch of flathead sole separately from that of Bering flounder. 2022 catches are current as of ",date_pull_long," and do not include projections through the end of the year.")) %>%
kableExtra::kable_styling("striped", font_size = 9)
catch_this_year
readRDS(here('data',paste0(date_use,'-catches_observer.RDS'))) %>%
group_by(year, species) %>%
summarize(weight=sum(weight)/1000, .groups='drop') %>%
pivot_wider(names_from=species, values_from=weight,values_fill=0)
readRDS(here('data',paste0(date_use,'-catches_observer.RDS'))) %>%
group_by(year, species) %>%
summarize(weight=sum(weight)/1000, .groups='drop') %>%
pivot_wider(names_from=species, values_from=weight,values_fill=0) %>% View()
totals
totals <- read.csv(here('data',paste0(date_use,'-catch.csv'))) %>%
group_by(year=YEAR) %>%
summarize(catch=sum(TONS), .groups='drop')
catch_proportions <- readRDS(here('data',paste0(date_use,'-catches_observer.RDS'))) %>%
group_by(year, species) %>%
summarize(weight=sum(weight)/1000, .groups='drop') %>%
pivot_wider(names_from=species, values_from=weight,values_fill=0) %>%
mutate(prop_bf=Bering_flounder/(Bering_flounder+flathead_sole),
prop_fs=1-prop_bf
) %>%
filter(year>=1995 | year==1992) %>%
merge(.,totals, by='year', all = T) %>%
mutate(total = round(catch),
FHS = round(prop_fs*catch),
BF = round(prop_bf*catch)) %>%
select(year, total, FHS, BF)
tail(catch_proportions)
write.csv(catch_proportions, file = here('tables',paste0(Sys.Date(),'-catch_proportions.csv')), row.names=FALSE)
table1 <-  read.csv(here('tables',paste0(date_use,'-catch_proportions.csv')))
names(table1) <- c('Year',paste0('Total ',spp[3]), spp[1],spp[4])
table1$Year <- as.character(table1$Year)
kableExtra::kable(table1, format.args = list(big.mark = ','), digits = 2,
caption = paste0("Table 1. Catch (in tons) of flathead sole and Bering flounder combined ", spp[2]," and ", spp[1]," only, and ", spp[3]," only in the BSAI as of ",date_pull_long," Observer data on species-specific extrapolated weight in each haul was summed over hauls within each year and used to calculate the proportion of the total Hippoglossoides spp. catch that was flathead sole or Bering flounder. Proportions were multiplied by the total Hippoglossoides spp. (flathead sole and Bering flounder combined) catches reported by AKFIN to obtain total catch of flathead sole separately from that of Bering flounder. 2022 catches are current as of ",date_pull_long," and do not include projections through the end of the year.")) %>%
kableExtra::kable_styling("striped", font_size = 9)
catch_this_year
catchvec
table2 <-  read.csv(here('tables',paste0(date_use,'-survey_by_spp.csv')))
table2 <-  read.csv(here('tables',paste0('2022-10-18-survey_by_spp.csv')))
table2 <-  read.csv(here('tables',paste0('2022-09-28-survey_by_spp.csv')))
table2[table2 > 1& !is.na(table2)] <- round(table2[table2 > 1 & !is.na(table2)],0) ## remove decimals on large numbers
table2[table2 < 1& !is.na(table2)] <- round(table2[table2 < 1& !is.na(table2)],2) ## remove excess decimals on small numbers
table2[is.na(table2)] <-""
table2$year <- as.character(table2$year)
names(table2) <- c('Year','Total',
'CV (Total)',
'Biomass (AI)',
'CV (AI)',
'Biomass (EBS, all)',
'CV (EBS, all)',
'Biomass (EBS, flathead)',
'CV (EBS, flathead)',
'Biomass (EBS, Bering Flounder)',
'CV (EBS, Bering Flounder)')
kableExtra::kable(table2, format.args = list(big.mark = ','), digits = 2,
caption = paste0("Table 2. Survey biomass in tons and coefficient of variation (CV) of Hippoglossoides spp. combined (flathead sole and Bering flounder) across the entire BSAI; flathead sole only in the Aleutian Islands, Hippoglossoides spp. combined in the Eastern Bering Sea (EBS) shelf survey, flathead sole only in EBS shelf survey, and Bering flounder only in the EBS shelf survey. Slight discrepancies in totals may occur due to rounding. Bolded years are not included in base model.'Data accessed via Oracle database query on ",date_use_long,".")) %>%
kableExtra::kable_styling("striped", font_size = 9)
table2 <-  read.csv(here('tables',paste0('2022-09-28-survey_by_spp.csv')))
table2[table2 > 1& !is.na(table2)] <- round(table2[table2 > 1 & !is.na(table2)],0) ## remove decimals on large numbers
table2[table2 < 1& !is.na(table2)] <- round(table2[table2 < 1& !is.na(table2)],2) ## remove excess decimals on small numbers
table2[is.na(table2)] <-""
table2$year <- as.character(table2$year)
names(table2) <- c('Year','Total',
'CV (Total)',
'Biomass (AI)',
'CV (AI)',
'Biomass (EBS, all)',
'CV (EBS, all)',
'Biomass (EBS, flathead)',
'CV (EBS, flathead)',
'Biomass (EBS, Bering Flounder)',
'CV (EBS, Bering Flounder)')
kableExtra::kable(table2, format.args = list(big.mark = ','), digits = 2,
caption = paste0("Table 2. Survey biomass in tons and coefficient of variation (CV) of Hippoglossoides spp. combined (flathead sole and Bering flounder) across the entire BSAI; flathead sole only in the Aleutian Islands, Hippoglossoides spp. combined in the Eastern Bering Sea (EBS) shelf survey, flathead sole only in EBS shelf survey, and Bering flounder only in the EBS shelf survey. Slight discrepancies in totals may occur due to rounding. Bolded years are not included in base model.'Data accessed via Oracle database query on ",date_use_long,".")) %>%
kableExtra::kable_styling("striped", font_size = 9)
table3 <- read.csv(here('tables',paste0(date_use,'-NBS_survey_by_spp.csv')))
table3 <- read.csv(here('tables',paste0('2022-09-28-NBS_survey_by_spp.csv')))
table3[table3 > 1& !is.na(table3)] <- round(table3[table3 > 1 & !is.na(table3)],0) ## remove decimals on large numbers
table3[table3 < 1& !is.na(table3)] <- round(table3[table3 < 1& !is.na(table3)],2) ## remove excess decimals on small numbers
table3[is.na(table3)] <-""
table3$year <- as.character(table3$year)
names(table3) <- c('Year',
'Biomass (Total)',
'CV (Total)',
'Biomass (NBS, flathead)',
'CV (NBS, flathead)',
'Biomass (NBS, Bering Flounder)',
'CV (NBS, Bering Flounder)')
kableExtra::kable(table3, format.args = list(big.mark = ','),
caption = paste0("Table 3. Northern Bering Sea survey biomass (t) and coefficient of variation (CV) for flathead sole, Bering flounder, and the two combined (Hippoglossoides spp.).  These data are not included in the base model and are presented here for reference only. Data accessed via Oracle database query on ",date_use_long,"."))%>%
kableExtra::kable_styling("striped", font_size = 9)
knitr::include_graphics(here('figs','2022-10-19-Fig1_catchvsbio.png'))
knitr::include_graphics(here('figs','2022-10-18-index_wCVs.png'))
## load prior index to check for changes
index21 <- read.csv( "C:/Users/maia.kapur/Work/assessments/2021/bsai-flathead/data/2021-09-22-ss_survey_index.csv") %>%
mutate(lci = obs-se_log*obs, uci = se_log*obs+obs)  %>%
mutate(lmyr = NA)
ggplot(index, aes(x = year, y = obs/1000)) +
geom_line(lwd = 1, col = 'grey77') +
# geom_point() +
geom_point(data = subset(index, lmyr == T), pch = 4, color = 'grey44') +
geom_point(data = subset(index, lmyr == F), color = 'grey44')+
geom_point(data = subset(index, year > 2020), color = 'blue') +
scale_x_continuous(labels = seq(1980,2025,5),
breaks = seq(1980,2025,5))+
scale_y_continuous(limits = c(0,1000) ) +
labs(x = 'Year', y = 'Survey Biomass (1000 mt)')+
geom_ribbon(aes(ymin =lci/1000, ymax = uci/1000 ),alpha = 0.2)
ggsave(last_plot(), height = 6, width = 10, dpi = 520,
file = here('figs',paste0(Sys.Date(),'-index_wCVs.png')))
mod_2020$cpue
range(mod_2020$cpue$Yr)
index
index_raw
tail(index_raw)
index
ggplot(index, aes(x = year, y = obs/1000)) +
geom_line(lwd = 1, col = 'grey77') +
# geom_point() +
geom_point(data = subset(index, lmyr == T), pch = 4, color = 'grey44') +
geom_point(data = subset(index, lmyr == F), color = 'grey44')+
geom_point(data = subset(index, year == 2021), pch = 4 color = 'blue') +
ggplot(index, aes(x = year, y = obs/1000)) +
geom_line(lwd = 1, col = 'grey77') +
# geom_point() +
geom_point(data = subset(index, lmyr == T), pch = 4, color = 'grey44') +
geom_point(data = subset(index, lmyr == F), color = 'grey44')+
geom_point(data = subset(index, year == 2021), pch = 4, color = 'blue') +
geom_point(data = subset(index, year == 2022), color = 'blue') +
scale_x_continuous(labels = seq(1980,2025,5),
breaks = seq(1980,2025,5))+
scale_y_continuous(limits = c(0,1000) ) +
labs(x = 'Year', y = 'Survey Biomass (1000 mt)')+
geom_ribbon(aes(ymin =lci/1000, ymax = uci/1000 ),alpha = 0.2)
ggplot(index, aes(x = year, y = obs/1000)) +
geom_line(lwd = 1, col = 'grey77') +
# geom_point() +
geom_point(data = subset(index, lmyr == T), pch = 4, color = 'grey44') +
geom_point(data = subset(index, lmyr == F), color = 'grey44')+
geom_point(data = subset(index, year == 2021), pch = 4, size = 4, color = 'blue') +
geom_point(data = subset(index, year == 2022), color = 'blue') +
scale_x_continuous(labels = seq(1980,2025,5),
breaks = seq(1980,2025,5))+
scale_y_continuous(limits = c(0,1000) ) +
labs(x = 'Year', y = 'Survey Biomass (1000 mt)')+
geom_ribbon(aes(ymin =lci/1000, ymax = uci/1000 ),alpha = 0.2)
ggplot(index, aes(x = year, y = obs/1000)) +
geom_line(lwd = 1, col = 'grey77') +
# geom_point() +
geom_point(data = subset(index, lmyr == T), pch = 4, color = 'grey44') +
geom_point(data = subset(index, lmyr == F), color = 'grey44')+
geom_point(data = subset(index, year == 2021), pch = 4, size = 2, color = 'blue') +
geom_point(data = subset(index, year == 2022), color = 'blue') +
scale_x_continuous(labels = seq(1980,2025,5),
breaks = seq(1980,2025,5))+
scale_y_continuous(limits = c(0,1000) ) +
labs(x = 'Year', y = 'Survey Biomass (1000 mt)')+
geom_ribbon(aes(ymin =lci/1000, ymax = uci/1000 ),alpha = 0.2)
ggplot(index, aes(x = year, y = obs/1000)) +
geom_line(lwd = 1, col = 'grey66') +
# geom_point() +
geom_point(data = subset(index, lmyr == T), pch = 4, color = 'grey66') +
geom_point(data = subset(index, lmyr == F), color = 'grey66')+
geom_point(data = subset(index, year == 2021), pch = 4, size = 2, color = 'blue') +
geom_point(data = subset(index, year == 2022), color = 'blue') +
scale_x_continuous(labels = seq(1980,2025,5),
breaks = seq(1980,2025,5))+
scale_y_continuous(limits = c(0,1000) ) +
labs(x = 'Year', y = 'Survey Biomass (1000 mt)')+
geom_ribbon(aes(ymin =lci/1000, ymax = uci/1000 ),alpha = 0.2)
ggplot(index, aes(x = year, y = obs/1000)) +
geom_line(lwd = 1, col = 'grey66') +
# geom_point() +
geom_point(data = subset(index, lmyr == T), pch = 4, color = 'grey66') +
geom_point(data = subset(index, lmyr == F), color = 'grey66')+
geom_point(data = subset(index, year == 2021), pch = 4, size = 2, color = 'blue') +
geom_point(data = subset(index, year == 2022), color = 'blue') +
scale_x_continuous(labels = seq(1980,2025,5),
breaks = seq(1980,2025,5))+
scale_y_continuous(limits = c(0,1000) ) +
labs(x = 'Year', y = 'Survey Biomass (1000 mt)')+
geom_ribbon(aes(ymin =lci/1000, ymax = uci/1000 ),alpha = 0.1)
ggplot(index, aes(x = year, y = obs/1000)) +
geom_line(lwd = 1, col = 'grey77') +
# geom_point() +
geom_point(data = subset(index, lmyr == T), pch = 4, color = 'grey66') +
geom_point(data = subset(index, lmyr == F), color = 'grey66')+
geom_point(data = subset(index, year == 2021), pch = 4, size = 2, color = 'blue') +
geom_point(data = subset(index, year == 2022), color = 'blue') +
scale_x_continuous(labels = seq(1980,2025,5),
breaks = seq(1980,2025,5))+
scale_y_continuous(limits = c(0,1000) ) +
labs(x = 'Year', y = 'Survey Biomass (1000 mt)')+
geom_ribbon(aes(ymin =lci/1000, ymax = uci/1000 ),alpha = 0.1)
ggplot(index, aes(x = year, y = obs/1000)) +
geom_line(lwd = 1, col = 'grey77') +
# geom_point() +
geom_point(data = subset(index, lmyr == T), pch = 4, color = 'grey77') +
geom_point(data = subset(index, lmyr == F), color = 'grey77')+
geom_point(data = subset(index, year == 2021), pch = 4, size = 2, color = 'blue') +
geom_point(data = subset(index, year == 2022), color = 'blue') +
scale_x_continuous(labels = seq(1980,2025,5),
breaks = seq(1980,2025,5))+
scale_y_continuous(limits = c(0,1000) ) +
labs(x = 'Year', y = 'Survey Biomass (1000 mt)')+
geom_ribbon(aes(ymin =lci/1000, ymax = uci/1000 ),alpha = 0.1)
ggplot(index, aes(x = year, y = obs/1000)) +
geom_line(lwd = 1, col = 'grey77') +
# geom_point() +
geom_point(data = subset(index, lmyr == T), pch = 4, color = 'grey66') +
geom_point(data = subset(index, lmyr == F), color = 'grey77')+
geom_point(data = subset(index, year == 2021), pch = 4, size = 2, color = 'blue') +
geom_point(data = subset(index, year == 2022), color = 'blue') +
scale_x_continuous(labels = seq(1980,2025,5),
breaks = seq(1980,2025,5))+
scale_y_continuous(limits = c(0,1000) ) +
labs(x = 'Year', y = 'Survey Biomass (1000 mt)')+
geom_ribbon(aes(ymin =lci/1000, ymax = uci/1000 ),alpha = 0.1)
ggplot(index, aes(x = year, y = obs/1000)) +
geom_line(lwd = 1, col = 'grey77') +
# geom_point() +
geom_point(data = subset(index, lmyr == T), pch = 4, color = 'grey66') +
# geom_point(data = subset(index, lmyr == F), color = 'grey77')+
geom_point(data = subset(index, year == 2021), pch = 4, size = 2, color = 'blue') +
geom_point(data = subset(index, year == 2022), color = 'blue') +
scale_x_continuous(labels = seq(1980,2025,5),
breaks = seq(1980,2025,5))+
scale_y_continuous(limits = c(0,1000) ) +
labs(x = 'Year', y = 'Survey Biomass (1000 mt)')+
geom_ribbon(aes(ymin =lci/1000, ymax = uci/1000 ),alpha = 0.1)
ggplot(index, aes(x = year, y = obs/1000)) +
geom_line(lwd = 1, col = 'grey77') +
# geom_point() +
geom_point(data = subset(index, lmyr == T), pch = 4, color = 'grey66') +
geom_point(data = subset(index, lmyr == F), color = 'grey66')+
geom_point(data = subset(index, year == 2021), pch = 4, size = 2, color = 'blue') +
geom_point(data = subset(index, year == 2022), color = 'blue') +
scale_x_continuous(labels = seq(1980,2025,5),
breaks = seq(1980,2025,5))+
scale_y_continuous(limits = c(0,1000) ) +
labs(x = 'Year', y = 'Survey Biomass (1000 mt)')+
geom_ribbon(aes(ymin =lci/1000, ymax = uci/1000 ),alpha = 0.1)
ggsave(last_plot(), height = 6, width = 10, dpi = 520,
file = here('figs',paste0(Sys.Date(),'-index_wCVs.png')))
988-500
988-344
66927-65988
catchvec
require(lubridate)
require(here)
require(dplyr)
## text values
spp = c('Flathead sole','Hippoglossoides elassodon', 'Hippoglossoides spp.', 'Bering flounder')
date_use = "2022-10-19" ## date for figures etc
date_use_long = paste0(month(date_use, label = T), " ",day(date_use),", ",year(date_use))
date_pull = "2022-10-19" ## date the final catch pull was made
date_pull_long = paste0(month(date_pull, label = T), " ",day(date_pull),", ",year(date_pull))
thisyr = lubridate::year(Sys.Date())
lastyr = thisyr-1
nextyr = thisyr+1
proj_years = nextyr:(thisyr+2)
proj_range = paste0(range(proj_years), collapse = "-")
## read tables
load(here('data',paste0(date_use,'-catches_for_proj.rdata'))) ## catchvec
cproj = round(data.frame(catchvec)); names(cproj)=c('year','catch')
surv = round(read.csv(here('data',paste0("2022-09-28-ss_survey_index.csv"))))
knitr::include_graphics(here('figs','2022-10-19-index_wCVs.png'))
