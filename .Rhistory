dev.off()
2+2
mypks <- readRDS("c:/users/maia.kapur/downloads/mypks.rds")
install.packages(mypks)
install.packages(mypks)
install.packages(mypks)
install.packages(mypks)
remotes::install_github("r4ss/r4ss")
require(r4ss)
require(here)
require(tidyverse)
base_model <- SS_output(here('model_runs','m0_8-newMI-biasAdj'), covar=TRUE, verbose=FALSE, printstats=FALSE)
require(lubridate)
require(here)
require(dplyr)
## text values
spp = c('Flathead sole','Hippoglossoides esassodon', 'Hippoglossoides spp.', 'Bering flounder')
date_use = "2022-09-28" ## for file loading
date_use_long = paste0(month(date_use, label = T), " ",day(date_use),", ",year(date_use))
date_pull = "2022-10-01"
date_pull_long = paste0(month(date_pull, label = T), " ",day(date_pull),", ",year(date_pull))
thisyr = lubridate::year(Sys.Date())
lastyr = thisyr-1
nextyr = thisyr+1
proj_years = nextyr:(thisyr+2)
proj_range = paste0(range(proj_years), collapse = "-")
## read tables
load(here('data',paste0(date_use,'-catches_for_proj.rdata'))) ## catchvec
cproj = round(data.frame(catchvec)); names(cproj)=c('year','catch')
surv = round(read.csv(here('data',paste0(date_use,"-ss_survey_index.csv"))))
table2 <-  read.csv(here('tables',paste0(date_use,'-survey_by_spp.csv')))
table2
head(table2)
round(table2[table2 > 1])
table2 <-  read.csv(here('tables',paste0(date_use,'-survey_by_spp.csv')))
table2[table2 > 1] <- round(table2[table2 > 1]) ## remove decimals on large numbers
table2 <-  read.csv(here('tables',paste0(date_use,'-survey_by_spp.csv')))
table2[table2 > 1]
round(table2[table2 > 1]) #
table2[table2 > 1] <- round(table2[table2 > 1]) ## remove decimals on large numbers
?round
table2[table2 > 1] <- round(table2[table2 > 1],0) ## remove decimals on large numbers
table2 <-  read.csv(here('tables',paste0(date_use,'-survey_by_spp.csv')))
table2[table2 > 1]
round(table2[table2 > 1],0) ## r
table2[table2 > 1] <- round(table2[table2 > 1],0) ## remove decimals on large numbers
table2[table2 < 1] <- round(table2[table2 < 1],2) ## remove excess decimals on small numbers
?kable
kableExtra::kable(table2, format.args = list(big.mark = ','), digits = 0,
caption = paste0("Table 2. Survey biomass in tons and coefficient of variation (CV) of Hippoglossoides spp. combined (flathead sole and Bering flounder) across the entire BSAI; flathead sole only in the Aleutian Islands, Hippoglossoides spp. combined in the Eastern Bering Sea (EBS) shelf survey, flathead sole only in EBS shelf survey, and Bering flounder only in the EBS shelf survey. Slight discrepancies in totals may occur due to rounding. Bolded years are not included in base model.'Data accessed via Oracle database query on ",date_use_long,".")) %>%
kableExtra::kable_styling("striped")
kableExtra::kable(table2, format.args = list(big.mark = ','), digits = 2,
caption = paste0("Table 2. Survey biomass in tons and coefficient of variation (CV) of Hippoglossoides spp. combined (flathead sole and Bering flounder) across the entire BSAI; flathead sole only in the Aleutian Islands, Hippoglossoides spp. combined in the Eastern Bering Sea (EBS) shelf survey, flathead sole only in EBS shelf survey, and Bering flounder only in the EBS shelf survey. Slight discrepancies in totals may occur due to rounding. Bolded years are not included in base model.'Data accessed via Oracle database query on ",date_use_long,".")) %>%
kableExtra::kable_styling("striped")
summary(table2)
class(table2[table2 >1])
class(round(table2[table2 > 1],0) ## remove)
)
length( round(table2[table2 > 1],0))
length(table2[table2 > 1] )
table2[table2 > 1] <- round(table2[table2 > 1],0) ## remove decimals on large numbers
table2$year
class(table2$year)
table2$year <- as.character(table2$year)
table2[table2 > 1] <- round(table2[table2 > 1],0) ## remove decimals on large numbers
table2$year <- as.numeric(table2$year)
table2[table2 > 1] <- round(table2[table2 > 1],0) ## remove decimals on large numbers
table2 <-  read.csv(here('tables',paste0(date_use,'-survey_by_spp.csv')))
table2[table2 > 1& !is.na(table2)] <- round(table2[table2 > 1 & !is.na(table2)],0) ## remove decimals on large numbers
table2
format(surv$obs[surv$year == 2021], big.mark = ",")
surv
last(surv$obs)
format(surv$obs[surv$year == 2021], big.mark = ",")
format(last(surv$obs), big.mark = ",")
40/600
(last(surv$obs)-surv$obs[surv$year == 2021])/surv$obs[surv$year == 2021]
(last(surv$obs)-surv$obs[surv$year == 2021])/surv$obs[surv$year == 2021]*100
round((last(surv$obs)-surv$obs[surv$year == 2021])/surv$obs[surv$year == 2021]*100,0)
cproj
date_pull
?kable_styling
round((last(surv$obs)-surv$obs[surv$year == 2021])/surv$obs[surv$year == 2021]*100,0)
cproj
thisyr
format(cproj$catch[cproj$year == thisyr], big.mark = ",")
format(cproj$catch[cproj$year == nextyr], big.mark = ",")
here('data',paste0(date_use,'-ss_survey_index.csv')
)
require(here)
require(dplyr)
require(here)
require(ggplot2)
require(r4ss)
library(tidyverse)
here('data',paste0(date_use,'-ss_survey_index.csv')
)
## load prior index to check for changes
index21 <- read.csv( "C:/Users/maia.kapur/Work/assessments/2021/bsai-flathead/data/2021-09-22-ss_survey_index.csv") %>%
mutate(lci = obs-se_log*obs, uci = se_log*obs+obs) %>%
mutate(lmyr = year %in% interpyr)
## load prior index to check for changes
index21 <- read.csv( "C:/Users/maia.kapur/Work/assessments/2021/bsai-flathead/data/2021-09-22-ss_survey_index.csv") %>%
mutate(lci = obs-se_log*obs, uci = se_log*obs+obs)
index21
ggplot(index, aes(x = year, y = obs/1000)) +
geom_line(lwd = 1, col = 'grey77') +
# geom_point() +
geom_point(data = subset(index, lmyr == T), pch = 4, color = 'grey44') +
geom_point(data = subset(index, year > 2020), color = 'blue') +
geom_point(data = subset(index21 ), color = 'red') +
scale_x_continuous(labels = seq(1980,2025,5),
breaks = seq(1980,2025,5))+
scale_y_continuous(limits = c(0,1000) ) +
labs(x = 'Year', y = 'Survey Biomass (1000 mt)')+
geom_ribbon(aes(ymin =lci/1000, ymax = uci/1000 ),alpha = 0.2)
ggplot(index, aes(x = year, y = obs/1000)) +
geom_line(lwd = 1, col = 'grey77') +
# geom_point() +
geom_point(data = subset(index, lmyr == T), pch = 4, color = 'grey44') +
geom_point(data = subset(index, year > 2020), color = 'blue') +
geom_point(data = index21, color = 'red') +
scale_x_continuous(labels = seq(1980,2025,5),
breaks = seq(1980,2025,5))+
scale_y_continuous(limits = c(0,1000) ) +
labs(x = 'Year', y = 'Survey Biomass (1000 mt)')+
geom_ribbon(aes(ymin =lci/1000, ymax = uci/1000 ),alpha = 0.2)
## load prior index to check for changes
index21 <- read.csv( "C:/Users/maia.kapur/Work/assessments/2021/bsai-flathead/data/2021-09-22-ss_survey_index.csv") %>%
mutate(lci = obs-se_log*obs, uci = se_log*obs+obs)  %>%
mutate(lmyr = NA)
ggplot(index, aes(x = year, y = obs/1000)) +
geom_line(lwd = 1, col = 'grey77') +
# geom_point() +
geom_point(data = subset(index, lmyr == T), pch = 4, color = 'grey44') +
geom_point(data = subset(index, year > 2020), color = 'blue') +
geom_point(data = index21, color = 'red') +
scale_x_continuous(labels = seq(1980,2025,5),
breaks = seq(1980,2025,5))+
scale_y_continuous(limits = c(0,1000) ) +
labs(x = 'Year', y = 'Survey Biomass (1000 mt)')+
geom_ribbon(aes(ymin =lci/1000, ymax = uci/1000 ),alpha = 0.2)
#* index plot ----
# index <- read.csv(here('data','2021-09-15-index.csv'))
index <- read.csv(here('data',paste0(date_use,'-ss_survey_index.csv'))) %>%
mutate(lci = obs-se_log*obs, uci = se_log*obs+obs) %>%
mutate(lmyr = year %in% interpyr)
#** reformat surveys ----
date_use <-  "2022-09-28" #Sys.Date() ### dwnld date
data_folder = here('data','/')
index_ebs <-  read.csv(paste0(data_folder,date_use,"-biomass_survey_ebs.csv")) %>%
select(year=YEAR, biomass=BIOMASS,
variance=VARBIO) %>% cbind(survey='ebs')
index_ai <- read.csv(paste0(data_folder,date_use,'-biomass_survey_ai.csv')) %>%
mutate(species=gsub(" ", "_",COMMON_NAME)) %>%
select(year=YEAR, biomass=TOTAL_BIOMASS,
variance=BIOMASS_VAR) %>% cbind(survey='AI')
index_raw <- rbind(index_ebs, index_ai) %>%
pivot_wider(names_from=survey, values_from=c(biomass, variance))
## Do a linear regression to get missing AI years
index_raw  <- index_raw %>% mutate(sd_ebs=sqrt(variance_ebs), sd_AI=sqrt(variance_AI))
interpyr <- index_raw$year[which(is.na(index_raw$biomass_AI))]
#* index plot ----
# index <- read.csv(here('data','2021-09-15-index.csv'))
index <- read.csv(here('data',paste0(date_use,'-ss_survey_index.csv'))) %>%
mutate(lci = obs-se_log*obs, uci = se_log*obs+obs) %>%
mutate(lmyr = year %in% interpyr)
ggplot(index, aes(x = year, y = obs/1000)) +
geom_line(lwd = 1, col = 'grey77') +
# geom_point() +
geom_point(data = subset(index, lmyr == T), pch = 4, color = 'grey44') +
geom_point(data = subset(index, year > 2020), color = 'blue') +
geom_point(data = index21, color = 'red') +
scale_x_continuous(labels = seq(1980,2025,5),
breaks = seq(1980,2025,5))+
scale_y_continuous(limits = c(0,1000) ) +
labs(x = 'Year', y = 'Survey Biomass (1000 mt)')+
geom_ribbon(aes(ymin =lci/1000, ymax = uci/1000 ),alpha = 0.2)
## plot with diff colors for extrapolated and forecasted catches
ggplot(subset(fig1, Yr < this_year),
aes(x = Yr, y = catch_over_biomass)) +
geom_line(lwd = 1, col = 'grey44') +
# geom_point(data = subset(fig1, Yr==2020),
#           size = 3, col = 'grey44') +
geom_point(data = subset(fig1, Yr >= this_year-1),
lwd = 1, l  col = 'blue') +
#* Fig 1 catch/totbio plot ----
## per report.xlsx/Fig1, looks like biomass is from the assessment thru 2016 then values from proj
## the figure caption indicates these are for 3+ but the model was run using age 0 as the summary biomass
## had to rerun with the summary age updated
fig1a <- mod_2020$timeseries %>% select(Yr, Bio_smry) %>%
merge(.,mod_2020$catch %>% select(Yr, Obs), by = 'Yr') %>%
filter(Yr != 2020) %>%
mutate(catch_over_biomass  = Obs/Bio_smry)
fig1b <- data.frame(Yr = catchvec[,1],
Bio_smry = pdt %>% filter(Yr < max(catchvec[,1])+1) %>% group_by(Yr) %>%
summarise(Bio_smry = round(mean(Tot_biom),2)) %>% select(Bio_smry) ,
Obs = catchvec[,2]) %>%
mutate(catch_over_biomass  = Obs/Bio_smry)
fig1 <- rbind(fig1a, fig1b)
## plot with diff colors for extrapolated and forecasted catches
ggplot(subset(fig1, Yr < this_year),
aes(x = Yr, y = catch_over_biomass)) +
geom_line(lwd = 1, col = 'grey44') +
# geom_point(data = subset(fig1, Yr==2020),
#           size = 3, col = 'grey44') +
geom_point(data = subset(fig1, Yr >= this_year-1),
lwd = 1,  col = 'blue') +
scale_x_continuous(labels = seq(1960,2025,5),
breaks = seq(1960,2025,5))+
scale_y_continuous(limits = c(0,0.08),
breaks = seq(0,0.08,0.01),
labels = seq(0,0.08,0.01))+
labs(x = 'Year', y = 'Catch/Summary Biomass (age 3+)')
font_add_google("roboto condensed")
require(MetBrewer)
require(ggtext)
require(showtext)
# theme_set(ggsidekick::theme_sleek())
font_add_google("roboto condensed")
theme_replace(text= element_text(family = "roboto condensed", size = 15),
title = element_text(size = 15))
ggplot(., aes(x = Yr,y = value, color = variable, group = variable)) +
geom_line(lwd = 1.1) +
scale_x_continuous(limits = c(1995,2025),
breaks =  seq(1995,2025,5),
labels = seq(1995,2025,5)) +
# scale_color_manual(values = cbpal,
#                    labels = c('TAC','ABC','OFL',"Catches in Base Model", "Catches used in Projections" ))+
# annotate('text', x = rep(2020.5,4), y = c(47500,40000,30000, 4500),
#          label = c('OFL','ABC','TAC','Catches'),
#          color = c(cbpal[3:1],'grey44'), size = 6)+
scale_color_manual(values = cbpal,
labels = c('TAC','ABC',"Catches in Base Model", "Catches used in Projections" ))+
annotate('text', x = rep(2020.5,3),
y = c(75000,30000, 4500),
label = c('ABC','TAC','Catches'),
color = c(cbpal[2:1],'grey44'), size = 6)+
labs(x = 'Year', y = 'Catch or Harvest Spex (t)', color = '')
## plot with diff colors for extrapolated and forecasted catches
ggplot(subset(fig1, Yr < this_year),
aes(x = Yr, y = catch_over_biomass)) +
geom_line(lwd = 1, col = 'grey44') +
ggsidekick::theme_sleek()
## plot with diff colors for extrapolated and forecasted catches
ggplot(subset(fig1, Yr < this_year),
aes(x = Yr, y = catch_over_biomass)) +
geom_line(lwd = 1, col = 'grey44') +
# geom_point(data = subset(fig1, Yr==2020),
#           size = 3, col = 'grey44') +
geom_point(data = subset(fig1, Yr >= this_year-1),
lwd = 1,  col = 'blue') +
scale_x_continuous(labels = seq(1960,2025,5),
breaks = seq(1960,2025,5))+
scale_y_continuous(limits = c(0,0.08),
breaks = seq(0,0.08,0.01),
labels = seq(0,0.08,0.01))+
labs(x = 'Year', y = 'Catch/Summary Biomass (age 3+)')
theme_set(ggsidekick::theme_sleek())
font_add_google("roboto condensed")
theme_replace(text= element_text(family = "roboto condensed", size = 15),
title = element_text(size = 15))
## plot with diff colors for extrapolated and forecasted catches
ggplot(subset(fig1, Yr < this_year),
aes(x = Yr, y = catch_over_biomass)) +
geom_line(lwd = 1, col = 'grey44') +
# geom_point(data = subset(fig1, Yr==2020),
#           size = 3, col = 'grey44') +
geom_point(data = subset(fig1, Yr >= this_year-1),
lwd = 1,  col = 'blue') +
scale_x_continuous(labels = seq(1960,2025,5),
breaks = seq(1960,2025,5))+
scale_y_continuous(limits = c(0,0.08),
breaks = seq(0,0.08,0.01),
labels = seq(0,0.08,0.01))+
labs(x = 'Year', y = 'Catch/Summary Biomass (age 3+)')
## plot with diff colors for extrapolated and forecasted catches
ggplot(subset(fig1),
aes(x = Yr, y = catch_over_biomass)) +
geom_line(lwd = 1, col = 'grey44') +
# geom_point(data = subset(fig1, Yr==2020),
#           size = 3, col = 'grey44') +
geom_point(data = subset(fig1, Yr >= this_year-1),
lwd = 1,  col = 'blue') +
scale_x_continuous(labels = seq(1960,2025,5),
breaks = seq(1960,2025,5))+
scale_y_continuous(limits = c(0,0.08),
breaks = seq(0,0.08,0.01),
labels = seq(0,0.08,0.01))+
labs(x = 'Year', y = 'Catch/Summary Biomass (age 3+)')
## plot with diff colors for extrapolated and forecasted catches
ggplot(subset(fig1),
aes(x = Yr, y = catch_over_biomass)) +
geom_line(lwd = 1, col = 'grey66') +
# geom_point(data = subset(fig1, Yr==2020),
#           size = 3, col = 'grey44') +
geom_point(data = subset(fig1, Yr >= this_year-1),
lwd = 1,  col = 'blue') +
scale_x_continuous(labels = seq(1960,2025,5),
breaks = seq(1960,2025,5))+
scale_y_continuous(limits = c(0,0.08),
breaks = seq(0,0.08,0.01),
labels = seq(0,0.08,0.01))+
labs(x = 'Year', y = 'Catch/Summary Biomass (age 3+)')
## plot with diff colors for extrapolated and forecasted catches
ggplot(subset(fig1),
aes(x = Yr, y = catch_over_biomass)) +
geom_line(lwd = 1, col = 'grey77') +
# geom_point(data = subset(fig1, Yr==2020),
#           size = 3, col = 'grey44') +
geom_point(data = subset(fig1, Yr >= this_year-1),
lwd = 1,  col = 'blue') +
scale_x_continuous(labels = seq(1960,2025,5),
breaks = seq(1960,2025,5))+
scale_y_continuous(limits = c(0,0.08),
breaks = seq(0,0.08,0.01),
labels = seq(0,0.08,0.01))+
labs(x = 'Year', y = 'Catch/Summary Biomass (age 3+)')
ggsave(last_plot(), height = 5, width = 8, dpi = 520,
file = here('figs',paste0(Sys.Date(),'-Fig1_catchvsbio.png')))
require(lubridate)
require(here)
require(dplyr)
## text values
spp = c('Flathead sole','Hippoglossoides esassodon', 'Hippoglossoides spp.', 'Bering flounder')
date_use = "2022-09-28" ## date for figures etc
date_use_long = paste0(month(date_use, label = T), " ",day(date_use),", ",year(date_use))
date_pull = "2022-10-01" ## date the final catch pull was made
date_pull_long = paste0(month(date_pull, label = T), " ",day(date_pull),", ",year(date_pull))
thisyr = lubridate::year(Sys.Date())
lastyr = thisyr-1
nextyr = thisyr+1
proj_years = nextyr:(thisyr+2)
proj_range = paste0(range(proj_years), collapse = "-")
## read tables
load(here('data',paste0(date_use,'-catches_for_proj.rdata'))) ## catchvec
cproj = round(data.frame(catchvec)); names(cproj)=c('year','catch')
surv = round(read.csv(here('data',paste0(date_use,"-ss_survey_index.csv"))))
knitr::include_graphics( '2022-10-07-Fig1_catchvsbio.png')
knitr::include_graphics( '2022-10-07-Fig1_catchvsbio.png')
